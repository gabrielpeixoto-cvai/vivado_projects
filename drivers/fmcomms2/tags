!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AD9361_API_H_	ad9361_api.h	40;"	d
AD9361_InitParam	ad9361_api.h	/^}AD9361_InitParam;$/;"	t	typeref:struct:__anon2
AD9361_RXFIRConfig	ad9361_api.h	/^}AD9361_RXFIRConfig;$/;"	t	typeref:struct:__anon3
AD9361_RX_0_BASEADDR	parameters.h	51;"	d
AD9361_RX_0_BASEADDR	parameters.h	54;"	d
AD9361_RX_1_BASEADDR	parameters.h	58;"	d
AD9361_RX_1_BASEADDR	parameters.h	62;"	d
AD9361_RX_1_BASEADDR	parameters.h	65;"	d
AD9361_TXFIRConfig	ad9361_api.h	/^}AD9361_TXFIRConfig;$/;"	t	typeref:struct:__anon4
AD9361_TX_0_BASEADDR	parameters.h	52;"	d
AD9361_TX_0_BASEADDR	parameters.h	55;"	d
AD9361_TX_1_BASEADDR	parameters.h	59;"	d
AD9361_TX_1_BASEADDR	parameters.h	63;"	d
AD9361_TX_1_BASEADDR	parameters.h	66;"	d
ADC_ADC_DATA_SEL	adc_core.h	115;"	d
ADC_ADC_PN_SEL	adc_core.h	113;"	d
ADC_CLK	ad9361.h	/^	ADC_CLK,$/;"	e	enum:ad9361_clocks
ADC_CLK_DIV_16	ad9361.h	/^	ADC_CLK_DIV_16,$/;"	e	enum:ad9361_clkout
ADC_CLK_DIV_2	ad9361.h	/^	ADC_CLK_DIV_2,$/;"	e	enum:ad9361_clkout
ADC_CLK_DIV_3	ad9361.h	/^	ADC_CLK_DIV_3,$/;"	e	enum:ad9361_clkout
ADC_CLK_DIV_4	ad9361.h	/^	ADC_CLK_DIV_4,$/;"	e	enum:ad9361_clkout
ADC_CLK_DIV_8	ad9361.h	/^	ADC_CLK_DIV_8,$/;"	e	enum:ad9361_clkout
ADC_CORE_API_H_	adc_core.h	40;"	d
ADC_DATA_SEL_LB	platform.h	/^	ADC_DATA_SEL_LB, \/* DAC loopback *\/$/;"	e	enum:adc_data_sel
ADC_DATA_SEL_NORM	platform.h	/^	ADC_DATA_SEL_NORM,$/;"	e	enum:adc_data_sel
ADC_DATA_SEL_RAMP	platform.h	/^	ADC_DATA_SEL_RAMP, \/* TBD *\/$/;"	e	enum:adc_data_sel
ADC_DCFILT_COEFF	adc_core.h	103;"	d
ADC_DCFILT_ENB	adc_core.h	88;"	d
ADC_DCFILT_OFFSET	adc_core.h	101;"	d
ADC_DDR_BASEADDR	parameters.h	102;"	d
ADC_DDR_BASEADDR	parameters.h	105;"	d
ADC_DDR_BASEADDR	parameters.h	80;"	d
ADC_DDR_EDGESEL	adc_core.h	57;"	d
ADC_DMA_BUSWIDTH	adc_core.h	80;"	d
ADC_DMA_COUNT	adc_core.h	71;"	d
ADC_DMA_OVF	adc_core.h	75;"	d
ADC_DMA_START	adc_core.h	68;"	d
ADC_DMA_STATUS	adc_core.h	77;"	d
ADC_DMA_STREAM	adc_core.h	67;"	d
ADC_DMA_UNF	adc_core.h	76;"	d
ADC_ENABLE	adc_core.h	93;"	d
ADC_FORMAT_ENABLE	adc_core.h	91;"	d
ADC_FORMAT_SIGNEXT	adc_core.h	89;"	d
ADC_FORMAT_TYPE	adc_core.h	90;"	d
ADC_FREQ	ad9361.h	/^	ADC_FREQ,$/;"	e	enum:ad9361_pdata_rx_freq
ADC_IQCOR_COEFF_1	adc_core.h	107;"	d
ADC_IQCOR_COEFF_2	adc_core.h	109;"	d
ADC_IQCOR_ENB	adc_core.h	87;"	d
ADC_LB_EN	adc_core.h	85;"	d
ADC_MMCM_RSTN	adc_core.h	53;"	d
ADC_MUX_OVER_RANGE	adc_core.h	63;"	d
ADC_MUX_PN_ERR	adc_core.h	61;"	d
ADC_MUX_PN_OOS	adc_core.h	62;"	d
ADC_NOISE_CORRECTION_FACTOR	ad9361.h	1405;"	d
ADC_OVERRANGE_SAMPLE_SIZE	ad9361.h	1375;"	d
ADC_OVER_RANGE	adc_core.h	98;"	d
ADC_PIN_MODE	adc_core.h	58;"	d
ADC_PN15	platform.h	/^	ADC_PN15 = 5,$/;"	e	enum:adc_pn_sel
ADC_PN23	platform.h	/^	ADC_PN23 = 6,$/;"	e	enum:adc_pn_sel
ADC_PN23A	platform.h	/^	ADC_PN23A = 1,$/;"	e	enum:adc_pn_sel
ADC_PN23_TYPE	adc_core.h	92;"	d
ADC_PN31	platform.h	/^	ADC_PN31 = 7,$/;"	e	enum:adc_pn_sel
ADC_PN7	platform.h	/^	ADC_PN7 = 4,$/;"	e	enum:adc_pn_sel
ADC_PN9	platform.h	/^	ADC_PN9 = 0,$/;"	e	enum:adc_pn_sel
ADC_PN_CUSTOM	platform.h	/^	ADC_PN_CUSTOM = 9,$/;"	e	enum:adc_pn_sel
ADC_PN_END	platform.h	/^	ADC_PN_END = 10,$/;"	e	enum:adc_pn_sel
ADC_PN_ERR	adc_core.h	96;"	d
ADC_PN_OOS	adc_core.h	97;"	d
ADC_PN_SEL	adc_core.h	86;"	d
ADC_POWER_MEASUREMENT_DURATION_0	ad9361.h	1739;"	d
ADC_POWER_MEASUREMENT_DURATION_1	ad9361.h	1738;"	d
ADC_R1_MODE	adc_core.h	56;"	d
ADC_REG_CHAN_CNTRL	adc_core.h	84;"	d
ADC_REG_CHAN_CNTRL_1	adc_core.h	100;"	d
ADC_REG_CHAN_CNTRL_2	adc_core.h	106;"	d
ADC_REG_CHAN_CNTRL_3	adc_core.h	112;"	d
ADC_REG_CHAN_STATUS	adc_core.h	95;"	d
ADC_REG_CNTRL	adc_core.h	55;"	d
ADC_REG_DMA_BUSWIDTH	adc_core.h	79;"	d
ADC_REG_DMA_CNTRL	adc_core.h	66;"	d
ADC_REG_DMA_COUNT	adc_core.h	70;"	d
ADC_REG_DMA_STATUS	adc_core.h	74;"	d
ADC_REG_RSTN	adc_core.h	51;"	d
ADC_REG_STATUS	adc_core.h	60;"	d
ADC_RSTN	adc_core.h	52;"	d
ADC_STATUS	adc_core.h	64;"	d
ADC_TO_ADC_DATA_SEL	adc_core.h	116;"	d
ADC_TO_ADC_PN_SEL	adc_core.h	114;"	d
ADC_TO_DCFILT_COEFF	adc_core.h	104;"	d
ADC_TO_DCFILT_OFFSET	adc_core.h	102;"	d
ADC_TO_DMA_BUSWIDTH	adc_core.h	81;"	d
ADC_TO_DMA_COUNT	adc_core.h	72;"	d
ADC_TO_IQCOR_COEFF_1	adc_core.h	108;"	d
ADC_TO_IQCOR_COEFF_2	adc_core.h	110;"	d
ADI_ADC_DATA_SEL	platform.h	113;"	d
ADI_ADC_PN_SEL	platform.h	111;"	d
ADI_DCFILT_COEFF	platform.h	96;"	d
ADI_DCFILT_ENB	platform.h	81;"	d
ADI_DCFILT_OFFSET	platform.h	94;"	d
ADI_DDR_EDGESEL	platform.h	61;"	d
ADI_DELAY_ADDRESS	platform.h	73;"	d
ADI_DELAY_RWN	platform.h	72;"	d
ADI_DELAY_SEL	platform.h	71;"	d
ADI_DELAY_WDATA	platform.h	75;"	d
ADI_ENABLE	platform.h	86;"	d
ADI_FORMAT_ENABLE	platform.h	84;"	d
ADI_FORMAT_SIGNEXT	platform.h	82;"	d
ADI_FORMAT_TYPE	platform.h	83;"	d
ADI_IQCOR_COEFF_1	platform.h	100;"	d
ADI_IQCOR_COEFF_2	platform.h	102;"	d
ADI_IQCOR_ENB	platform.h	80;"	d
ADI_MMCM_RSTN	platform.h	57;"	d
ADI_MUX_OVER_RANGE	platform.h	67;"	d
ADI_MUX_PN_ERR	platform.h	65;"	d
ADI_MUX_PN_OOS	platform.h	66;"	d
ADI_OVER_RANGE	platform.h	91;"	d
ADI_PIN_MODE	platform.h	62;"	d
ADI_PN23_TYPE	platform.h	85;"	d
ADI_PN_ERR	platform.h	89;"	d
ADI_PN_OOS	platform.h	90;"	d
ADI_PN_SEL	platform.h	79;"	d
ADI_R1_MODE	platform.h	60;"	d
ADI_REG_CHAN_CNTRL	platform.h	78;"	d
ADI_REG_CHAN_CNTRL_1	platform.h	93;"	d
ADI_REG_CHAN_CNTRL_2	platform.h	99;"	d
ADI_REG_CHAN_CNTRL_3	platform.h	110;"	d
ADI_REG_CHAN_STATUS	platform.h	88;"	d
ADI_REG_CNTRL	platform.h	59;"	d
ADI_REG_DELAY	platform.h	117;"	d
ADI_REG_DELAY_CNTRL	platform.h	70;"	d
ADI_REG_ID	platform.h	53;"	d
ADI_REG_RSTN	platform.h	55;"	d
ADI_REG_STATUS	platform.h	64;"	d
ADI_REG_VERSION	platform.h	51;"	d
ADI_RSTN	platform.h	56;"	d
ADI_STATUS	platform.h	68;"	d
ADI_TO_ADC_DATA_SEL	platform.h	114;"	d
ADI_TO_ADC_PN_SEL	platform.h	112;"	d
ADI_TO_DCFILT_COEFF	platform.h	97;"	d
ADI_TO_DCFILT_OFFSET	platform.h	95;"	d
ADI_TO_DELAY_ADDRESS	platform.h	74;"	d
ADI_TO_DELAY_WDATA	platform.h	76;"	d
ADI_TO_IQCOR_COEFF_1	platform.h	101;"	d
ADI_TO_IQCOR_COEFF_2	platform.h	103;"	d
AD_ADDR	ad9361.h	2805;"	d
AD_CNT	ad9361.h	2804;"	d
AD_READ	ad9361.h	2802;"	d
AD_WRITE	ad9361.h	2803;"	d
AGCLL_MAX_INCREASE	ad9361.h	1519;"	d
AGC_ATTACK_DELAY	ad9361.h	819;"	d
AGC_GAIN_UNLOCK_CTRL	ad9361.h	1363;"	d
AGC_INNER_HIGH_THRESH_EXED_STP_SIZE	ad9361.h	1554;"	d
AGC_INNER_LOW_THRESH	ad9361.h	1535;"	d
AGC_INNER_LOW_THRESH_EXED_STP_SIZE	ad9361.h	1555;"	d
AGC_IN_FAST_ATTACK_MODE_LOCKS_THE_GAIN	ad9361.h	/^	AGC_IN_FAST_ATTACK_MODE_LOCKS_THE_GAIN,$/;"	e	enum:rssi_restart_mode
AGC_LOCK_LEVEL_FAST_AGC_INNER_HIGH_THRESH_SLOW	ad9361.h	1398;"	d
AGC_OUTER_HIGH_THRESH	ad9361.h	1567;"	d
AGC_OUTER_HIGH_THRESH_EXED_STP_SIZE	ad9361.h	1573;"	d
AGC_OUTER_LOW_THRESH	ad9361.h	1568;"	d
AGC_OUTER_LOW_THRESH_EXED_STP_SIZE	ad9361.h	1574;"	d
AGC_SOFT_RESET	ad9361.h	1362;"	d
AGC_USE_FULL_GAIN_TABLE	ad9361.h	1364;"	d
AMPBIAS	ad9361.h	1304;"	d
ARRAY_SIZE	util.h	58;"	d
AUTO_GAIN_LOCK	ad9361.h	727;"	d
AUXADC_CLOCK_DIVIDER	ad9361.h	796;"	d
AUXADC_POWER_DOWN	ad9361.h	801;"	d
AUXADC_WORD_LSB	ad9361.h	807;"	d
AUXDAC1_STP_FACTOR	ad9361.h	781;"	d
AUXDAC2_STP_FACTOR	ad9361.h	789;"	d
AUXDAC_1_VREF	ad9361.h	782;"	d
AUXDAC_1_WORD	ad9361.h	775;"	d
AUXDAC_1_WORD_LSB	ad9361.h	783;"	d
AUXDAC_2_VREF	ad9361.h	790;"	d
AUXDAC_2_WORD_LSB	ad9361.h	791;"	d
AUXDAC_2_WORD_MSB	ad9361.h	774;"	d
AUXDAC_AUTO_RX_BAR	ad9361.h	826;"	d
AUXDAC_AUTO_TX_BAR	ad9361.h	825;"	d
AUXDAC_INIT_BAR	ad9361.h	827;"	d
AUXDAC_MANUAL_BAR	ad9361.h	824;"	d
AUXDAC_MANUAL_SELECT	ad9361.h	832;"	d
AUX_ADC_DECIMATION	ad9361.h	802;"	d
AXI_ADC_NOT_PRESENT	ad9361_api.c	49;"	d	file:
AXI_ADC_NOT_PRESENT	main.c	45;"	d	file:
AXI_DMAC_CTRL_ENABLE	adc_core.h	140;"	d
AXI_DMAC_CTRL_ENABLE	dac_core.h	142;"	d
AXI_DMAC_CTRL_PAUSE	adc_core.h	141;"	d
AXI_DMAC_CTRL_PAUSE	dac_core.h	143;"	d
AXI_DMAC_IRQ_EOT	adc_core.h	144;"	d
AXI_DMAC_IRQ_EOT	dac_core.h	146;"	d
AXI_DMAC_IRQ_SOT	adc_core.h	143;"	d
AXI_DMAC_IRQ_SOT	dac_core.h	145;"	d
AXI_DMAC_REG_ACTIVE_TRANSFER_ID	adc_core.h	133;"	d
AXI_DMAC_REG_ACTIVE_TRANSFER_ID	dac_core.h	135;"	d
AXI_DMAC_REG_CTRL	adc_core.h	122;"	d
AXI_DMAC_REG_CTRL	dac_core.h	124;"	d
AXI_DMAC_REG_CURRENT_DEST_ADDR	adc_core.h	135;"	d
AXI_DMAC_REG_CURRENT_DEST_ADDR	dac_core.h	137;"	d
AXI_DMAC_REG_CURRENT_SRC_ADDR	adc_core.h	136;"	d
AXI_DMAC_REG_CURRENT_SRC_ADDR	dac_core.h	138;"	d
AXI_DMAC_REG_DBG0	adc_core.h	137;"	d
AXI_DMAC_REG_DBG0	dac_core.h	139;"	d
AXI_DMAC_REG_DBG1	adc_core.h	138;"	d
AXI_DMAC_REG_DBG1	dac_core.h	140;"	d
AXI_DMAC_REG_DEST_ADDRESS	adc_core.h	126;"	d
AXI_DMAC_REG_DEST_ADDRESS	dac_core.h	128;"	d
AXI_DMAC_REG_DEST_STRIDE	adc_core.h	130;"	d
AXI_DMAC_REG_DEST_STRIDE	dac_core.h	132;"	d
AXI_DMAC_REG_FLAGS	adc_core.h	125;"	d
AXI_DMAC_REG_FLAGS	dac_core.h	127;"	d
AXI_DMAC_REG_IRQ_MASK	adc_core.h	118;"	d
AXI_DMAC_REG_IRQ_MASK	dac_core.h	120;"	d
AXI_DMAC_REG_IRQ_PENDING	adc_core.h	119;"	d
AXI_DMAC_REG_IRQ_PENDING	dac_core.h	121;"	d
AXI_DMAC_REG_IRQ_SOURCE	adc_core.h	120;"	d
AXI_DMAC_REG_IRQ_SOURCE	dac_core.h	122;"	d
AXI_DMAC_REG_SRC_ADDRESS	adc_core.h	127;"	d
AXI_DMAC_REG_SRC_ADDRESS	dac_core.h	129;"	d
AXI_DMAC_REG_SRC_STRIDE	adc_core.h	131;"	d
AXI_DMAC_REG_SRC_STRIDE	dac_core.h	133;"	d
AXI_DMAC_REG_START_TRANSFER	adc_core.h	124;"	d
AXI_DMAC_REG_START_TRANSFER	dac_core.h	126;"	d
AXI_DMAC_REG_STATUS	adc_core.h	134;"	d
AXI_DMAC_REG_STATUS	dac_core.h	136;"	d
AXI_DMAC_REG_TRANSFER_DONE	adc_core.h	132;"	d
AXI_DMAC_REG_TRANSFER_DONE	dac_core.h	134;"	d
AXI_DMAC_REG_TRANSFER_ID	adc_core.h	123;"	d
AXI_DMAC_REG_TRANSFER_ID	dac_core.h	125;"	d
AXI_DMAC_REG_X_LENGTH	adc_core.h	128;"	d
AXI_DMAC_REG_X_LENGTH	dac_core.h	130;"	d
AXI_DMAC_REG_Y_LENGTH	adc_core.h	129;"	d
AXI_DMAC_REG_Y_LENGTH	dac_core.h	131;"	d
A_BALANCED	ad9361_api.h	322;"	d
A_N	ad9361_api.h	325;"	d
A_P	ad9361_api.h	326;"	d
BANDGAP_REF_RESET	ad9361.h	2693;"	d
BANDGAP_TEMP_TRIM	ad9361.h	2694;"	d
BBDC_CAL	ad9361.h	752;"	d
BBF1_COMP_I	ad9361.h	1293;"	d
BBF1_COMP_Q	ad9361.h	1294;"	d
BBF2_COMP_I	ad9361.h	1295;"	d
BBF2_COMP_Q	ad9361.h	1296;"	d
BBPLL_CLK	ad9361.h	/^	BBPLL_CLK,$/;"	e	enum:ad9361_clocks
BBPLL_DIVIDER	ad9361.h	660;"	d
BBPLL_ENABLE	ad9361.h	652;"	d
BBPLL_FREQ	ad9361.h	/^	BBPLL_FREQ,$/;"	e	enum:ad9361_pdata_rx_freq
BBPLL_LOCK	ad9361.h	1001;"	d
BBPLL_MODULUS	ad9361.h	2833;"	d
BBPLL_RESET_BAR	ad9361.h	890;"	d
BB_DC_M_SHIFT	ad9361.h	1890;"	d
BB_DC_OFFSET_ATTEN	ad9361.h	1903;"	d
BB_DC_TRACKING_FAST_SETTLE_M_SHIFT	ad9361.h	1898;"	d
BB_REFCLK	ad9361.h	/^	BB_REFCLK,$/;"	e	enum:ad9361_clocks
BB_TRACKING_DECIMATE	ad9361.h	1889;"	d
BE_MOREVERBOSE	ad9361.h	/^	BE_MOREVERBOSE = 2,$/;"	e	enum:dig_tune_flags
BE_VERBOSE	ad9361.h	/^	BE_VERBOSE = 1,$/;"	e	enum:dig_tune_flags
BIAS	ad9361.h	1301;"	d
BIST_CTRL_POINT	ad9361.h	2771;"	d
BIST_DISABLE	ad9361.h	/^	BIST_DISABLE,$/;"	e	enum:ad9361_bist_mode
BIST_ENABLE	ad9361.h	2768;"	d
BIST_INJ_RX	ad9361.h	/^	BIST_INJ_RX,$/;"	e	enum:ad9361_bist_mode
BIST_INJ_TX	ad9361.h	/^	BIST_INJ_TX,$/;"	e	enum:ad9361_bist_mode
BIST_MASK_CHANNEL_1_I_DATA	ad9361.h	2788;"	d
BIST_MASK_CHANNEL_1_Q_DATA	ad9361.h	2787;"	d
BIST_MASK_CHANNEL_2_I_DATA	ad9361.h	2786;"	d
BIST_MASK_CHANNEL_2_Q_DATA	ad9361.h	2785;"	d
BIT	util.h	67;"	d
BITS_PER_LONG	util.c	50;"	d	file:
BUFFERED_XTALN_DCXO	ad9361.h	/^	BUFFERED_XTALN_DCXO,$/;"	e	enum:ad9361_clkout
BYPASS_BIAS_R	ad9361.h	1187;"	d
BYPASS_C3	ad9361.h	923;"	d
BYPASS_LD_SYNTH	ad9361.h	2225;"	d
BYPASS_LD_SYNTH	ad9361.h	2429;"	d
BYPASS_LOAD_DELAY	ad9361.h	2453;"	d
BYPASS_PRESCALE_R	ad9361.h	2532;"	d
BYPASS_R2	ad9361.h	924;"	d
B_BALANCED	ad9361_api.h	323;"	d
B_N	ad9361_api.h	327;"	d
B_P	ad9361_api.h	328;"	d
C1	ad9361.h	1263;"	d
C1_WORD	ad9361.h	910;"	d
C1_WORD_LSB	ad9361.h	918;"	d
C2	ad9361.h	1268;"	d
C2_WORD	ad9361.h	917;"	d
C3_WORD	ad9361.h	925;"	d
CACHEABLE_REGION_MASK	platform_config.h	5;"	d
CALIBRATION_CONFIG2_DFLT	ad9361.h	1777;"	d
CALIBRATION_SEQUENCE_STATE	ad9361.h	758;"	d
CALIB_TABLE_GAIN_DIFFERROR_WORD	ad9361.h	1675;"	d
CALIB_TABLE_GAIN_ERROR	ad9361.h	1680;"	d
CALIB_TABLE_SELECT	ad9361.h	1690;"	d
CAL_CLOCK_DIV_4	ad9361.h	938;"	d
CAPACITOR	ad9361.h	1314;"	d
CC	ad9361.h	1303;"	d
CF_AD9361_RX_DMA_BASEADDR	parameters.h	70;"	d
CF_AD9361_RX_DMA_BASEADDR	parameters.h	72;"	d
CF_AD9361_TX_DMA_BASEADDR	parameters.h	75;"	d
CF_AD9361_TX_DMA_BASEADDR	parameters.h	77;"	d
CH1_HB1	ad9361.h	1006;"	d
CH1_HB2	ad9361.h	1004;"	d
CH1_HB3	ad9361.h	1003;"	d
CH1_QEC	ad9361.h	1005;"	d
CH1_RFIR	ad9361.h	1008;"	d
CH1_TFIR	ad9361.h	1007;"	d
CH2_HB1	ad9361.h	1017;"	d
CH2_HB2	ad9361.h	1015;"	d
CH2_HB3	ad9361.h	1014;"	d
CH2_INT3	ad9361.h	1013;"	d
CH2_QEC	ad9361.h	1016;"	d
CH2_RFIR	ad9361.h	1019;"	d
CH2_TFIR	ad9361.h	1018;"	d
CHANNEL	ad9361.h	2778;"	d
CHARGE_PUMP_CURRENT	ad9361.h	2257;"	d
CHARGE_PUMP_CURRENT	ad9361.h	2475;"	d
CHARGE_PUMP_CURRENT	ad9361.h	900;"	d
CHARGE_PUMP_OFFSET	ad9361.h	2481;"	d
CH_1_INT3	ad9361.h	1002;"	d
CLKOUT_DISABLE	ad9361.h	/^	CLKOUT_DISABLE,$/;"	e	enum:ad9361_clkout
CLKOUT_ENABLE	ad9361.h	657;"	d
CLKOUT_SELECT	ad9361.h	659;"	d
CLKRF_CLK	ad9361.h	/^	CLKRF_CLK,$/;"	e	enum:ad9361_clocks
CLKRF_FREQ	ad9361.h	/^	CLKRF_FREQ,$/;"	e	enum:ad9361_pdata_rx_freq
CLKTF_CLK	ad9361.h	/^	CLKTF_CLK,$/;"	e	enum:ad9361_clocks
CLKTF_FREQ	ad9361.h	/^	CLKTF_FREQ,$/;"	e	enum:ad9361_pdata_tx_freq
CLK_GET_RATE_NOCACHE	util.h	69;"	d
CLK_IGNORE_UNUSED	util.h	68;"	d
CLK_OUT_DRIVE	ad9361.h	871;"	d
CLK_OUT_SLEW	ad9361.h	883;"	d
CLOCK_ENABLE_DFLT	ad9361.h	651;"	d
COMMON_H_	common.h	40;"	d
COMP_CTRL_1	ad9361.h	780;"	d
COMP_CTRL_2	ad9361.h	788;"	d
COMP_OUT	ad9361.h	2540;"	d
CONFIG_H_	config.h	40;"	d
CORRECTION_WORD_DECIMATION_M	ad9361.h	1794;"	d
CP	ad9361.h	1273;"	d
CP_CAL_DONE	ad9361.h	2307;"	d
CP_CAL_DONE	ad9361.h	2541;"	d
CP_CAL_ENABLE	ad9361.h	2269;"	d
CP_CAL_ENABLE	ad9361.h	2490;"	d
CP_CAL_VALID	ad9361.h	2306;"	d
CP_CAL_VALID	ad9361.h	2539;"	d
CP_CAL_WORD	ad9361.h	2309;"	d
CP_CAL_WORD	ad9361.h	2543;"	d
CP_LEVEL_DETECT_POWER_DOWN	ad9361.h	2355;"	d
CP_LEVEL_DETECT_POWER_DOWN	ad9361.h	2591;"	d
CP_LEVEL_DETECT_THRESH_HIGH	ad9361.h	2593;"	d
CP_LEVEL_DETECT_THRESH_LOW	ad9361.h	2592;"	d
CP_LEVEL_THRESH_HIGH	ad9361.h	2357;"	d
CP_LEVEL_THRESH_LOW	ad9361.h	2356;"	d
CP_OFFSET_OFF	ad9361.h	2488;"	d
CP_OVRG_HIGH	ad9361.h	2327;"	d
CP_OVRG_HIGH	ad9361.h	2562;"	d
CP_OVRG_LOW	ad9361.h	2328;"	d
CP_OVRG_LOW	ad9361.h	2563;"	d
CP_TEST	ad9361.h	2491;"	d
CTRL_ENABLE	ad9361.h	2762;"	d
C_BALANCED	ad9361_api.h	324;"	d
C_N	ad9361_api.h	329;"	d
C_P	ad9361_api.h	330;"	d
Charge_Pump_Current	ad9361.h	/^	uint8_t Charge_Pump_Current;$/;"	m	struct:SynthLUT
DAC_CLK	ad9361.h	/^	DAC_CLK,$/;"	e	enum:ad9361_clocks
DAC_CLK_DIV2	ad9361.h	658;"	d
DAC_CORE_API_H_	dac_core.h	40;"	d
DAC_DAC_DDS_SEL	dac_core.h	162;"	d
DAC_DATA_FORMAT	dac_core.h	76;"	d
DAC_DATA_SEL	dac_core.h	77;"	d
DAC_DDR_BASEADDR	parameters.h	103;"	d
DAC_DDR_BASEADDR	parameters.h	106;"	d
DAC_DDR_BASEADDR	parameters.h	81;"	d
DAC_DDS_INCR	dac_core.h	108;"	d
DAC_DDS_INIT	dac_core.h	106;"	d
DAC_DDS_SCALE	dac_core.h	102;"	d
DAC_ENABLE	dac_core.h	69;"	d
DAC_FREQ	ad9361.h	/^	DAC_FREQ,$/;"	e	enum:ad9361_pdata_tx_freq
DAC_FS	ad9361.h	1848;"	d
DAC_ID	dac_core.h	54;"	d
DAC_MMCM_RSTN	dac_core.h	62;"	d
DAC_PAR_ENB	dac_core.h	74;"	d
DAC_PAR_TYPE	dac_core.h	73;"	d
DAC_R1_MODE	dac_core.h	75;"	d
DAC_RATE	dac_core.h	65;"	d
DAC_REG_CHAN_CNTRL_1_IIOCHAN	dac_core.h	101;"	d
DAC_REG_CHAN_CNTRL_2_IIOCHAN	dac_core.h	105;"	d
DAC_REG_CHAN_CNTRL_7	dac_core.h	161;"	d
DAC_REG_CNTRL_1	dac_core.h	68;"	d
DAC_REG_CNTRL_2	dac_core.h	72;"	d
DAC_REG_ID	dac_core.h	53;"	d
DAC_REG_RATECNTRL	dac_core.h	64;"	d
DAC_REG_RSTN	dac_core.h	60;"	d
DAC_REG_SCRATCH	dac_core.h	55;"	d
DAC_REG_VDMA_FRMCNT	dac_core.h	80;"	d
DAC_REG_VDMA_STATUS	dac_core.h	84;"	d
DAC_REG_VERSION	dac_core.h	50;"	d
DAC_RSTN	dac_core.h	61;"	d
DAC_SCRATCH	dac_core.h	56;"	d
DAC_SYNC	dac_core.h	70;"	d
DAC_TEST_ENABLE	ad9361.h	2796;"	d
DAC_TEST_WORD	ad9361.h	2797;"	d
DAC_TO_DAC_DDS_SEL	dac_core.h	163;"	d
DAC_TO_DATA_SEL	dac_core.h	78;"	d
DAC_TO_DDS_INCR	dac_core.h	109;"	d
DAC_TO_DDS_INIT	dac_core.h	107;"	d
DAC_TO_DDS_SCALE	dac_core.h	103;"	d
DAC_TO_RATE	dac_core.h	66;"	d
DAC_TO_VDMA_FRMCNT	dac_core.h	82;"	d
DAC_VDMA_FRMCNT	dac_core.h	81;"	d
DAC_VDMA_OVF	dac_core.h	85;"	d
DAC_VDMA_UNF	dac_core.h	86;"	d
DAC_VERSION	dac_core.h	51;"	d
DATACLK_DRIVE	ad9361.h	872;"	d
DATACLK_SLEW	ad9361.h	874;"	d
DATA_CLK_DELAY	ad9361.h	637;"	d
DATA_PORT_DRIVE	ad9361.h	873;"	d
DATA_PORT_HILOW	ad9361.h	2789;"	d
DATA_PORT_LOOP_TEST_ENABLE	ad9361.h	2779;"	d
DATA_PORT_SLEW	ad9361.h	875;"	d
DATA_PORT_SP_HD_LOOP_TEST_OE	ad9361.h	2776;"	d
DATA_SEL_DDS	dac_core.h	/^	DATA_SEL_DDS,$/;"	e	enum:dds_data_select
DATA_SEL_DMA	dac_core.h	/^	DATA_SEL_DMA,$/;"	e	enum:dds_data_select
DATA_SEL_LB	dac_core.h	/^	DATA_SEL_LB,	\/* loopback data (ADC) *\/$/;"	e	enum:dds_data_select
DATA_SEL_PN15	dac_core.h	/^	DATA_SEL_PN15,$/;"	e	enum:dds_data_select
DATA_SEL_PN23	dac_core.h	/^	DATA_SEL_PN23,$/;"	e	enum:dds_data_select
DATA_SEL_PN31	dac_core.h	/^	DATA_SEL_PN31,$/;"	e	enum:dds_data_select
DATA_SEL_PN7	dac_core.h	/^	DATA_SEL_PN7,$/;"	e	enum:dds_data_select
DATA_SEL_PNXX	dac_core.h	/^	DATA_SEL_PNXX,	\/* (Device specific) *\/$/;"	e	enum:dds_data_select
DATA_SEL_SED	dac_core.h	/^	DATA_SEL_SED,$/;"	e	enum:dds_data_select
DATA_SEL_ZERO	dac_core.h	/^	DATA_SEL_ZERO,	\/* OUTPUT 0 *\/$/;"	e	enum:dds_data_select
DBGFS_BIST_DT_ANALYSIS	ad9361.h	/^	DBGFS_BIST_DT_ANALYSIS,$/;"	e	enum:debugfs_cmd
DBGFS_BIST_PRBS	ad9361.h	/^	DBGFS_BIST_PRBS,$/;"	e	enum:debugfs_cmd
DBGFS_BIST_TONE	ad9361.h	/^	DBGFS_BIST_TONE,$/;"	e	enum:debugfs_cmd
DBGFS_INIT	ad9361.h	/^	DBGFS_INIT,$/;"	e	enum:debugfs_cmd
DBGFS_LOOPBACK	ad9361.h	/^	DBGFS_LOOPBACK,$/;"	e	enum:debugfs_cmd
DBGFS_NONE	ad9361.h	/^	DBGFS_NONE,$/;"	e	enum:debugfs_cmd
DBGFS_RXGAIN_1	ad9361.h	/^	DBGFS_RXGAIN_1,$/;"	e	enum:debugfs_cmd
DBGFS_RXGAIN_2	ad9361.h	/^	DBGFS_RXGAIN_2,$/;"	e	enum:debugfs_cmd
DB_GAIN_READBACK_CHANNEL	ad9361.h	1753;"	d
DCXO_POWER_DOWN	ad9361.h	994;"	d
DCXO_RD	ad9361.h	2651;"	d
DCXO_RTAIL	ad9361.h	2650;"	d
DCXO_TEMPCO_CLK	ad9361.h	2657;"	d
DCXO_TEMPCO_EN	ad9361.h	2656;"	d
DCXO_TEMPERATURE_COEF_ADDRESS	ad9361.h	2658;"	d
DCXO_TUNE_COARSE	ad9361.h	2634;"	d
DCXO_TUNE_FINE_HIGH	ad9361.h	2644;"	d
DCXO_TUNE_FINE_LOW	ad9361.h	2639;"	d
DC_OFFSET_ENABLE	ad9361.h	1139;"	d
DC_OFFSET_UPDATE	ad9361.h	1873;"	d
DDS_CHAN_TX1_I_F1	dac_core.h	111;"	d
DDS_CHAN_TX1_I_F2	dac_core.h	112;"	d
DDS_CHAN_TX1_Q_F1	dac_core.h	113;"	d
DDS_CHAN_TX1_Q_F2	dac_core.h	114;"	d
DDS_CHAN_TX2_I_F1	dac_core.h	115;"	d
DDS_CHAN_TX2_I_F2	dac_core.h	116;"	d
DDS_CHAN_TX2_Q_F1	dac_core.h	117;"	d
DDS_CHAN_TX2_Q_F2	dac_core.h	118;"	d
DEC3_ENABLE_DECIMATION	ad9361.h	615;"	d
DECREMENT_STP_SIZE_FOR_SMALL_LPF_GAIN_CHANGE	ad9361.h	1410;"	d
DEC_POWER_MEASUREMENT_DURATION	ad9361.h	1748;"	d
DEC_PWR_FOR_GAIN_LOCK_EXIT	ad9361.h	1347;"	d
DEC_PWR_FOR_LOCK_LEVEL	ad9361.h	1346;"	d
DEC_PWR_FOR_LOW_PWR	ad9361.h	1345;"	d
DEC_STP_SIZE_FOR_LARGE_LMT_OVERLOAD	ad9361.h	1404;"	d
DEFAULT_MODE_ADC_POWER	ad9361.h	1747;"	d
DEFAULT_RSSI_MEAS_MODE	ad9361.h	1731;"	d
DELAY_RX_DATA	ad9361.h	699;"	d
DIGITAL_GAIN	ad9361.h	1608;"	d
DIGITAL_GAIN_RX	ad9361.h	2725;"	d
DIGITAL_POWER_UP	ad9361.h	650;"	d
DIG_GAIN_EN	ad9361.h	1365;"	d
DIG_GAIN_STP_SIZE	ad9361.h	1391;"	d
DIG_SAT	ad9361.h	2758;"	d
DIG_SATURATION_EXED_COUNTER	ad9361.h	1562;"	d
DISABLE	ad9361_api.h	314;"	d
DITHER_MODE	ad9361.h	2487;"	d
DIV_ROUND_CLOSEST	util.h	66;"	d
DIV_ROUND_UP	util.h	65;"	d
DIV_TEST_EN	ad9361.h	2427;"	d
DONT_UNLOCK_GAIN_IF_ADC_OVRG	ad9361.h	1496;"	d
DONT_UNLOCK_GAIN_IF_ENERGY_LOST	ad9361.h	1468;"	d
DONT_UNLOCK_GAIN_IF_LG_ADC_OR_LMT_OVRG	ad9361.h	1470;"	d
DONT_UNLOCK_GAIN_IF_STRONGER_SIGNAL	ad9361.h	1502;"	d
DOUBLE_GAIN_COUNTER	ad9361.h	1560;"	d
DO_CMD	console.h	46;"	d
DO_IDELAY	ad9361.h	/^	DO_IDELAY = 4,$/;"	e	enum:dig_tune_flags
DO_ODELAY	ad9361.h	/^	DO_ODELAY = 8,$/;"	e	enum:dig_tune_flags
DSM_PROG	ad9361.h	2362;"	d
DSM_PROG	ad9361.h	2598;"	d
DUAL_SYNTH_MODE	ad9361.h	738;"	d
EAGAIN	common.h	54;"	d
EFAULT	common.h	56;"	d
EINVAL	common.h	58;"	d
EIO	common.h	53;"	d
ENABLE	ad9361_api.h	313;"	d
ENABLE_ADC_POWER_MEAS	ad9361.h	1730;"	d
ENABLE_BB_DC_OFFSET_TRACKING	ad9361.h	1870;"	d
ENABLE_CORR_WORD_DECIMATION	ad9361.h	1769;"	d
ENABLE_DEC_PWR_MEAS	ad9361.h	1746;"	d
ENABLE_DIG_GAIN_CORR	ad9361.h	1705;"	d
ENABLE_DIG_SAT_OVRG	ad9361.h	1397;"	d
ENABLE_ENSM_PIN_CTRL	ad9361.h	724;"	d
ENABLE_FAST_SETTLE_MODE	ad9361.h	1869;"	d
ENABLE_GAIN_CORR	ad9361.h	1765;"	d
ENABLE_GAIN_INC_AFTER_GAIN_LOCK	ad9361.h	1464;"	d
ENABLE_INCR_GAIN	ad9361.h	1471;"	d
ENABLE_LMT_GAIN_INC_FOR_LOCK_LEVEL	ad9361.h	1477;"	d
ENABLE_PHASE_CORR	ad9361.h	1764;"	d
ENABLE_RF_OFFSET_TRACKING	ad9361.h	1872;"	d
ENABLE_RX_DATA_PORT_FOR_CAL	ad9361.h	721;"	d
ENABLE_SYMBOL_ATTEN	ad9361.h	1114;"	d
ENABLE_SYNC_FOR_GAIN_COUNTER	ad9361.h	1561;"	d
ENABLE_TRACKING_MODE_CH1	ad9361.h	1771;"	d
ENABLE_TRACKING_MODE_CH2	ad9361.h	1770;"	d
ENERGY_DETECT_COUNT	ad9361.h	1514;"	d
ENERGY_LOST_THRESH	ad9361.h	1485;"	d
ENODEV	common.h	57;"	d
ENOMEM	common.h	55;"	d
ENSM_MODE_ALERT	ad9361_api.h	/^	ENSM_MODE_ALERT,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_FDD	ad9361_api.h	/^	ENSM_MODE_FDD,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_PINCTRL	ad9361_api.h	/^	ENSM_MODE_PINCTRL,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_PINCTRL_FDD_INDEP	ad9361_api.h	/^	ENSM_MODE_PINCTRL_FDD_INDEP,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_RX	ad9361_api.h	/^	ENSM_MODE_RX,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_SLEEP	ad9361_api.h	/^	ENSM_MODE_SLEEP,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_TX	ad9361_api.h	/^	ENSM_MODE_TX,$/;"	e	enum:ad9361_ensm_mode
ENSM_MODE_WAIT	ad9361_api.h	/^	ENSM_MODE_WAIT,$/;"	e	enum:ad9361_ensm_mode
ENSM_STATE	ad9361.h	759;"	d
ENSM_STATE_ALERT	ad9361.h	761;"	d
ENSM_STATE_FDD	ad9361.h	766;"	d
ENSM_STATE_FDD_FLUSH	ad9361.h	767;"	d
ENSM_STATE_INVALID	ad9361.h	768;"	d
ENSM_STATE_RX	ad9361.h	764;"	d
ENSM_STATE_RX_FLUSH	ad9361.h	765;"	d
ENSM_STATE_SLEEP	ad9361.h	769;"	d
ENSM_STATE_SLEEP_WAIT	ad9361.h	760;"	d
ENSM_STATE_TX	ad9361.h	762;"	d
ENSM_STATE_TX_FLUSH	ad9361.h	763;"	d
ENTERS_RX_MODE	ad9361.h	/^	ENTERS_RX_MODE,$/;"	e	enum:rssi_restart_mode
EN_AGC_PIN_IS_PULLED_HIGH	ad9361.h	/^	EN_AGC_PIN_IS_PULLED_HIGH,$/;"	e	enum:rssi_restart_mode
EN_CTRL0	ad9361.h	854;"	d
EN_CTRL1	ad9361.h	853;"	d
EN_CTRL2	ad9361.h	852;"	d
EN_CTRL3	ad9361.h	851;"	d
EN_CTRL4	ad9361.h	850;"	d
EN_CTRL5	ad9361.h	849;"	d
EN_CTRL6	ad9361.h	848;"	d
EN_CTRL7	ad9361.h	847;"	d
ERROR	command.h	47;"	d
ERR_PTR	util.c	/^void * ERR_PTR(long error)$/;"	f
ETIMEDOUT	common.h	59;"	d
EVALTIME	ad9361.h	1324;"	d
EXTERNAL_LNA1_CTRL	ad9361.h	834;"	d
EXTERNAL_LNA2_CTRL	ad9361.h	833;"	d
EXT_LNA_CTRL	ad9361.h	1594;"	d
EXT_LNA_HIGH_GAIN	ad9361.h	1579;"	d
EXT_LNA_LOW_GAIN	ad9361.h	1584;"	d
EXT_LO	ad9361_api.h	345;"	d
EXT_REF_CLK	ad9361.h	/^	EXT_REF_CLK,$/;"	e	enum:ad9361_clocks
FASTLOOK_INIT	ad9361.h	3266;"	d
FAST_ATK_FINAL_OVER	ad9361.h	2739;"	d
FAST_ATK_FINAL_SETTELING	ad9361.h	2738;"	d
FAST_ATK_GAIN_LOCKED	ad9361.h	2740;"	d
FAST_ATK_MASK	ad9361.h	2732;"	d
FAST_ATK_PEAK_DETECT	ad9361.h	2736;"	d
FAST_ATK_PWR_MEASURE	ad9361.h	2737;"	d
FAST_ATK_RESET	ad9361.h	2735;"	d
FAST_ATTACK_STATE_RX1	ad9361.h	2731;"	d
FAST_ATTACK_STATE_RX2	ad9361.h	2730;"	d
FB_CLK_DELAY	ad9361.h	643;"	d
FB_CLOCK_ADV	ad9361.h	2580;"	d
FDD_ALT_WORD_ORDER	ad9361.h	693;"	d
FDD_EXTERNAL_CTRL_ENABLE	ad9361.h	733;"	d
FDD_MODE	ad9361.h	716;"	d
FDD_RX_RATE_2TX_RATE	ad9361.h	704;"	d
FILTER_GAIN	ad9361.h	1340;"	d
FINAL_OVER_RANGE_COUNT	ad9361.h	1507;"	d
FIR_IS_RX	ad9361.h	/^	FIR_IS_RX = 0x80,$/;"	e	enum:fir_dest
FIR_NUM_TAPS	ad9361.h	1028;"	d
FIR_RX1	ad9361.h	/^	FIR_RX1 = 0x81,$/;"	e	enum:fir_dest
FIR_RX1_RX2	ad9361.h	/^	FIR_RX1_RX2 = 0x83,$/;"	e	enum:fir_dest
FIR_RX2	ad9361.h	/^	FIR_RX2 = 0x82,$/;"	e	enum:fir_dest
FIR_SELECT	ad9361.h	1027;"	d
FIR_START_CLK	ad9361.h	1025;"	d
FIR_TX1	ad9361.h	/^	FIR_TX1 = 0x01,$/;"	e	enum:fir_dest
FIR_TX1_TX2	ad9361.h	/^	FIR_TX1_TX2 = 0x03,$/;"	e	enum:fir_dest
FIR_TX2	ad9361.h	/^	FIR_TX2 = 0x02,$/;"	e	enum:fir_dest
FIR_WRITE	ad9361.h	1026;"	d
FIXED_DC_CAL_WAIT_TIME	ad9361.h	1767;"	d
FORCED_CP_CAL_WORD	ad9361.h	2295;"	d
FORCED_CP_CAL_WORD	ad9361.h	2518;"	d
FORCE_ALC_ENABLE	ad9361.h	2447;"	d
FORCE_ALC_WORD	ad9361.h	2448;"	d
FORCE_ALERT_STATE	ad9361.h	726;"	d
FORCE_CGIN_DAC	ad9361.h	2033;"	d
FORCE_OUT_1_TX1_OFFSET	ad9361.h	1124;"	d
FORCE_OUT_1_TX1_PHASE_GAIN	ad9361.h	1126;"	d
FORCE_OUT_1_TX2_OFFSET	ad9361.h	1123;"	d
FORCE_OUT_1_TX2_PHASE_GAIN	ad9361.h	1125;"	d
FORCE_OUT_2_TX1_OFFSET	ad9361.h	1120;"	d
FORCE_OUT_2_TX1_PHASE_GAIN	ad9361.h	1122;"	d
FORCE_OUT_2_TX2_OFFSET	ad9361.h	1119;"	d
FORCE_OUT_2_TX2_PHASE_GAIN	ad9361.h	1121;"	d
FORCE_PD_RESET_RX1	ad9361.h	1417;"	d
FORCE_PD_RESET_RX2	ad9361.h	1416;"	d
FORCE_RX1_DIGITAL_GAIN	ad9361.h	1442;"	d
FORCE_RX1_LNA_GAIN	ad9361.h	1965;"	d
FORCE_RX1_MIX_GM	ad9361.h	1995;"	d
FORCE_RX1_RESISTORS	ad9361.h	2085;"	d
FORCE_RX2_DIGITAL_GAIN	ad9361.h	1458;"	d
FORCE_RX2_LNA_GAIN	ad9361.h	1963;"	d
FORCE_RX2_MIX_GM	ad9361.h	2006;"	d
FORCE_RX2_RESISTORS	ad9361.h	2091;"	d
FORCE_RX_NULL	ad9361.h	1897;"	d
FORCE_RX_ON	ad9361.h	722;"	d
FORCE_TEMP_SENSOR_FOR_CAL	ad9361.h	1706;"	d
FORCE_TX_ON	ad9361.h	723;"	d
FORCE_VCO_TUNE	ad9361.h	2455;"	d
FORCE_VCO_TUNE_ENABLE	ad9361.h	2454;"	d
FREE_RUN_ENABLE	ad9361.h	1137;"	d
FREE_RUN_MODE	ad9361.h	1768;"	d
FREQ_CAL_COUNT_LENGTH	ad9361.h	933;"	d
FREQ_CAL_ENABLE	ad9361.h	931;"	d
FREQ_CAL_RESET	ad9361.h	932;"	d
FREQ_CORRECTION_WORD_LSB	ad9361.h	2382;"	d
FREQ_CORRECTION_WORD_LSB	ad9361.h	2618;"	d
FREQ_CORRECTION_WORD_MSB	ad9361.h	2376;"	d
FREQ_CORRECTION_WORD_MSB	ad9361.h	2612;"	d
FULL_DUPLEX_SWAP_BITS	ad9361.h	711;"	d
FULL_PORT	ad9361.h	710;"	d
FULL_TABLE_GAIN_INDEX	ad9361.h	2715;"	d
F_CPCAL	ad9361.h	2268;"	d
F_CPCAL	ad9361.h	2489;"	d
GAIN_CAL_MEAS_DURATION	ad9361.h	1712;"	d
GAIN_CHANGE_OCCURS	ad9361.h	/^	GAIN_CHANGE_OCCURS,$/;"	e	enum:rssi_restart_mode
GAIN_CHANGE_OCCURS_OR_EN_AGC_PIN_PULLED_HIGH	ad9361.h	/^	GAIN_CHANGE_OCCURS_OR_EN_AGC_PIN_PULLED_HIGH,$/;"	e	enum:rssi_restart_mode
GAIN_ENABLE	ad9361.h	1140;"	d
GAIN_LOCK_1	ad9361.h	2752;"	d
GAIN_LOCK_EXIT_COUNT	ad9361.h	1524;"	d
GAIN_TABLE_ADDRESS	ad9361.h	1589;"	d
GM_STAGE_LOWER_CM	ad9361.h	1186;"	d
GM_STAGE_MV_HP_POLE	ad9361.h	1185;"	d
GM_STAGE_TIME_CON_OVERRIDE	ad9361.h	1184;"	d
GM_SUB_TABLE_BIAS_READ	ad9361.h	1659;"	d
GM_SUB_TABLE_BIAS_WRITE	ad9361.h	1644;"	d
GM_SUB_TABLE_CTRL_READ	ad9361.h	1664;"	d
GM_SUB_TABLE_CTRL_WRITE	ad9361.h	1649;"	d
GM_SUB_TABLE_GAIN_READ	ad9361.h	1654;"	d
GM_SUB_TABLE_GAIN_WRITE	ad9361.h	1639;"	d
GOTO_MAX_GAIN_OR_OPT_GAIN_IF_EN_AGC_HIGH	ad9361.h	1478;"	d
GOTO_OPTIMIZED_GAIN_IF_EXIT_RX_STATE	ad9361.h	1469;"	d
GOTO_OPT_GAIN_IF_ENERGY_LOST_OR_EN_AGC_HIGH	ad9361.h	1465;"	d
GOTO_SET_GAIN_IF_EN_AGC_HIGH	ad9361.h	1466;"	d
GOTO_SET_GAIN_IF_EXIT_RX_STATE	ad9361.h	1467;"	d
GPIO_CAL_SW1_PIN	parameters.h	90;"	d
GPIO_CAL_SW2_PIN	parameters.h	91;"	d
GPIO_CTL0_PIN	parameters.h	94;"	d
GPIO_CTL1_PIN	parameters.h	95;"	d
GPIO_CTL2_PIN	parameters.h	96;"	d
GPIO_CTL3_PIN	parameters.h	97;"	d
GPIO_DEVICE_ID	parameters.h	108;"	d
GPIO_DEVICE_ID	parameters.h	83;"	d
GPIO_ENABLE_PIN	parameters.h	92;"	d
GPIO_RESET_PIN	parameters.h	109;"	d
GPIO_RESET_PIN	parameters.h	84;"	d
GPIO_RESET_PIN_2	parameters.h	88;"	d
GPIO_RESET_PIN_ZC702	parameters.h	85;"	d
GPIO_RESET_PIN_ZC706	parameters.h	86;"	d
GPIO_RESET_PIN_ZED	parameters.h	87;"	d
GPIO_SYNC_PIN	parameters.h	89;"	d
GPIO_TXNRX_PIN	parameters.h	93;"	d
GPO_ENABLE_AUTO_RX	ad9361.h	812;"	d
GPO_ENABLE_AUTO_TX	ad9361.h	813;"	d
GPO_INIT_STATE	ad9361.h	842;"	d
GPO_MANUAL_CTRL	ad9361.h	841;"	d
GPO_MANUAL_SELECT	ad9361.h	835;"	d
GT_RX1	ad9361.h	1632;"	d
GT_RX2	ad9361.h	1633;"	d
HALF_DUPLEX_MODE	ad9361.h	708;"	d
HALF_VCO_CAL_CLK	ad9361.h	2267;"	d
HALF_VCO_CAL_CLK	ad9361.h	2486;"	d
HAVE_DEBUG_MESSAGES	config.h	43;"	d
HAVE_SPLIT_GAIN_TABLE	config.h	50;"	d
HAVE_TDD_SYNTH_TABLE	config.h	51;"	d
HAVE_VERBOSE_MESSAGES	config.h	42;"	d
HIGHEST_OSR	ad9361_api.h	341;"	d
ID_AD9361	ad9361.h	/^	ID_AD9361,$/;"	e	enum:__anon6
ID_AD9364	ad9361.h	/^	ID_AD9364,$/;"	e	enum:__anon6
IGNORE	ad9361.h	/^	IGNORE,$/;"	e	enum:ad9361_pdata_tx_freq
IIO_FREQUENCY_AD9361_H_	ad9361.h	39;"	d
IMMEDIATELY_UPDATE_TPC_ATTEN	ad9361.h	1097;"	d
IMMED_GAIN_CHANGE_IF_LG_ADC_OVERLOAD	ad9361.h	1553;"	d
IMMED_GAIN_CHANGE_IF_LG_LMT_OVERLOAD	ad9361.h	1552;"	d
INCDEC_LMT_GAIN	ad9361.h	1372;"	d
INCREASE_COUNT_DURATION	ad9361.h	1888;"	d
INCREMENT_GAIN_STP_LPFLMT	ad9361.h	1513;"	d
INITIAL_LMT_GAIN_LIMIT	ad9361.h	1529;"	d
INIT_ALC_VALUE	ad9361.h	2245;"	d
INIT_ALC_VALUE	ad9361.h	2461;"	d
INIT_BB_FO_CAL	ad9361.h	889;"	d
INPUTS_BC_RX1_I	ad9361.h	2026;"	d
INPUTS_BC_RX1_Q	ad9361.h	2025;"	d
INPUTS_BC_RX2_I	ad9361.h	2027;"	d
INPUTS_BC_RX2_Q	ad9361.h	2028;"	d
INPUT_A_RX1_I	ad9361.h	2018;"	d
INPUT_A_RX1_Q	ad9361.h	2017;"	d
INPUT_A_RX2_I	ad9361.h	2019;"	d
INPUT_A_RX2_Q	ad9361.h	2020;"	d
INT_LO	ad9361_api.h	344;"	d
INVERT_BYPASSED_LNA_POLARITY	ad9361.h	818;"	d
INVERT_DATA_BUS	ad9361.h	687;"	d
INVERT_DATA_CLK	ad9361.h	688;"	d
INVERT_I_DATA	ad9361.h	1156;"	d
INVERT_Q_DATA	ad9361.h	1157;"	d
INVERT_RX1	ad9361.h	694;"	d
INVERT_RX1_RF_DC_CGIN_WORD	ad9361.h	1861;"	d
INVERT_RX1_RF_DC_CGOUT_WORD	ad9361.h	1863;"	d
INVERT_RX2	ad9361.h	695;"	d
INVERT_RX2_RF_DC_CGIN_WORD	ad9361.h	1860;"	d
INVERT_RX2_RF_DC_CGOUT_WORD	ad9361.h	1862;"	d
INVERT_RX_FRAME	ad9361.h	698;"	d
INVERT_TX1	ad9361.h	696;"	d
INVERT_TX2	ad9361.h	697;"	d
KEXP_AMP	ad9361.h	1160;"	d
KEXP_DC_I	ad9361.h	1150;"	d
KEXP_DC_Q	ad9361.h	1151;"	d
KEXP_PHASE	ad9361.h	1159;"	d
KEXP_TX	ad9361.h	1148;"	d
KEXP_TX_COMP	ad9361.h	1149;"	d
K_EXP_AMPLITUDE	ad9361.h	1784;"	d
K_EXP_PHASE	ad9361.h	1778;"	d
LARGE_ADC_OL	ad9361.h	2756;"	d
LARGE_ADC_OVERLOAD_EXED_COUNTER	ad9361.h	1546;"	d
LARGE_LMT_OL	ad9361.h	2754;"	d
LARGE_LMT_OVERLOAD_EXED_COUNTER	ad9361.h	1540;"	d
LARGE_LMT_OVERLOAD_THRESH	ad9361.h	1423;"	d
LARGE_LPF_GAIN_STEP	ad9361.h	1411;"	d
LAST_ALC_ENABLE	ad9361.h	2533;"	d
LEVEL_MODE	ad9361.h	725;"	d
LF_C1	ad9361.h	/^	uint8_t LF_C1;$/;"	m	struct:SynthLUT
LF_C2	ad9361.h	/^	uint8_t LF_C2;$/;"	m	struct:SynthLUT
LF_C3	ad9361.h	/^	uint8_t LF_C3;$/;"	m	struct:SynthLUT
LF_R1	ad9361.h	/^	uint8_t LF_R1;$/;"	m	struct:SynthLUT
LF_R3	ad9361.h	/^	uint8_t LF_R3;$/;"	m	struct:SynthLUT
LMT_DETECTOR_SETTLING_TIME	ad9361.h	1403;"	d
LNA_CALIB_TABLE_GAIN_DIFFERENCE_WORD	ad9361.h	1695;"	d
LNA_GAIN	ad9361.h	1595;"	d
LOCK_DETECT_COUNT	ad9361.h	2349;"	d
LOCK_DETECT_COUNT	ad9361.h	2585;"	d
LOCK_DETECT_MODE	ad9361.h	2350;"	d
LOCK_DETECT_MODE	ad9361.h	2586;"	d
LOOP_FILTER_BYPASS_C1	ad9361.h	2289;"	d
LOOP_FILTER_BYPASS_C1	ad9361.h	2511;"	d
LOOP_FILTER_BYPASS_C2	ad9361.h	2288;"	d
LOOP_FILTER_BYPASS_C2	ad9361.h	2510;"	d
LOOP_FILTER_BYPASS_R1	ad9361.h	2287;"	d
LOOP_FILTER_BYPASS_R1	ad9361.h	2509;"	d
LOOP_FILTER_BYPASS_R3	ad9361.h	2286;"	d
LOOP_FILTER_BYPASS_R3	ad9361.h	2508;"	d
LOOP_FILTER_C1	ad9361.h	2275;"	d
LOOP_FILTER_C1	ad9361.h	2497;"	d
LOOP_FILTER_C2	ad9361.h	2274;"	d
LOOP_FILTER_C2	ad9361.h	2496;"	d
LOOP_FILTER_C3	ad9361.h	2281;"	d
LOOP_FILTER_C3	ad9361.h	2503;"	d
LOOP_FILTER_R1	ad9361.h	2280;"	d
LOOP_FILTER_R1	ad9361.h	2502;"	d
LOOP_FILTER_R3	ad9361.h	2290;"	d
LOOP_FILTER_R3	ad9361.h	2512;"	d
LOW_POWER_1	ad9361.h	2753;"	d
LOW_POWER_THRESH	ad9361.h	1497;"	d
LO_COMMON_MODE	ad9361.h	1319;"	d
LPF_GAIN	ad9361.h	1602;"	d
LPF_GAIN_RX	ad9361.h	2720;"	d
LSB_FIRST	ad9361.h	581;"	d
LUT_FTDD_40	ad9361.h	/^	LUT_FTDD_40,$/;"	e	enum:__anon5
LUT_FTDD_60	ad9361.h	/^	LUT_FTDD_60,$/;"	e	enum:__anon5
LUT_FTDD_80	ad9361.h	/^	LUT_FTDD_80,$/;"	e	enum:__anon5
LUT_FTDD_ENT	ad9361.h	/^	LUT_FTDD_ENT,$/;"	e	enum:__anon5
LVDS_BIAS	ad9361.h	884;"	d
LVDS_BYPASS_BIAS_R	ad9361.h	881;"	d
LVDS_MODE	ad9361.h	707;"	d
LVDS_TX_LO_VCM	ad9361.h	882;"	d
MANUAL_CTRL_IN_DECR_GAIN_STP_SIZE	ad9361.h	1385;"	d
MANUAL_INCR_STEP_SIZE	ad9361.h	1374;"	d
MAN_GAIN_CTRL_RX1	ad9361.h	1367;"	d
MAN_GAIN_CTRL_RX2	ad9361.h	1366;"	d
MASK_CLR_ATTEN_UPDATE	ad9361.h	1086;"	d
MASTER_BIAS_FILTER_BYPASS	ad9361.h	2684;"	d
MASTER_BIAS_POWER_DOWN	ad9361.h	995;"	d
MASTER_BIAS_REF_SEL	ad9361.h	2685;"	d
MASTER_BIAS_TRIM	ad9361.h	2686;"	d
MAXIMUM_DIGITAL_GAIN	ad9361.h	1392;"	d
MAXIMUM_FULL_TABLELMT_TABLE_INDEX	ad9361.h	1380;"	d
MAX_ADC_CLK	ad9361.h	2827;"	d
MAX_BBPLL_DIV	ad9361.h	2823;"	d
MAX_BBPLL_FREF	ad9361.h	2820;"	d
MAX_BBPLL_FREQ	ad9361.h	2822;"	d
MAX_CARRIER_FREQ_HZ	ad9361.h	2838;"	d
MAX_DAC_CLK	ad9361.h	2828;"	d
MAX_DIG_GAIN	ad9361.h	2818;"	d
MAX_GAIN	ad9361.h	/^	MAX_GAIN,$/;"	e	enum:f_agc_target_gain_index_type
MAX_LMT_INDEX	ad9361.h	2816;"	d
MAX_LNA_GAIN	ad9361.h	1754;"	d
MAX_LPF_GAIN	ad9361.h	2817;"	d
MAX_MBYTE_SPI	ad9361.h	2830;"	d
MAX_MIXER_CALIBRATION_GAIN_INDEX	ad9361.h	1700;"	d
MAX_SYNTH_FREF	ad9361.h	2835;"	d
MCS_BBPLL_ENABLE	ad9361.h	592;"	d
MCS_BB_ENABLE	ad9361.h	594;"	d
MCS_DIGITAL_CLK_ENABLE	ad9361.h	593;"	d
MCS_REFCLK_SCALE_EN	ad9361.h	905;"	d
MCS_RF_ENABLE	ad9361.h	591;"	d
MEASUREMENT_DURATION_0	ad9361.h	1718;"	d
MEASUREMENT_DURATION_1	ad9361.h	1717;"	d
MEASUREMENT_DURATION_2	ad9361.h	1724;"	d
MEASUREMENT_DURATION_3	ad9361.h	1723;"	d
MEASUREMENT_TIME_INTERVAL	ad9361.h	671;"	d
MIN_ADC_CLK	ad9361.h	2826;"	d
MIN_BBPLL_DIV	ad9361.h	2824;"	d
MIN_BBPLL_FREQ	ad9361.h	2821;"	d
MIN_CARRIER_FREQ_HZ	ad9361.h	2839;"	d
MIN_SYNTH_FREF	ad9361.h	2836;"	d
MIN_VCO_FREQ_HZ	ad9361.h	2837;"	d
MIXER_GM_GAIN	ad9361.h	1596;"	d
MODE_1x1	ad9361_api.h	338;"	d
MODE_2x2	ad9361_api.h	339;"	d
MUST_BE_ZERO	ad9361.h	2152;"	d
MUST_BE_ZERO	ad9361.h	2649;"	d
MUST_BE_ZEROS	ad9361.h	2523;"	d
M_DECIM	ad9361.h	1143;"	d
NOMINAL_OSR	ad9361_api.h	342;"	d
NO_GAIN_CHANGE	ad9361.h	/^	NO_GAIN_CHANGE,$/;"	e	enum:f_agc_target_gain_index_type
NULL	command.h	45;"	d
NUMBER_OF_TAPS	ad9361.h	1334;"	d
NUMBER_SDM_DITHER_BITS	ad9361.h	2517;"	d
NUM_AD9361_CLKS	ad9361.h	/^	NUM_AD9361_CLKS,$/;"	e	enum:ad9361_clocks
NUM_RX_CLOCKS	ad9361.h	/^	NUM_RX_CLOCKS,$/;"	e	enum:ad9361_pdata_rx_freq
NUM_TX_CLOCKS	ad9361.h	/^	NUM_TX_CLOCKS,$/;"	e	enum:ad9361_pdata_tx_freq
OBSERVATION_POINT	ad9361.h	2780;"	d
ONE_SHOT_MODE	ad9361.h	1058;"	d
OPAMPA_OUTPUT_BIAS	ad9361.h	1223;"	d
OPAMPA_RZ	ad9361.h	1224;"	d
OPAMPB_OUTPUT_BIAS	ad9361.h	1230;"	d
OPAMPB_RZ	ad9361.h	1231;"	d
OPAMP_A_CC	ad9361.h	1225;"	d
OPAMP_B_CC	ad9361.h	1232;"	d
OPEN	ad9361.h	836;"	d
OPTIMIZED_GAIN	ad9361.h	/^	OPTIMIZED_GAIN,$/;"	e	enum:f_agc_target_gain_index_type
OPTIMIZE_GAIN_OFFSET	ad9361.h	1508;"	d
OVERRIDE_ENABLE	ad9361.h	1237;"	d
PCORE_VERSION	platform.h	105;"	d
PCORE_VERSION_LETTER	platform.h	108;"	d
PCORE_VERSION_MAJOR	dac_core.h	58;"	d
PCORE_VERSION_MAJOR	platform.h	106;"	d
PCORE_VERSION_MINOR	platform.h	107;"	d
PD_TUNE	ad9361.h	1278;"	d
PEAK_OVERLOAD_WAIT_TIME	ad9361.h	1386;"	d
PFD_CLK_EDGE	ad9361.h	2428;"	d
PFD_WIDTH	ad9361.h	2430;"	d
PHASE_ENABLE	ad9361.h	1141;"	d
PLATFORM_H_	platform.h	40;"	d
POLE_GAIN_TUNE	ad9361.h	2210;"	d
PORB_VCO_LOGIC	ad9361.h	2251;"	d
PORB_VCO_LOGIC	ad9361.h	2467;"	d
POST_LOCK_LEVEL_STP_FOR_LMT_TABLE	ad9361.h	1490;"	d
POST_LOCK_LEVEL_STP_SIZE_FOR_LPF_TABLE_FULL_TABLE	ad9361.h	1484;"	d
POWER_DOWN_BANDGAP_REF	ad9361.h	2683;"	d
POWER_DOWN_CAL_TCF	ad9361.h	2321;"	d
POWER_DOWN_CAL_TCF	ad9361.h	2556;"	d
POWER_DOWN_RX_SYNTH	ad9361.h	734;"	d
POWER_DOWN_TX_SYNTH	ad9361.h	735;"	d
POWER_DOWN_VARACTOR_REF	ad9361.h	2319;"	d
POWER_DOWN_VARACTOR_REF	ad9361.h	2554;"	d
POWER_DOWN_VARACT_REF_TCF	ad9361.h	2555;"	d
POWER_DOWN_VCO_BUFFFER	ad9361.h	2322;"	d
POWER_DOWN_VCO_BUFFFER	ad9361.h	2557;"	d
POWER_MEAS_IN_STATE_5	ad9361.h	1435;"	d
POWER_MEAS_IN_STATE_5_MSB	ad9361.h	1428;"	d
PP_RX_SWAP_IQ	ad9361.h	682;"	d
PP_TX_SWAP_IQ	ad9361.h	681;"	d
PRESCALE_BIAS	ad9361.h	2534;"	d
PREVENT_GAIN_INC	ad9361.h	1534;"	d
PREVENT_POS_LOOP_GAIN	ad9361.h	1783;"	d
PRODUCT_ID_9361	ad9361.h	860;"	d
PRODUCT_ID_MASK	ad9361.h	859;"	d
PWR_DOWN_VARACT_REF_TCF	ad9361.h	2320;"	d
QUAD_CAL_SOFT_RESET	ad9361.h	1142;"	d
R1	ad9361.h	1238;"	d
R1_CLK	ad9361.h	/^	R1_CLK,$/;"	e	enum:ad9361_clocks
R1_FREQ	ad9361.h	/^	R1_FREQ,$/;"	e	enum:ad9361_pdata_rx_freq
R1_WORD	ad9361.h	911;"	d
R2	ad9361.h	1243;"	d
R2B	ad9361.h	1288;"	d
R2B_OVR	ad9361.h	1287;"	d
R2T2_TIMING	ad9361.h	686;"	d
R2_CLK	ad9361.h	/^	R2_CLK,$/;"	e	enum:ad9361_clocks
R2_FREQ	ad9361.h	/^	R2_FREQ,$/;"	e	enum:ad9361_pdata_rx_freq
R2_WORD	ad9361.h	916;"	d
R2_WORD_LSB	ad9361.h	926;"	d
R3	ad9361.h	1248;"	d
R4	ad9361.h	1253;"	d
READ_BACK_CH_SEL	ad9361.h	1895;"	d
READ_CMD	console.h	47;"	d
READ_EFFECTIVE_TUNING_WORD	ad9361.h	2375;"	d
READ_EFFECTIVE_TUNING_WORD	ad9361.h	2611;"	d
READ_SELECT	ad9361.h	1685;"	d
RECEIVER_SELECT	ad9361.h	1631;"	d
REFERENCE_CLOCK_CYCLES_PER_US	ad9361.h	866;"	d
REF_DIVIDE_CONFIG_1_DFLT	ad9361.h	2699;"	d
REF_FREQ_SCALER	ad9361.h	895;"	d
REG_ADC_LARGE_OVERLOAD_THRESH	ad9361.h	235;"	d
REG_ADC_MEASURE_DURATION_01	ad9361.h	303;"	d
REG_ADC_NOISE_CORRECTION_FACTOR	ad9361.h	232;"	d
REG_ADC_OVERLOAD_COUNTERS	ad9361.h	259;"	d
REG_ADC_SMALL_OVERLOAD_THRESH	ad9361.h	234;"	d
REG_ADC_WEIGHT_0	ad9361.h	304;"	d
REG_ADC_WEIGHT_1	ad9361.h	305;"	d
REG_AGC_ATTACK_DELAY	ad9361.h	83;"	d
REG_AGC_CONFIG_1	ad9361.h	225;"	d
REG_AGC_CONFIG_2	ad9361.h	226;"	d
REG_AGC_CONFIG_3	ad9361.h	227;"	d
REG_AGC_GAIN_LOCK_DELAY	ad9361.h	82;"	d
REG_AGC_INNER_LOW_THRESH	ad9361.h	257;"	d
REG_AGC_LOCK_LEVEL	ad9361.h	231;"	d
REG_ANALOG_POWER_DOWN_OVERRIDE	ad9361.h	131;"	d
REG_AUTO_GPO	ad9361.h	81;"	d
REG_AUXADC_CLOCK_DIVIDER	ad9361.h	77;"	d
REG_AUXADC_CONFIG	ad9361.h	78;"	d
REG_AUXADC_LSB	ad9361.h	80;"	d
REG_AUXADC_WORD_MSB	ad9361.h	79;"	d
REG_AUXDAC1_RX_DELAY	ad9361.h	97;"	d
REG_AUXDAC1_TX_DELAY	ad9361.h	98;"	d
REG_AUXDAC2_RX_DELAY	ad9361.h	99;"	d
REG_AUXDAC2_TX_DELAY	ad9361.h	100;"	d
REG_AUXDAC_1_CONFIG	ad9361.h	75;"	d
REG_AUXDAC_1_WORD	ad9361.h	73;"	d
REG_AUXDAC_2_CONFIG	ad9361.h	76;"	d
REG_AUXDAC_2_WORD	ad9361.h	74;"	d
REG_AUXDAC_ENABLE_CTRL	ad9361.h	84;"	d
REG_BAND1_RX1_Q	ad9361.h	387;"	d
REG_BANDGAP_CONFIG0	ad9361.h	554;"	d
REG_BANDGAP_CONFIG1	ad9361.h	555;"	d
REG_BBPLL	ad9361.h	59;"	d
REG_BB_DC_OFFSET_ATTEN	ad9361.h	351;"	d
REG_BB_DC_OFFSET_COUNT	ad9361.h	350;"	d
REG_BB_DC_OFFSET_FAST_SETTLE_SHIFT	ad9361.h	348;"	d
REG_BB_DC_OFFSET_SHIFT	ad9361.h	347;"	d
REG_BB_FAST_SETTLE_DUR	ad9361.h	349;"	d
REG_BB_TRACK_CORR_WORD_I_LSB	ad9361.h	361;"	d
REG_BB_TRACK_CORR_WORD_I_MSB	ad9361.h	360;"	d
REG_BB_TRACK_CORR_WORD_Q_LSB	ad9361.h	363;"	d
REG_BB_TRACK_CORR_WORD_Q_MSB	ad9361.h	362;"	d
REG_BIST_AND_DATA_PORT_TEST_CONFIG	ad9361.h	571;"	d
REG_BIST_CONFIG	ad9361.h	569;"	d
REG_CALIBRATION_CONFIG_1	ad9361.h	313;"	d
REG_CALIBRATION_CONFIG_2	ad9361.h	314;"	d
REG_CALIBRATION_CONFIG_3	ad9361.h	315;"	d
REG_CALIBRATION_CTRL	ad9361.h	71;"	d
REG_CALIB_COUNT	ad9361.h	316;"	d
REG_CAL_TEMP_SENSOR_WORD	ad9361.h	293;"	d
REG_CAPACITOR	ad9361.h	214;"	d
REG_CH1_ADC_POWER	ad9361.h	308;"	d
REG_CH1_RX_FILTER_POWER	ad9361.h	309;"	d
REG_CH2_ADC_POWER	ad9361.h	310;"	d
REG_CH2_RX_FILTER_POWER	ad9361.h	311;"	d
REG_CH_1_OVERFLOW	ad9361.h	133;"	d
REG_CH_2_OVERFLOW	ad9361.h	134;"	d
REG_CLOCK_CTRL	ad9361.h	114;"	d
REG_CLOCK_ENABLE	ad9361.h	58;"	d
REG_CONFIG	ad9361.h	287;"	d
REG_CONFIG0	ad9361.h	212;"	d
REG_CP_BLEED_CURRENT	ad9361.h	116;"	d
REG_CP_CURRENT	ad9361.h	115;"	d
REG_CTRL	ad9361.h	568;"	d
REG_CTRL_OUTPUT_ENABLE	ad9361.h	102;"	d
REG_CTRL_OUTPUT_POINTER	ad9361.h	101;"	d
REG_DAC_TEST_0	ad9361.h	572;"	d
REG_DAC_TEST_1	ad9361.h	573;"	d
REG_DAC_TEST_2	ad9361.h	574;"	d
REG_DCXO_COARSE_TUNE	ad9361.h	539;"	d
REG_DCXO_CONFIG	ad9361.h	542;"	d
REG_DCXO_FINE_TUNE_HIGH	ad9361.h	540;"	d
REG_DCXO_FINE_TUNE_LOW	ad9361.h	541;"	d
REG_DCXO_TEMPCO_ADDR	ad9361.h	545;"	d
REG_DCXO_TEMPCO_READ	ad9361.h	544;"	d
REG_DCXO_TEMPCO_WRITE	ad9361.h	543;"	d
REG_DC_OFFSET_CONFIG2	ad9361.h	344;"	d
REG_DEC_POWER_MEASURE_DURATION_0	ad9361.h	306;"	d
REG_DELTA_T_READ	ad9361.h	546;"	d
REG_DIGITAL_GAIN	ad9361.h	230;"	d
REG_DIGITAL_IO_CTRL	ad9361.h	105;"	d
REG_DIGITAL_SAT_COUNTER	ad9361.h	263;"	d
REG_DIG_GAIN_RX1	ad9361.h	560;"	d
REG_DIG_GAIN_RX2	ad9361.h	565;"	d
REG_ENSM_CONFIG_1	ad9361.h	69;"	d
REG_ENSM_CONFIG_2	ad9361.h	70;"	d
REG_ENSM_MODE	ad9361.h	68;"	d
REG_EXTERNAL_LNA_CTRL	ad9361.h	87;"	d
REG_EXT_LNA_HIGH_GAIN	ad9361.h	266;"	d
REG_EXT_LNA_LOW_GAIN	ad9361.h	267;"	d
REG_FAST_AGCLL_UPPER_LIMIT	ad9361.h	253;"	d
REG_FAST_ATTACK_STATE	ad9361.h	561;"	d
REG_FAST_CONFIG_1	ad9361.h	245;"	d
REG_FAST_CONFIG_2_SETTLING_DELAY	ad9361.h	246;"	d
REG_FAST_ENERGY_DETECT_COUNT	ad9361.h	252;"	d
REG_FAST_ENERGY_LOST_THRESH	ad9361.h	247;"	d
REG_FAST_FINAL_OVER_RANGE_AND_OPT_GAIN	ad9361.h	251;"	d
REG_FAST_GAIN_LOCK_EXIT_COUNT	ad9361.h	254;"	d
REG_FAST_INCREMENT_TIME	ad9361.h	256;"	d
REG_FAST_INITIAL_LMT_GAIN_LIMIT	ad9361.h	255;"	d
REG_FAST_LOW_POWER_THRESH	ad9361.h	249;"	d
REG_FAST_STRONGER_SIGNAL_THRESH	ad9361.h	248;"	d
REG_FAST_STRONG_SIGNAL_FREEZE	ad9361.h	250;"	d
REG_FB_DAC_BIAS_CURRENT	ad9361.h	450;"	d
REG_FB_DAC_CLK_DELAY1	ad9361.h	427;"	d
REG_FB_DAC_CLK_DELAY2	ad9361.h	428;"	d
REG_FLASH_BIAS_CURRENT	ad9361.h	460;"	d
REG_FLASH_LADDER_BIAS	ad9361.h	461;"	d
REG_FLASH_LADDER_BIAS2	ad9361.h	463;"	d
REG_FLASH_LADDER_CASCODE_CURRENT	ad9361.h	462;"	d
REG_FLASH_SAMPLE_CLK_DELAY_3N	ad9361.h	430;"	d
REG_FLASH_SAMPLE_CLK_DELAY_3P	ad9361.h	429;"	d
REG_FORCE_BITS	ad9361.h	338;"	d
REG_FORCE_OS_DAC	ad9361.h	391;"	d
REG_FRACT_BB_FREQ_WORD_1	ad9361.h	110;"	d
REG_FRACT_BB_FREQ_WORD_2	ad9361.h	111;"	d
REG_FRACT_BB_FREQ_WORD_3	ad9361.h	112;"	d
REG_GAIN_DIFF_WORDERROR_WRITE	ad9361.h	285;"	d
REG_GAIN_ERROR_READ	ad9361.h	286;"	d
REG_GAIN_RX1	ad9361.h	558;"	d
REG_GAIN_RX2	ad9361.h	563;"	d
REG_GAIN_STP1	ad9361.h	260;"	d
REG_GAIN_STP_2	ad9361.h	265;"	d
REG_GAIN_STP_CONFIG1	ad9361.h	233;"	d
REG_GAIN_STP_CONFIG_2	ad9361.h	236;"	d
REG_GAIN_TABLE_ADDRESS	ad9361.h	268;"	d
REG_GAIN_TABLE_CONFIG	ad9361.h	275;"	d
REG_GAIN_TABLE_READ_DATA1	ad9361.h	272;"	d
REG_GAIN_TABLE_READ_DATA2	ad9361.h	273;"	d
REG_GAIN_TABLE_READ_DATA3	ad9361.h	274;"	d
REG_GAIN_TABLE_WRITE_DATA1	ad9361.h	269;"	d
REG_GAIN_TABLE_WRITE_DATA2	ad9361.h	270;"	d
REG_GAIN_TABLE_WRITE_DATA3	ad9361.h	271;"	d
REG_GAIN_UPDATE_COUNTER1	ad9361.h	261;"	d
REG_GAIN_UPDATE_COUNTER2	ad9361.h	262;"	d
REG_GM_SUB_TABLE_ADDRESS	ad9361.h	276;"	d
REG_GM_SUB_TABLE_BIAS_READ	ad9361.h	281;"	d
REG_GM_SUB_TABLE_BIAS_WRITE	ad9361.h	278;"	d
REG_GM_SUB_TABLE_CONFIG	ad9361.h	283;"	d
REG_GM_SUB_TABLE_CTRL_READ	ad9361.h	282;"	d
REG_GM_SUB_TABLE_CTRL_WRITE	ad9361.h	279;"	d
REG_GM_SUB_TABLE_GAIN_READ	ad9361.h	280;"	d
REG_GM_SUB_TABLE_GAIN_WRITE	ad9361.h	277;"	d
REG_GPO0_RX_DELAY	ad9361.h	89;"	d
REG_GPO0_TX_DELAY	ad9361.h	93;"	d
REG_GPO1_RX_DELAY	ad9361.h	90;"	d
REG_GPO1_TX_DELAY	ad9361.h	94;"	d
REG_GPO2_RX_DELAY	ad9361.h	91;"	d
REG_GPO2_TX_DELAY	ad9361.h	95;"	d
REG_GPO3_RX_DELAY	ad9361.h	92;"	d
REG_GPO3_TX_DELAY	ad9361.h	96;"	d
REG_GPO_FORCE_AND_INIT	ad9361.h	88;"	d
REG_INPUTS_BC_MSBS	ad9361.h	390;"	d
REG_INPUTS_BC_RX1_I	ad9361.h	386;"	d
REG_INPUTS_BC_RX2_I	ad9361.h	388;"	d
REG_INPUTS_BC_RX2_Q	ad9361.h	389;"	d
REG_INPUT_A_MSBS	ad9361.h	381;"	d
REG_INPUT_A_OFFSETS_1	ad9361.h	326;"	d
REG_INPUT_A_RX1_I	ad9361.h	382;"	d
REG_INPUT_A_RX1_Q	ad9361.h	383;"	d
REG_INPUT_A_RX2_I	ad9361.h	384;"	d
REG_INPUT_A_RX2_Q	ad9361.h	385;"	d
REG_INPUT_BC_OFFSETS_1	ad9361.h	335;"	d
REG_INPUT_SELECT	ad9361.h	54;"	d
REG_INTEGER_BB_FREQ_WORD	ad9361.h	113;"	d
REG_INTEGRATOR_1_CAPACITANCE	ad9361.h	434;"	d
REG_INTEGRATOR_1_RESISTANCE	ad9361.h	433;"	d
REG_INTEGRATOR_23_RESISTANCE	ad9361.h	435;"	d
REG_INTEGRATOR_2_1ST_STAGE_CURRENT	ad9361.h	454;"	d
REG_INTEGRATOR_2_CAPACITANCE	ad9361.h	437;"	d
REG_INTEGRATOR_2_RESISTANCE	ad9361.h	436;"	d
REG_INTEGRATOR_3_CAPACITANCE	ad9361.h	439;"	d
REG_INTEGRATOR_3_RESISTANCE	ad9361.h	438;"	d
REG_INTEGRATOR_AMP_CC	ad9361.h	440;"	d
REG_INT_1_1ST_STAGE_CASCODE_CURRENT	ad9361.h	452;"	d
REG_INT_1_1ST_STAGE_CURRENT	ad9361.h	451;"	d
REG_INT_1_2ND_STAGE_CURRENT	ad9361.h	453;"	d
REG_INT_1_FB_DAC_NMOS_CASOADE_BIAS_CURRENT	ad9361.h	442;"	d
REG_INT_1_FB_DAC_NMOS_CURRENT_SOURCE	ad9361.h	441;"	d
REG_INT_1_FB_DAC_PMOS_CURRENT_SOURCE	ad9361.h	443;"	d
REG_INT_2_1ST_STAGE_CASCODE_CURRENT	ad9361.h	455;"	d
REG_INT_2_2ND_STAGE_CURRENT	ad9361.h	456;"	d
REG_INT_2_FB_DAC_NMOS_CASCODE_BIAS_CURRENT	ad9361.h	445;"	d
REG_INT_2_FB_DAC_NMOS_CURRENT_SOURCE	ad9361.h	444;"	d
REG_INT_2_FB_DAC_PMOS_CURRENT_SOURCE	ad9361.h	446;"	d
REG_INT_3_1ST_STAGE_CASCODE_CURRENT	ad9361.h	458;"	d
REG_INT_3_1ST_STAGE_CURRENT	ad9361.h	457;"	d
REG_INT_3_2ND_STAGE_CURRENT	ad9361.h	459;"	d
REG_INT_3_FB_DAC_NMOS_CASCODE_BIAS_CURRENT	ad9361.h	448;"	d
REG_INT_3_FB_DAC_NMOS_CURRENT_SOURCE	ad9361.h	447;"	d
REG_INT_3_FB_DAC_PMOS_CURRENT_SOURCE	ad9361.h	449;"	d
REG_INVERT_BITS	ad9361.h	343;"	d
REG_KEXP_1	ad9361.h	182;"	d
REG_KEXP_2	ad9361.h	183;"	d
REG_LARGE_LMT_OVERLOAD_THRESH	ad9361.h	238;"	d
REG_LMT_OVERLOAD_COUNTERS	ad9361.h	258;"	d
REG_LNA_GAIN	ad9361.h	307;"	d
REG_LNA_GAIN_DIFF_READ_BACK	ad9361.h	288;"	d
REG_LOOP_FILTER_1	ad9361.h	117;"	d
REG_LOOP_FILTER_2	ad9361.h	118;"	d
REG_LOOP_FILTER_3	ad9361.h	119;"	d
REG_LO_CM	ad9361.h	215;"	d
REG_LPF_GAIN_RX1	ad9361.h	559;"	d
REG_LPF_GAIN_RX2	ad9361.h	564;"	d
REG_LVDS_BIAS_CTRL	ad9361.h	106;"	d
REG_LVDS_INVERT_CTRL1	ad9361.h	107;"	d
REG_LVDS_INVERT_CTRL2	ad9361.h	108;"	d
REG_MAG_FTEST_THRESH	ad9361.h	185;"	d
REG_MAG_FTEST_THRESH_2	ad9361.h	186;"	d
REG_MAX_LMT_FULL_GAIN	ad9361.h	228;"	d
REG_MAX_MIXER_CALIBRATION_GAIN_INDEX	ad9361.h	289;"	d
REG_MEASURE_DURATION	ad9361.h	292;"	d
REG_MEASURE_DURATION_01	ad9361.h	294;"	d
REG_MEASURE_DURATION_23	ad9361.h	295;"	d
REG_MISC_POWER_DOWN_OVERRIDE	ad9361.h	132;"	d
REG_MULTICHIP_SYNC_AND_TX_MON_CTRL	ad9361.h	51;"	d
REG_OBSERVE_CONFIG	ad9361.h	570;"	d
REG_OUTER_POWER_THRESHS	ad9361.h	264;"	d
REG_OVRG_SIGS_RX1	ad9361.h	566;"	d
REG_OVRG_SIGS_RX2	ad9361.h	567;"	d
REG_PARALLEL_PORT_CONF_1	ad9361.h	65;"	d
REG_PARALLEL_PORT_CONF_2	ad9361.h	66;"	d
REG_PARALLEL_PORT_CONF_3	ad9361.h	67;"	d
REG_PEAK_WAIT_TIME	ad9361.h	229;"	d
REG_POLE_GAIN	ad9361.h	424;"	d
REG_PREAMBLE_LSB	ad9361.h	369;"	d
REG_PRODUCT_ID	ad9361.h	103;"	d
REG_QUAD_CAL_COUNT	ad9361.h	189;"	d
REG_QUAD_CAL_CTRL	ad9361.h	181;"	d
REG_QUAD_CAL_NCO_FREQ_PHASE_OFFSET	ad9361.h	180;"	d
REG_QUAD_CAL_STATUS_TX1	ad9361.h	187;"	d
REG_QUAD_CAL_STATUS_TX2	ad9361.h	188;"	d
REG_QUAD_SETTLE_COUNT	ad9361.h	184;"	d
REG_REFERENCE_CLOCK_CYCLES	ad9361.h	104;"	d
REG_REF_DIVIDE_CONFIG_1	ad9361.h	556;"	d
REG_REF_DIVIDE_CONFIG_2	ad9361.h	557;"	d
REG_RESET	ad9361.h	464;"	d
REG_RESISTOR	ad9361.h	213;"	d
REG_RFPLL_DIVIDERS	ad9361.h	55;"	d
REG_RF_CAL_GAIN_INDEX	ad9361.h	345;"	d
REG_RF_DC_OFFSET_ATTEN	ad9361.h	342;"	d
REG_RF_DC_OFFSET_CONFIG_1	ad9361.h	341;"	d
REG_RF_DC_OFFSET_COUNT	ad9361.h	340;"	d
REG_RSSI_CONFIG	ad9361.h	302;"	d
REG_RSSI_DELAY	ad9361.h	300;"	d
REG_RSSI_WAIT_TIME	ad9361.h	301;"	d
REG_RSSI_WEIGHT_0	ad9361.h	296;"	d
REG_RSSI_WEIGHT_1	ad9361.h	297;"	d
REG_RSSI_WEIGHT_2	ad9361.h	298;"	d
REG_RSSI_WEIGHT_3	ad9361.h	299;"	d
REG_RX1_ADC_POWER_DOWN_OVERRIDE	ad9361.h	128;"	d
REG_RX1_BBF_MAN_GAIN	ad9361.h	420;"	d
REG_RX1_BBF_R1A	ad9361.h	400;"	d
REG_RX1_BBF_R5	ad9361.h	404;"	d
REG_RX1_BB_DC_WORD_I_LSB	ad9361.h	353;"	d
REG_RX1_BB_DC_WORD_I_MSB	ad9361.h	352;"	d
REG_RX1_BB_DC_WORD_Q_LSB	ad9361.h	355;"	d
REG_RX1_BB_DC_WORD_Q_MSB	ad9361.h	354;"	d
REG_RX1_INPUT_A_GAIN_CORR	ad9361.h	321;"	d
REG_RX1_INPUT_A_OFFSETS	ad9361.h	325;"	d
REG_RX1_INPUT_A_PHASE_CORR	ad9361.h	320;"	d
REG_RX1_INPUT_A_Q_OFFSET	ad9361.h	324;"	d
REG_RX1_INPUT_BC_GAIN_CORR	ad9361.h	330;"	d
REG_RX1_INPUT_BC_OFFSETS	ad9361.h	334;"	d
REG_RX1_INPUT_BC_PHASE_CORR	ad9361.h	329;"	d
REG_RX1_INPUT_BC_Q_OFFSET	ad9361.h	333;"	d
REG_RX1_MANUAL_DIGITALFORCED_GAIN	ad9361.h	241;"	d
REG_RX1_MANUAL_LMT_FULL_GAIN	ad9361.h	239;"	d
REG_RX1_MANUAL_LPF_GAIN	ad9361.h	240;"	d
REG_RX1_MIX_GM_BIAS_FORCE	ad9361.h	378;"	d
REG_RX1_MIX_GM_FORCE	ad9361.h	377;"	d
REG_RX1_RSSI_PREAMBLE	ad9361.h	365;"	d
REG_RX1_RSSI_SYMBOL	ad9361.h	364;"	d
REG_RX1_TUNE_CTRL	ad9361.h	402;"	d
REG_RX2_ADC_POWER_DOWN_OVERRIDE	ad9361.h	129;"	d
REG_RX2_BBF_MAN_GAIN	ad9361.h	421;"	d
REG_RX2_BBF_R1A	ad9361.h	401;"	d
REG_RX2_BBF_R5	ad9361.h	405;"	d
REG_RX2_BB_DC_WORD_I_LSB	ad9361.h	357;"	d
REG_RX2_BB_DC_WORD_I_MSB	ad9361.h	356;"	d
REG_RX2_BB_DC_WORD_Q_LSB	ad9361.h	359;"	d
REG_RX2_BB_DC_WORD_Q_MSB	ad9361.h	358;"	d
REG_RX2_INPUT_A_GAIN_CORR	ad9361.h	323;"	d
REG_RX2_INPUT_A_I_OFFSET	ad9361.h	328;"	d
REG_RX2_INPUT_A_OFFSETS	ad9361.h	327;"	d
REG_RX2_INPUT_A_PHASE_CORR	ad9361.h	322;"	d
REG_RX2_INPUT_BC_GAIN_CORR	ad9361.h	332;"	d
REG_RX2_INPUT_BC_I_OFFSET	ad9361.h	337;"	d
REG_RX2_INPUT_BC_OFFSETS	ad9361.h	336;"	d
REG_RX2_INPUT_BC_PHASE_CORR	ad9361.h	331;"	d
REG_RX2_MANUAL_DIGITALFORCED_GAIN	ad9361.h	244;"	d
REG_RX2_MANUAL_LMT_FULL_GAIN	ad9361.h	242;"	d
REG_RX2_MANUAL_LPF_GAIN	ad9361.h	243;"	d
REG_RX2_MIX_GM_BIAS_FORCE	ad9361.h	380;"	d
REG_RX2_MIX_GM_FORCE	ad9361.h	379;"	d
REG_RX2_RSSI_PREAMBLE	ad9361.h	367;"	d
REG_RX2_RSSI_SYMBOL	ad9361.h	366;"	d
REG_RX2_TUNE_CTRL	ad9361.h	403;"	d
REG_RX_ALC_VARACTOR	ad9361.h	474;"	d
REG_RX_ANALOG_POWER_DOWN_OVERRIDE_1	ad9361.h	126;"	d
REG_RX_ANALOG_POWER_DOWN_OVERRIDE_2	ad9361.h	127;"	d
REG_RX_BBBW_KHZ	ad9361.h	426;"	d
REG_RX_BBBW_MHZ	ad9361.h	425;"	d
REG_RX_BBF_C1_LSB	ad9361.h	408;"	d
REG_RX_BBF_C1_MSB	ad9361.h	407;"	d
REG_RX_BBF_C2_LSB	ad9361.h	410;"	d
REG_RX_BBF_C2_MSB	ad9361.h	409;"	d
REG_RX_BBF_C3_LSB	ad9361.h	412;"	d
REG_RX_BBF_C3_MSB	ad9361.h	411;"	d
REG_RX_BBF_CC1_CTR	ad9361.h	413;"	d
REG_RX_BBF_CC2_CTR	ad9361.h	415;"	d
REG_RX_BBF_CC3_CTR	ad9361.h	417;"	d
REG_RX_BBF_POW_RZ_BYTE0	ad9361.h	414;"	d
REG_RX_BBF_POW_RZ_BYTE1	ad9361.h	416;"	d
REG_RX_BBF_R2346	ad9361.h	406;"	d
REG_RX_BBF_R5_TUNE	ad9361.h	418;"	d
REG_RX_BBF_TUNE	ad9361.h	419;"	d
REG_RX_BBF_TUNE_CONFIG	ad9361.h	423;"	d
REG_RX_BBF_TUNE_DIVIDE	ad9361.h	422;"	d
REG_RX_CAL_STATUS	ad9361.h	484;"	d
REG_RX_CGB_SEG_ENABLE	ad9361.h	393;"	d
REG_RX_CLOCK_DATA_DELAY	ad9361.h	56;"	d
REG_RX_CORRECTION_WORD0	ad9361.h	494;"	d
REG_RX_CORRECTION_WORD1	ad9361.h	495;"	d
REG_RX_CP_CONFIG	ad9361.h	478;"	d
REG_RX_CP_CURRENT	ad9361.h	476;"	d
REG_RX_CP_LEVEL_DETECT	ad9361.h	491;"	d
REG_RX_CP_OFFSET	ad9361.h	477;"	d
REG_RX_CP_OVERRANGE_VCO_LOCK	ad9361.h	487;"	d
REG_RX_DIFF_LNA_FORCE	ad9361.h	372;"	d
REG_RX_DITHERCP_CAL	ad9361.h	482;"	d
REG_RX_DSM_SETUP_0	ad9361.h	492;"	d
REG_RX_DSM_SETUP_1	ad9361.h	493;"	d
REG_RX_ENABLE_FILTER_CTRL	ad9361.h	53;"	d
REG_RX_FAST_LOCK_PROGRAM_ADDR	ad9361.h	500;"	d
REG_RX_FAST_LOCK_PROGRAM_CTRL	ad9361.h	503;"	d
REG_RX_FAST_LOCK_PROGRAM_DATA	ad9361.h	501;"	d
REG_RX_FAST_LOCK_PROGRAM_READ	ad9361.h	502;"	d
REG_RX_FAST_LOCK_SETUP	ad9361.h	498;"	d
REG_RX_FAST_LOCK_SETUP_INIT_DELAY	ad9361.h	499;"	d
REG_RX_FILTER_COEF_ADDR	ad9361.h	218;"	d
REG_RX_FILTER_COEF_DATA_1	ad9361.h	219;"	d
REG_RX_FILTER_COEF_DATA_2	ad9361.h	220;"	d
REG_RX_FILTER_COEF_READ_DATA_1	ad9361.h	221;"	d
REG_RX_FILTER_COEF_READ_DATA_2	ad9361.h	222;"	d
REG_RX_FILTER_CONFIG	ad9361.h	223;"	d
REG_RX_FILTER_GAIN	ad9361.h	224;"	d
REG_RX_FORCE_ALC	ad9361.h	471;"	d
REG_RX_FORCE_VCO_TUNE_0	ad9361.h	472;"	d
REG_RX_FORCE_VCO_TUNE_1	ad9361.h	473;"	d
REG_RX_FRACT_BYTE_0	ad9361.h	468;"	d
REG_RX_FRACT_BYTE_1	ad9361.h	469;"	d
REG_RX_FRACT_BYTE_2	ad9361.h	470;"	d
REG_RX_INTEGER_BYTE_0	ad9361.h	466;"	d
REG_RX_INTEGER_BYTE_1	ad9361.h	467;"	d
REG_RX_LNA_BIAS_COARSE	ad9361.h	373;"	d
REG_RX_LNA_BIAS_FINE_0	ad9361.h	374;"	d
REG_RX_LNA_BIAS_FINE_1	ad9361.h	375;"	d
REG_RX_LOAD_SYNTH_DELAY	ad9361.h	85;"	d
REG_RX_LOCK_DETECT_CONFIG	ad9361.h	490;"	d
REG_RX_LOOP_FILTER_1	ad9361.h	479;"	d
REG_RX_LOOP_FILTER_2	ad9361.h	480;"	d
REG_RX_LOOP_FILTER_3	ad9361.h	481;"	d
REG_RX_LO_GEN_POWER_MODE	ad9361.h	504;"	d
REG_RX_MIX_GM_CONFIG	ad9361.h	376;"	d
REG_RX_MIX_INPUTBIAS	ad9361.h	394;"	d
REG_RX_MIX_LO_CM	ad9361.h	392;"	d
REG_RX_PATH_GAIN_LSB	ad9361.h	371;"	d
REG_RX_PATH_GAIN_MSB	ad9361.h	370;"	d
REG_RX_PFD_CONFIG	ad9361.h	465;"	d
REG_RX_QUAD_CAL_LEVEL	ad9361.h	312;"	d
REG_RX_QUAD_GAIN1	ad9361.h	318;"	d
REG_RX_QUAD_GAIN2	ad9361.h	319;"	d
REG_RX_SYNTH_POWER_DOWN_OVERRIDE	ad9361.h	124;"	d
REG_RX_TIA_CONFIG	ad9361.h	395;"	d
REG_RX_VCO_BIAS_1	ad9361.h	483;"	d
REG_RX_VCO_CAL	ad9361.h	489;"	d
REG_RX_VCO_CAL_REF	ad9361.h	485;"	d
REG_RX_VCO_LDO	ad9361.h	488;"	d
REG_RX_VCO_OUTPUT	ad9361.h	475;"	d
REG_RX_VCO_PD_OVERRIDES	ad9361.h	486;"	d
REG_RX_VCO_VARACTOR_CTRL_0	ad9361.h	496;"	d
REG_RX_VCO_VARACTOR_CTRL_1	ad9361.h	497;"	d
REG_SDM_CTRL	ad9361.h	123;"	d
REG_SDM_CTRL_1	ad9361.h	109;"	d
REG_SETTLE_COUNT	ad9361.h	317;"	d
REG_SETTLE_TIME	ad9361.h	291;"	d
REG_SLOW_LOOP_STATE	ad9361.h	562;"	d
REG_SMALL_LMT_OVERLOAD_THRESH	ad9361.h	237;"	d
REG_SOI_THRESH	ad9361.h	346;"	d
REG_SPI_CONF	ad9361.h	50;"	d
REG_SQUARER_CONFIG	ad9361.h	191;"	d
REG_START_TEMP_READING	ad9361.h	61;"	d
REG_STATE	ad9361.h	72;"	d
REG_SYMBOL_LSB	ad9361.h	368;"	d
REG_TEMPERATURE	ad9361.h	63;"	d
REG_TEMP_GAIN_COEF	ad9361.h	290;"	d
REG_TEMP_OFFSET	ad9361.h	60;"	d
REG_TEMP_SENSE2	ad9361.h	62;"	d
REG_TEMP_SENSOR_CONFIG	ad9361.h	64;"	d
REG_TEST_MUX_2I	ad9361.h	431;"	d
REG_TEST_MUX_2Q	ad9361.h	432;"	d
REG_THRESH_ACCUM	ad9361.h	193;"	d
REG_TIA1_C_LSB	ad9361.h	396;"	d
REG_TIA1_C_MSB	ad9361.h	397;"	d
REG_TIA2_C_LSB	ad9361.h	398;"	d
REG_TIA2_C_MSB	ad9361.h	399;"	d
REG_TPM_MODE_ENABLE	ad9361.h	148;"	d
REG_TX1_ATTEN_0	ad9361.h	152;"	d
REG_TX1_ATTEN_1	ad9361.h	153;"	d
REG_TX1_DIG_ATTEN	ad9361.h	158;"	d
REG_TX1_OUT_1_GAIN_CORR	ad9361.h	164;"	d
REG_TX1_OUT_1_OFFSET_I	ad9361.h	167;"	d
REG_TX1_OUT_1_OFFSET_Q	ad9361.h	168;"	d
REG_TX1_OUT_1_PHASE_CORR	ad9361.h	163;"	d
REG_TX1_OUT_2_GAIN_CORR	ad9361.h	172;"	d
REG_TX1_OUT_2_OFFSET_I	ad9361.h	175;"	d
REG_TX1_OUT_2_OFFSET_Q	ad9361.h	176;"	d
REG_TX1_OUT_2_PHASE_CORR	ad9361.h	171;"	d
REG_TX1_SYMBOL_ATTEN	ad9361.h	160;"	d
REG_TX2_ATTEN_0	ad9361.h	154;"	d
REG_TX2_ATTEN_1	ad9361.h	155;"	d
REG_TX2_DIG_ATTEN	ad9361.h	159;"	d
REG_TX2_OUT_1_GAIN_CORR	ad9361.h	166;"	d
REG_TX2_OUT_1_OFFSET_I	ad9361.h	169;"	d
REG_TX2_OUT_1_OFFSET_Q	ad9361.h	170;"	d
REG_TX2_OUT_1_PHASE_CORR	ad9361.h	165;"	d
REG_TX2_OUT_2_GAIN_CORR	ad9361.h	174;"	d
REG_TX2_OUT_2_OFFSET_I	ad9361.h	177;"	d
REG_TX2_OUT_2_OFFSET_Q	ad9361.h	178;"	d
REG_TX2_OUT_2_PHASE_CORR	ad9361.h	173;"	d
REG_TX2_SYMBOL_ATTEN	ad9361.h	161;"	d
REG_TXBBF_OPAMP_A	ad9361.h	199;"	d
REG_TXBBF_OPAMP_B	ad9361.h	200;"	d
REG_TXDAC_GN_I	ad9361.h	197;"	d
REG_TXDAC_GN_Q	ad9361.h	198;"	d
REG_TXDAC_VDS_I	ad9361.h	195;"	d
REG_TXDAC_VDS_Q	ad9361.h	196;"	d
REG_TX_ALCVARACT_OR	ad9361.h	514;"	d
REG_TX_ANALOG_POWER_DOWN_OVERRIDE_1	ad9361.h	130;"	d
REG_TX_ATTEN_OFFSET	ad9361.h	156;"	d
REG_TX_ATTEN_THRESH	ad9361.h	157;"	d
REG_TX_BBF_C1	ad9361.h	206;"	d
REG_TX_BBF_C2	ad9361.h	207;"	d
REG_TX_BBF_CP	ad9361.h	208;"	d
REG_TX_BBF_R1	ad9361.h	201;"	d
REG_TX_BBF_R2	ad9361.h	202;"	d
REG_TX_BBF_R2B	ad9361.h	210;"	d
REG_TX_BBF_R3	ad9361.h	203;"	d
REG_TX_BBF_R4	ad9361.h	204;"	d
REG_TX_BBF_RP	ad9361.h	205;"	d
REG_TX_BBF_TUNE	ad9361.h	211;"	d
REG_TX_BBF_TUNE_DIVIDER	ad9361.h	216;"	d
REG_TX_BBF_TUNE_MODE	ad9361.h	217;"	d
REG_TX_CAL_STATUS	ad9361.h	525;"	d
REG_TX_CLOCK_DATA_DELAY	ad9361.h	57;"	d
REG_TX_CORRECTION_WORD0	ad9361.h	535;"	d
REG_TX_CORRECTION_WORD1	ad9361.h	536;"	d
REG_TX_CP_CONFIG	ad9361.h	518;"	d
REG_TX_CP_CURRENT	ad9361.h	516;"	d
REG_TX_CP_LEVEL_DETECT	ad9361.h	532;"	d
REG_TX_CP_OFFSET	ad9361.h	517;"	d
REG_TX_CP_OVERRANGE_VCO_LOCK	ad9361.h	528;"	d
REG_TX_DITHERCP_CAL	ad9361.h	522;"	d
REG_TX_DSM_SETUP_0	ad9361.h	533;"	d
REG_TX_DSM_SETUP_1	ad9361.h	534;"	d
REG_TX_ENABLE_FILTER_CTRL	ad9361.h	52;"	d
REG_TX_FAST_LOCK_PROGRAM_ADDR	ad9361.h	549;"	d
REG_TX_FAST_LOCK_PROGRAM_CTRL	ad9361.h	552;"	d
REG_TX_FAST_LOCK_PROGRAM_DATA	ad9361.h	550;"	d
REG_TX_FAST_LOCK_PROGRAM_READ	ad9361.h	551;"	d
REG_TX_FAST_LOCK_SETUP	ad9361.h	547;"	d
REG_TX_FAST_LOCK_SETUP_INIT_DELAY	ad9361.h	548;"	d
REG_TX_FILTER_COEF_ADDR	ad9361.h	135;"	d
REG_TX_FILTER_COEF_READ_DATA_1	ad9361.h	138;"	d
REG_TX_FILTER_COEF_READ_DATA_2	ad9361.h	139;"	d
REG_TX_FILTER_COEF_WRITE_DATA_1	ad9361.h	136;"	d
REG_TX_FILTER_COEF_WRITE_DATA_2	ad9361.h	137;"	d
REG_TX_FILTER_CONF	ad9361.h	140;"	d
REG_TX_FORCE_ALC	ad9361.h	511;"	d
REG_TX_FORCE_BITS	ad9361.h	179;"	d
REG_TX_FORCE_VCO_TUNE_0	ad9361.h	512;"	d
REG_TX_FORCE_VCO_TUNE_1	ad9361.h	513;"	d
REG_TX_FRACT_BYTE_0	ad9361.h	508;"	d
REG_TX_FRACT_BYTE_1	ad9361.h	509;"	d
REG_TX_FRACT_BYTE_2	ad9361.h	510;"	d
REG_TX_INTEGER_BYTE_0	ad9361.h	506;"	d
REG_TX_INTEGER_BYTE_1	ad9361.h	507;"	d
REG_TX_LEVEL_THRESH	ad9361.h	144;"	d
REG_TX_LOAD_SYNTH_DELAY	ad9361.h	86;"	d
REG_TX_LOCK_DETECT_CONFIG	ad9361.h	531;"	d
REG_TX_LOOP_FILTER_1	ad9361.h	519;"	d
REG_TX_LOOP_FILTER_2	ad9361.h	520;"	d
REG_TX_LOOP_FILTER_3	ad9361.h	521;"	d
REG_TX_LO_GEN_POWER_MODE	ad9361.h	553;"	d
REG_TX_MON_1_CONFIG	ad9361.h	150;"	d
REG_TX_MON_2_CONFIG	ad9361.h	151;"	d
REG_TX_MON_DELAY	ad9361.h	143;"	d
REG_TX_MON_HIGH_GAIN	ad9361.h	142;"	d
REG_TX_MON_LOW_GAIN	ad9361.h	141;"	d
REG_TX_MON_TEMP_GAIN_COEF	ad9361.h	149;"	d
REG_TX_PFD_CONFIG	ad9361.h	505;"	d
REG_TX_QUAD_CAL_ATTEN	ad9361.h	192;"	d
REG_TX_QUAD_FULL_LMT_GAIN	ad9361.h	190;"	d
REG_TX_QUAD_LPF_GAIN	ad9361.h	194;"	d
REG_TX_RSSI1	ad9361.h	145;"	d
REG_TX_RSSI2	ad9361.h	146;"	d
REG_TX_RSSI_LSB	ad9361.h	147;"	d
REG_TX_SYMBOL_ATTEN_CONFIG	ad9361.h	162;"	d
REG_TX_SYNTH_POWER_DOWN_OVERRIDE	ad9361.h	125;"	d
REG_TX_TUNE_CTRL	ad9361.h	209;"	d
REG_TX_VCO_BIAS_1	ad9361.h	523;"	d
REG_TX_VCO_BIAS_2	ad9361.h	524;"	d
REG_TX_VCO_CAL	ad9361.h	530;"	d
REG_TX_VCO_CAL_REF	ad9361.h	526;"	d
REG_TX_VCO_LDO	ad9361.h	529;"	d
REG_TX_VCO_OUTPUT	ad9361.h	515;"	d
REG_TX_VCO_PD_OVERRIDES	ad9361.h	527;"	d
REG_TX_VCO_VARACTOR_CTRL_0	ad9361.h	537;"	d
REG_TX_VCO_VARACTOR_CTRL_1	ad9361.h	538;"	d
REG_VCO_CTRL	ad9361.h	120;"	d
REG_VCO_PROGRAM_1	ad9361.h	121;"	d
REG_VCO_PROGRAM_2	ad9361.h	122;"	d
REG_WAIT_COUNT	ad9361.h	339;"	d
REG_WORD_ADDRESS	ad9361.h	284;"	d
RESET_ACC_ON_GAIN_CHANGE	ad9361.h	1871;"	d
RESISTOR	ad9361.h	1309;"	d
RESTORE_DEFAULT	ad9361.h	/^	RESTORE_DEFAULT = 32,$/;"	e	enum:dig_tune_flags
REV_MASK	ad9361.h	861;"	d
RFDC_CAL	ad9361.h	751;"	d
RFIR_FOR_RSSI_MEASUREMENT	ad9361.h	1732;"	d
RFPLL_MODULUS	ad9361.h	2832;"	d
RF_DC_CAL	ad9361.h	1607;"	d
RF_DC_CALIBRATION_COUNT	ad9361.h	1849;"	d
RF_DC_OFFSET_ATTEN	ad9361.h	1855;"	d
RF_DC_OFFSET_TABLE_UPDATE_COUNT	ad9361.h	1854;"	d
RF_GAIN_FASTATTACK_AGC	ad9361.h	/^	RF_GAIN_FASTATTACK_AGC,$/;"	e	enum:rf_gain_ctrl_mode
RF_GAIN_HYBRID_AGC	ad9361.h	/^	RF_GAIN_HYBRID_AGC$/;"	e	enum:rf_gain_ctrl_mode
RF_GAIN_MGC	ad9361.h	/^	RF_GAIN_MGC,$/;"	e	enum:rf_gain_ctrl_mode
RF_GAIN_SLOWATTACK_AGC	ad9361.h	/^	RF_GAIN_SLOWATTACK_AGC,$/;"	e	enum:rf_gain_ctrl_mode
RF_MINIMUM_CALIBRATION_GAIN_INDEX	ad9361.h	1878;"	d
RF_SOI_THRESH	ad9361.h	1883;"	d
RGM	ad9361.h	1302;"	d
RHB1_EN	ad9361.h	613;"	d
RHB2_EN	ad9361.h	612;"	d
RP	ad9361.h	1258;"	d
RSSI_LSB_MASK1	ad9361.h	1952;"	d
RSSI_LSB_MASK2	ad9361.h	1953;"	d
RSSI_LSB_SHIFT	ad9361.h	1951;"	d
RSSI_MAX_WEIGHT	ad9361.h	2814;"	d
RSSI_MODE_SELECT	ad9361.h	1733;"	d
RSSI_MULTIPLIER	ad9361.h	2812;"	d
RSSI_RESOLUTION	ad9361.h	2813;"	d
RX1	ad9361_api.h	316;"	d
RX1RX2_BB_DC_OFFSET_TRACKING_CORRECTION_WORD_I	ad9361.h	1928;"	d
RX1RX2_BB_DC_OFFSET_TRACKING_CORRECTION_WORD_Q	ad9361.h	1933;"	d
RX1_BBF_BQ_GAIN	ad9361.h	2189;"	d
RX1_BBF_FORCE_GAIN	ad9361.h	2188;"	d
RX1_BBF_POLE_GAIN	ad9361.h	2190;"	d
RX1_BBF_POW_CTR	ad9361.h	2153;"	d
RX1_BBF_R1A	ad9361.h	2086;"	d
RX1_BBF_TUNE_COMP_I	ad9361.h	2179;"	d
RX1_BBF_TUNE_COMP_Q	ad9361.h	2180;"	d
RX1_BB_DC_OFFSET_CORRECTION_WORD_I	ad9361.h	1908;"	d
RX1_BB_DC_OFFSET_CORRECTION_WORD_Q	ad9361.h	1913;"	d
RX1_FAST_ATK_SHIFT	ad9361.h	2733;"	d
RX1_GAIN_CTRL_SETUP	ad9361.h	1350;"	d
RX1_GAIN_CTRL_SHIFT	ad9361.h	1353;"	d
RX1_INPUT_A_FORCE_OFFSET	ad9361.h	1841;"	d
RX1_INPUT_A_FORCE_PHGAIN	ad9361.h	1843;"	d
RX1_INPUT_A_I_DC_OFFSET_LSB	ad9361.h	1800;"	d
RX1_INPUT_A_I_DC_OFFSET_MSB	ad9361.h	1807;"	d
RX1_INPUT_A_Q_DC_OFFSET	ad9361.h	1801;"	d
RX1_INPUT_BC_FORCE_OFFSET	ad9361.h	1837;"	d
RX1_INPUT_BC_FORCE_PHGAIN	ad9361.h	1839;"	d
RX1_INPUT_BC_I_DC_OFFSET_LSB	ad9361.h	1818;"	d
RX1_INPUT_BC_I_DC_OFFSET_MSB	ad9361.h	1825;"	d
RX1_INPUT_BC_Q_DC_OFFSET	ad9361.h	1819;"	d
RX1_LNA_BYPASS	ad9361.h	1966;"	d
RX1_LNA_GAIN	ad9361.h	1968;"	d
RX1_MANUALFORCED_DIGITAL_GAIN	ad9361.h	1443;"	d
RX1_MANUAL_FULL_TABLE_LMT_TABLE_GAIN_INDEX	ad9361.h	1429;"	d
RX1_MANUAL_LPF_GAIN	ad9361.h	1436;"	d
RX1_MIX_GM_BIAS	ad9361.h	2001;"	d
RX1_MIX_GM_GAIN	ad9361.h	1996;"	d
RX1_PD_TUNE	ad9361.h	2099;"	d
RX1_RSSI_PREAMBLE	ad9361.h	1945;"	d
RX1_RSSI_SYMBOL	ad9361.h	1939;"	d
RX1_TUNE_RESAMPLE	ad9361.h	2098;"	d
RX1_TUNE_RESAMPLE_PHASE	ad9361.h	2097;"	d
RX2	ad9361_api.h	317;"	d
RX2_BBF_BQ_GAIN	ad9361.h	2196;"	d
RX2_BBF_FORCE_GAIN	ad9361.h	2195;"	d
RX2_BBF_POLE_GAIN	ad9361.h	2197;"	d
RX2_BBF_R1A	ad9361.h	2092;"	d
RX2_BBF_TUNE_COMP_I	ad9361.h	2181;"	d
RX2_BBF_TUNE_COMP_Q	ad9361.h	2182;"	d
RX2_BB_DC_OFFSET_CORRECTION_WORD_I	ad9361.h	1918;"	d
RX2_BB_DC_OFFSET_CORRECTION_WORD_Q	ad9361.h	1923;"	d
RX2_FAST_ATK_SHIFT	ad9361.h	2734;"	d
RX2_GAIN_CTRL_SETUP	ad9361.h	1349;"	d
RX2_GAIN_CTRL_SHIFT	ad9361.h	1352;"	d
RX2_INPUT_A_FORCE_OFFSET	ad9361.h	1840;"	d
RX2_INPUT_A_FORCE_PHGAIN	ad9361.h	1842;"	d
RX2_INPUT_A_I_DC_OFFSET	ad9361.h	1812;"	d
RX2_INPUT_A_Q_DC_OFFSET_LSB	ad9361.h	1806;"	d
RX2_INPUT_A_Q_DC_OFFSET_MSB	ad9361.h	1813;"	d
RX2_INPUT_BC_FORCE_OFFSET	ad9361.h	1836;"	d
RX2_INPUT_BC_FORCE_PHGAIN	ad9361.h	1838;"	d
RX2_INPUT_BC_I_DC_OFFSET	ad9361.h	1830;"	d
RX2_INPUT_BC_Q_DC_OFFSET_LSB	ad9361.h	1824;"	d
RX2_INPUT_BC_Q_DC_OFFSET_MSB	ad9361.h	1831;"	d
RX2_LNA_BYPASS	ad9361.h	1964;"	d
RX2_LNA_GAIN	ad9361.h	1967;"	d
RX2_MANUALFORCED_DIGITAL_GAIN	ad9361.h	1459;"	d
RX2_MANUAL_FULL_TABLE_LMT_TABLE_GAIN_INDEX	ad9361.h	1448;"	d
RX2_MANUAL_LPF_GAIN	ad9361.h	1453;"	d
RX2_MIX_GM_BIAS	ad9361.h	2012;"	d
RX2_MIX_GM_GAIN	ad9361.h	2007;"	d
RX2_PD_TUNE	ad9361.h	2106;"	d
RX2_RSSI_PREAMBLE	ad9361.h	1944;"	d
RX2_RSSI_SYMBOL	ad9361.h	1938;"	d
RX2_TUNE_RESAMPLE	ad9361.h	2105;"	d
RX2_TUNE_RESAMPLE_PHASE	ad9361.h	2104;"	d
RXBBF_BYPASS_BIAS_R	ad9361.h	2177;"	d
RXGAIN_FULL_TBL	ad9361.h	/^	RXGAIN_FULL_TBL,$/;"	e	enum:rx_gain_table_type
RXGAIN_SPLIT_TBL	ad9361.h	/^	RXGAIN_SPLIT_TBL,$/;"	e	enum:rx_gain_table_type
RXGAIN_TBLS_END	ad9361.h	/^	RXGAIN_TBLS_END,$/;"	e	enum:rx_gain_table_name
RX_1	ad9361.h	617;"	d
RX_2	ad9361.h	618;"	d
RX_BBF_C1_LSB	ad9361.h	2122;"	d
RX_BBF_C1_MSB	ad9361.h	2117;"	d
RX_BBF_C2_LSB	ad9361.h	2132;"	d
RX_BBF_C2_MSB	ad9361.h	2127;"	d
RX_BBF_C3_LSB	ad9361.h	2142;"	d
RX_BBF_C3_MSB	ad9361.h	2137;"	d
RX_BBF_CC1_CTR	ad9361.h	2147;"	d
RX_BBF_CC2_CTR	ad9361.h	2159;"	d
RX_BBF_CC3_CTR	ad9361.h	2172;"	d
RX_BBF_POW2_CTR	ad9361.h	2166;"	d
RX_BBF_POW3_CTR	ad9361.h	2164;"	d
RX_BBF_POWER_DOWN	ad9361.h	969;"	d
RX_BBF_R2346	ad9361.h	2112;"	d
RX_BBF_R5_TUNE	ad9361.h	2178;"	d
RX_BBF_RZ1_CTR	ad9361.h	2154;"	d
RX_BBF_RZ2_CTR	ad9361.h	2167;"	d
RX_BBF_RZ3_CTR	ad9361.h	2165;"	d
RX_BBF_TUNE_CTR	ad9361.h	2183;"	d
RX_BBF_TUNE_DIVIDE	ad9361.h	2203;"	d
RX_BB_TUNE_CAL	ad9361.h	745;"	d
RX_CALIBRATION_POWER_DOWN	ad9361.h	996;"	d
RX_CGB_BIAS	ad9361.h	2049;"	d
RX_CGB_INPUT_CM_SEL	ad9361.h	2048;"	d
RX_CGB_POWER_DOWN	ad9361.h	964;"	d
RX_CGB_SEG_ENABLE	ad9361.h	2043;"	d
RX_CHANNEL_ENABLE	ad9361.h	614;"	d
RX_CHANNEL_SWAP	ad9361.h	684;"	d
RX_DATA_DELAY	ad9361.h	638;"	d
RX_DIGITAL_IDX_MASK	ad9361.h	1444;"	d
RX_DISABLE	ad9361.h	620;"	d
RX_ENABLE	ad9361.h	619;"	d
RX_EXT_VCO_BUFFER_POWER_DOWN	ad9361.h	985;"	d
RX_FAST_LOCK_CONFIG_WORD_NUM	ad9361.h	2417;"	d
RX_FAST_LOCK_LOAD_SYNTH	ad9361.h	2398;"	d
RX_FAST_LOCK_MODE_ENABLE	ad9361.h	2401;"	d
RX_FAST_LOCK_PROFILE	ad9361.h	2402;"	d
RX_FAST_LOCK_PROFILE_ADDR	ad9361.h	2407;"	d
RX_FAST_LOCK_PROFILE_INIT	ad9361.h	2399;"	d
RX_FAST_LOCK_PROFILE_PIN_SELECT	ad9361.h	2400;"	d
RX_FAST_LOCK_PROFILE_WORD	ad9361.h	2408;"	d
RX_FAST_LOCK_PROGRAM_CLOCK_ENABLE	ad9361.h	2415;"	d
RX_FAST_LOCK_PROGRAM_WRITE	ad9361.h	2414;"	d
RX_FIR_ENABLE_DECIMATION	ad9361.h	616;"	d
RX_FRAME_PULSE_MODE	ad9361.h	685;"	d
RX_FULL_TABLELMT_TABLE_GAIN	ad9361.h	1179;"	d
RX_FULL_TABLELMT_TABLE_GAIN	ad9361.h	1789;"	d
RX_FULL_TBL_IDX_MASK	ad9361.h	1430;"	d
RX_GAIN_CTL_AGC_FAST_ATK	ad9361.h	1355;"	d
RX_GAIN_CTL_AGC_SLOW_ATK	ad9361.h	1356;"	d
RX_GAIN_CTL_AGC_SLOW_ATK_HYBD	ad9361.h	1357;"	d
RX_GAIN_CTL_MASK	ad9361.h	1351;"	d
RX_GAIN_CTL_MGC	ad9361.h	1354;"	d
RX_GAIN_STEP_CAL	ad9361.h	749;"	d
RX_INPUT	ad9361.h	626;"	d
RX_LMT_OVERLOAD_POWER_DOWN	ad9361.h	962;"	d
RX_LNA_BIAS	ad9361.h	1979;"	d
RX_LNA_BIAS_COARSE	ad9361.h	1973;"	d
RX_LNA_PCASCODE_BIAS	ad9361.h	1978;"	d
RX_LNA_POWER_DOWN	ad9361.h	993;"	d
RX_LNA_P_CASCODE_BIAS_FINE	ad9361.h	1984;"	d
RX_LO_GEN_POWER_MODE	ad9361.h	2422;"	d
RX_LO_POWER_DOWN	ad9361.h	943;"	d
RX_LPF_GAIN	ad9361.h	1198;"	d
RX_LPF_GAIN	ad9361.h	1795;"	d
RX_LPF_IDX_MASK	ad9361.h	1437;"	d
RX_MASK	ad9361.h	2777;"	d
RX_MIXER_GM_POWER_DOWN	ad9361.h	963;"	d
RX_MIXER_POWER_DOWN	ad9361.h	971;"	d
RX_MIX_GM_CM_OUT	ad9361.h	1989;"	d
RX_MIX_GM_PLOAD	ad9361.h	1990;"	d
RX_MIX_LO_CM	ad9361.h	2038;"	d
RX_NCO_FREQ	ad9361.h	1131;"	d
RX_NCO_PHASE_OFFSET	ad9361.h	1132;"	d
RX_OFFSET_DAC_CGIN_POWER_DOWN	ad9361.h	961;"	d
RX_OFFSET_DAC_CGOUT_POWER_DOWN	ad9361.h	972;"	d
RX_ON_CHIP_TERM	ad9361.h	880;"	d
RX_PATH_GAIN	ad9361.h	1958;"	d
RX_QUAD_CAL	ad9361.h	747;"	d
RX_QUAD_CAL_LEVEL	ad9361.h	1759;"	d
RX_REFCLK	ad9361.h	/^	RX_REFCLK,$/;"	e	enum:ad9361_clocks
RX_REF_DIVIDER_LSB	ad9361.h	2706;"	d
RX_REF_DIVIDER_MSB	ad9361.h	2701;"	d
RX_REF_DOUBLER_FB_DELAY	ad9361.h	2708;"	d
RX_REF_RESET_BAR	ad9361.h	2700;"	d
RX_RFPLL	ad9361.h	/^	RX_RFPLL,$/;"	e	enum:ad9361_clocks
RX_RFPLL_DUMMY	ad9361.h	/^	RX_RFPLL_DUMMY,$/;"	e	enum:ad9361_clocks
RX_RFPLL_INT	ad9361.h	/^	RX_RFPLL_INT,$/;"	e	enum:ad9361_clocks
RX_SAMPL_CLK	ad9361.h	/^	RX_SAMPL_CLK,$/;"	e	enum:ad9361_clocks
RX_SAMPL_FREQ	ad9361.h	/^	RX_SAMPL_FREQ,$/;"	e	enum:ad9361_pdata_rx_freq
RX_SYNTH_PTAT_POWER_DOWN	ad9361.h	945;"	d
RX_SYNTH_READY_MASK	ad9361.h	739;"	d
RX_SYNTH_VCO_ALC_POWER_DOWN	ad9361.h	944;"	d
RX_SYNTH_VCO_LDO_POWER_DOWN	ad9361.h	947;"	d
RX_SYNTH_VCO_POWER_DOWN	ad9361.h	946;"	d
RX_TIA_POWER_DOWN	ad9361.h	970;"	d
RX_TUNE_BBBW_KHZ	ad9361.h	2220;"	d
RX_TUNE_BBBW_MHZ	ad9361.h	2215;"	d
RX_TUNE_EVALTIME	ad9361.h	2202;"	d
RX_TUNE_MODE	ad9361.h	2205;"	d
RX_VCO_DIVIDER	ad9361.h	632;"	d
SDM_BYPASS	ad9361.h	2435;"	d
SDM_POWER_DOWN	ad9361.h	2436;"	d
SELECT_RX_CH	ad9361.h	1335;"	d
SEL_TX1_TX2	ad9361.h	1092;"	d
SETTLE_MAIN_ENABLE	ad9361.h	1138;"	d
SETTLE_TIME	ad9361.h	1707;"	d
SETTLING_DELAY	ad9361.h	1479;"	d
SET_GAIN	ad9361.h	/^	SET_GAIN,$/;"	e	enum:f_agc_target_gain_index_type
SIF_ADDR	ad9361.h	2369;"	d
SIF_ADDR	ad9361.h	2605;"	d
SIF_CLOCK	ad9361.h	2367;"	d
SIF_CLOCK	ad9361.h	2603;"	d
SIF_RESET_BAR	ad9361.h	2368;"	d
SIF_RESET_BAR	ad9361.h	2604;"	d
SINGLE_DATA_RATE	ad9361.h	706;"	d
SINGLE_PORT_MODE	ad9361.h	709;"	d
SIZE_FULL_TABLE	ad9361.c	392;"	d	file:
SIZE_SPLIT_TABLE	ad9361.c	478;"	d	file:
SKIP_STORE_RESULT	ad9361.h	/^	SKIP_STORE_RESULT = 16,$/;"	e	enum:dig_tune_flags
SLOW_ATTACK_HYBRID_MODE	ad9361.h	1348;"	d
SLOW_LOOP_STATE_RX1	ad9361.h	2746;"	d
SLOW_LOOP_STATE_RX2	ad9361.h	2745;"	d
SMALL_ADC_OL	ad9361.h	2757;"	d
SMALL_ADC_OVERLOAD_EXED_COUNTER	ad9361.h	1547;"	d
SMALL_LMT_OL	ad9361.h	2755;"	d
SMALL_LMT_OVERLOAD_EXED_COUNTER	ad9361.h	1541;"	d
SMALL_LMT_OVERLOAD_THRESH	ad9361.h	1418;"	d
SOFT_RESET	ad9361.h	1776;"	d
SOFT_RESET	ad9361.h	579;"	d
SPI_DEVICE_ID	parameters.h	111;"	d
SPI_DEVICE_ID	parameters.h	113;"	d
SPI_DEVICE_ID	parameters.h	99;"	d
SPI_WRITE_TO_REGISTER	ad9361.h	/^	SPI_WRITE_TO_REGISTER,$/;"	e	enum:rssi_restart_mode
START_CALIB_TABLE_CLOCK	ad9361.h	1689;"	d
START_GAIN_TABLE_CLOCK	ad9361.h	1630;"	d
START_GM_SUB_TABLE_CLOCK	ad9361.h	1670;"	d
START_RSSI_MEAS	ad9361.h	1729;"	d
START_RX_CLOCK	ad9361.h	1333;"	d
START_TEMP_READING	ad9361.h	665;"	d
STRONGER_SIGNAL_THRESH	ad9361.h	1491;"	d
SUCCESS	command.h	46;"	d
SUCCESS	util.h	57;"	d
SWAP_PORTS	ad9361.h	705;"	d
SYNTH_ENABLE_PIN_CTRL_MODE	ad9361.h	737;"	d
SYNTH_FRACT_WORD	ad9361.h	2235;"	d
SYNTH_FRACT_WORD	ad9361.h	2442;"	d
SYNTH_INTEGER_WORD	ad9361.h	2230;"	d
SYNTH_INTEGER_WORD	ad9361.h	2437;"	d
SYNTH_LUT_SIZE	ad9361.c	58;"	d	file:
SYNTH_RECAL	ad9361.h	2262;"	d
SYNTH_RECAL	ad9361.h	2480;"	d
SynthLUT	ad9361.h	/^struct SynthLUT {$/;"	s
SynthLUT_FDD	ad9361.c	/^static const struct SynthLUT SynthLUT_FDD[LUT_FTDD_ENT][SYNTH_LUT_SIZE] = {$/;"	v	typeref:struct:SynthLUT	file:
SynthLUT_TDD	ad9361.c	/^static const struct SynthLUT SynthLUT_TDD[LUT_FTDD_ENT][SYNTH_LUT_SIZE] = {$/;"	v	typeref:struct:SynthLUT	file:
T1_CLK	ad9361.h	/^	T1_CLK,$/;"	e	enum:ad9361_clocks
T1_FREQ	ad9361.h	/^	T1_FREQ,$/;"	e	enum:ad9361_pdata_tx_freq
T2_CLK	ad9361.h	/^	T2_CLK,$/;"	e	enum:ad9361_clocks
T2_FREQ	ad9361.h	/^	T2_FREQ,$/;"	e	enum:ad9361_pdata_tx_freq
TBL_1300_4000_MHZ	ad9361.h	/^	TBL_1300_4000_MHZ,$/;"	e	enum:rx_gain_table_name
TBL_200_1300_MHZ	ad9361.h	/^	TBL_200_1300_MHZ,$/;"	e	enum:rx_gain_table_name
TBL_4000_6000_MHZ	ad9361.h	/^	TBL_4000_6000_MHZ,$/;"	e	enum:rx_gain_table_name
TEMP_SENSE_PERIODIC_ENABLE	ad9361.h	670;"	d
TEMP_SENSE_VBE_TEST	ad9361.h	2791;"	d
TEMP_SENSOR_DECIMATION	ad9361.h	676;"	d
THB1_EN	ad9361.h	600;"	d
THB2_EN	ad9361.h	599;"	d
THB3_ENABLE_INTERP	ad9361.h	602;"	d
THRESH_ACCUMULATOR	ad9361.h	1193;"	d
TIA1_C_LSB	ad9361.h	2064;"	d
TIA1_C_MSB	ad9361.h	2069;"	d
TIA1_OVERRIDE_C	ad9361.h	2056;"	d
TIA1_OVERRIDE_R	ad9361.h	2057;"	d
TIA1_RF	ad9361.h	2063;"	d
TIA2_C_LSB	ad9361.h	2075;"	d
TIA2_C_MSB	ad9361.h	2080;"	d
TIA2_OVERRIDE_C	ad9361.h	2054;"	d
TIA2_OVERRIDE_R	ad9361.h	2055;"	d
TIA2_RF	ad9361.h	2074;"	d
TIA_GAIN	ad9361.h	1601;"	d
TIA_SEL_CC	ad9361.h	2058;"	d
TONE_FREQ	ad9361.h	2769;"	d
TONE_LEVEL	ad9361.h	2770;"	d
TONE_PRBS	ad9361.h	2767;"	d
TO_ALERT	ad9361.h	728;"	d
TO_DIGITAL_GAIN	ad9361.h	1624;"	d
TO_LNA_GAIN	ad9361.h	1613;"	d
TO_LPF_GAIN	ad9361.h	1619;"	d
TO_MIXER_GM_GAIN	ad9361.h	1614;"	d
TUNER_MODE	ad9361.h	1327;"	d
TUNER_RESAMPLE	ad9361.h	1279;"	d
TUNER_RESAMPLE_PHASE	ad9361.h	1280;"	d
TUNE_COMP_MASK	ad9361.h	1326;"	d
TUNE_COMP_MASK	ad9361.h	2204;"	d
TUNE_CTRL	ad9361.h	1281;"	d
TUNE_OVERRIDE	ad9361.h	2111;"	d
TX1	ad9361_api.h	319;"	d
TX1_CONVERGENCE_COUNT	ad9361.h	1167;"	d
TX1_LO_CONV	ad9361.h	1165;"	d
TX1_MONITOR_ENABLE	ad9361.h	590;"	d
TX1_MON_ENABLE	ad9361.h	1057;"	d
TX1_SSB_CONV	ad9361.h	1166;"	d
TX2	ad9361_api.h	320;"	d
TX2_CONVERGENCE_COUNT	ad9361.h	1174;"	d
TX2_LO_CONV	ad9361.h	1172;"	d
TX2_MONITOR_ENABLE	ad9361.h	589;"	d
TX2_MON_ENABLE	ad9361.h	1056;"	d
TX2_SSB_CONV	ad9361.h	1173;"	d
TXA	ad9361_api.h	335;"	d
TXB	ad9361_api.h	336;"	d
TXDAC_GN_I	ad9361.h	1213;"	d
TXDAC_GN_Q	ad9361.h	1218;"	d
TXDAC_VDS_I	ad9361.h	1203;"	d
TXDAC_VDS_Q	ad9361.h	1208;"	d
TXMON_CAL	ad9361.h	750;"	d
TXNRX_SPI_CTRL	ad9361.h	736;"	d
TX_1	ad9361.h	604;"	d
TX_1_ATTEN	ad9361.h	1076;"	d
TX_1_SYMBOL_ATTEN	ad9361.h	1102;"	d
TX_2	ad9361.h	605;"	d
TX_2_ATTEN	ad9361.h	1081;"	d
TX_2_SYMBOL_ATTEN	ad9361.h	1107;"	d
TX_ATTEN_OFFSET	ad9361.h	1087;"	d
TX_BBF_BYPASS_BIAS_R	ad9361.h	1286;"	d
TX_BBF_POWER_DOWN	ad9361.h	978;"	d
TX_BBF_TUNE_DIVIDER	ad9361.h	1325;"	d
TX_BB_TUNE_CAL	ad9361.h	746;"	d
TX_CHANNEL_ENABLE	ad9361.h	601;"	d
TX_CHANNEL_SWAP	ad9361.h	683;"	d
TX_CP_CURRENT_DFLT	ad9361.h	2473;"	d
TX_DAC_BIAS_POWER_DOWN	ad9361.h	980;"	d
TX_DAC_POWER_DOWN	ad9361.h	979;"	d
TX_DATA_DELAY	ad9361.h	644;"	d
TX_DISABLE	ad9361.h	607;"	d
TX_ENABLE	ad9361.h	606;"	d
TX_EXT_VCO_BUFFER_POWER_DOWN	ad9361.h	986;"	d
TX_FAST_LOCK_LOAD_SYNTH	ad9361.h	2663;"	d
TX_FAST_LOCK_MODE_ENABLE	ad9361.h	2666;"	d
TX_FAST_LOCK_PROFILE	ad9361.h	2667;"	d
TX_FAST_LOCK_PROFILE_INIT	ad9361.h	2664;"	d
TX_FAST_LOCK_PROFILE_PIN_SELECT	ad9361.h	2665;"	d
TX_FAST_LOCK_PROGRAM_CLOCK_ENABLE	ad9361.h	2673;"	d
TX_FAST_LOCK_PROGRAM_WRITE	ad9361.h	2672;"	d
TX_FIR_ENABLE_INTERPOLATION	ad9361.h	603;"	d
TX_FIR_GAIN_6DB	ad9361.h	1024;"	d
TX_LEVEL_THRESH	ad9361.h	1044;"	d
TX_LO_GEN_POWER_MODE	ad9361.h	2678;"	d
TX_LO_POWER_DOWN	ad9361.h	952;"	d
TX_MON1	ad9361_api.h	331;"	d
TX_MON1_2	ad9361_api.h	333;"	d
TX_MON2	ad9361_api.h	332;"	d
TX_MONITOR_POWER_DOWN	ad9361.h	987;"	d
TX_MON_1_GAIN	ad9361.h	1065;"	d
TX_MON_1_LO_CM	ad9361.h	1064;"	d
TX_MON_2_GAIN	ad9361.h	1071;"	d
TX_MON_2_LO_CM	ad9361.h	1070;"	d
TX_MON_DELAY_COUNTER	ad9361.h	1045;"	d
TX_MON_DURATION	ad9361.h	1059;"	d
TX_MON_HIGH_GAIN	ad9361.h	1039;"	d
TX_MON_LOW_GAIN	ad9361.h	1034;"	d
TX_MON_TRACK	ad9361.h	1033;"	d
TX_NCO_FREQ	ad9361.h	1158;"	d
TX_OUTPUT	ad9361.h	625;"	d
TX_QUAD_CAL	ad9361.h	748;"	d
TX_REFCLK	ad9361.h	/^	TX_REFCLK,$/;"	e	enum:ad9361_clocks
TX_REF_DIVIDER	ad9361.h	2709;"	d
TX_REF_DOUBLER_FB_DELAY	ad9361.h	2710;"	d
TX_REF_RESET_BAR	ad9361.h	2707;"	d
TX_RFPLL	ad9361.h	/^	TX_RFPLL,$/;"	e	enum:ad9361_clocks
TX_RFPLL_DUMMY	ad9361.h	/^	TX_RFPLL_DUMMY,$/;"	e	enum:ad9361_clocks
TX_RFPLL_INT	ad9361.h	/^	TX_RFPLL_INT,$/;"	e	enum:ad9361_clocks
TX_RSSI_1	ad9361.h	1051;"	d
TX_RSSI_2	ad9361.h	1050;"	d
TX_SAMPL_CLK	ad9361.h	/^	TX_SAMPL_CLK,$/;"	e	enum:ad9361_clocks
TX_SAMPL_FREQ	ad9361.h	/^	TX_SAMPL_FREQ,$/;"	e	enum:ad9361_pdata_tx_freq
TX_SECONDARY_FILTER_POWER_DOWN	ad9361.h	977;"	d
TX_SYNTH_PTAT_POWER_DOWN	ad9361.h	954;"	d
TX_SYNTH_READY_MASK	ad9361.h	740;"	d
TX_SYNTH_VCO_ALC_POWER_DOWN	ad9361.h	953;"	d
TX_SYNTH_VCO_LDO_POWER_DOWN	ad9361.h	956;"	d
TX_SYNTH_VCO_POWER_DOWN	ad9361.h	955;"	d
TX_UPCONVERTER_POWER_DOWN	ad9361.h	988;"	d
TX_VCO_DIVIDER	ad9361.h	631;"	d
UNKNOWN_CMD	console.h	45;"	d
UPDATE_FREQ_WORD	ad9361.h	2374;"	d
UPDATE_FREQ_WORD	ad9361.h	2381;"	d
UPDATE_FREQ_WORD	ad9361.h	2610;"	d
UPDATE_FREQ_WORD	ad9361.h	2617;"	d
UPDATE_TRACKING_WORD	ad9361.h	1896;"	d
USE_AGC_FOR_LMTLPF_GAIN	ad9361.h	1373;"	d
USE_CTRL_IN_FOR_SYMBOL_ATTEN	ad9361.h	1113;"	d
USE_DATA_PORT	ad9361.h	2790;"	d
USE_HB1_OUT_FOR_DEC_PWR_MEAS	ad9361.h	1745;"	d
USE_HB3_OUT_FOR_ADC_PWR_MEAS	ad9361.h	1744;"	d
USE_LAST_LOCK_LEVEL_FOR_SET_GAIN	ad9361.h	1476;"	d
USE_SETTLE_COUNT_FOR_DC_CAL_WAIT	ad9361.h	1766;"	d
USE_TX1_PIN_SYMBOL_ATTEN	ad9361.h	1112;"	d
USE_WAIT_COUNTER_FOR_RF_DC_INIT_CAL	ad9361.h	1868;"	d
VBIAS_CTRL	ad9361.h	1188;"	d
VCO_BIAS_REF	ad9361.h	2301;"	d
VCO_BIAS_REF	ad9361.h	2525;"	d
VCO_BIAS_TCF	ad9361.h	2300;"	d
VCO_BIAS_TCF	ad9361.h	2524;"	d
VCO_BYPASS_BIAS_DAC_R	ad9361.h	2530;"	d
VCO_Bias_Ref	ad9361.h	/^	uint8_t VCO_Bias_Ref;$/;"	m	struct:SynthLUT
VCO_Bias_Tcf	ad9361.h	/^	uint8_t VCO_Bias_Tcf;$/;"	m	struct:SynthLUT
VCO_CAL_ALC_WAIT	ad9361.h	2343;"	d
VCO_CAL_ALC_WAIT	ad9361.h	2578;"	d
VCO_CAL_BUSY	ad9361.h	2308;"	d
VCO_CAL_BUSY	ad9361.h	2542;"	d
VCO_CAL_COUNT	ad9361.h	2344;"	d
VCO_CAL_COUNT	ad9361.h	2579;"	d
VCO_CAL_EN	ad9361.h	2342;"	d
VCO_CAL_EN	ad9361.h	2577;"	d
VCO_CAL_OFFSET	ad9361.h	2240;"	d
VCO_CAL_OFFSET	ad9361.h	2456;"	d
VCO_CAL_REF_MONITOR	ad9361.h	2548;"	d
VCO_CAL_REF_TCF	ad9361.h	2314;"	d
VCO_CAL_REF_TCF	ad9361.h	2549;"	d
VCO_COMP_BYPASS_BIAS_R	ad9361.h	2531;"	d
VCO_Cal_Offset	ad9361.h	/^	uint8_t VCO_Cal_Offset;$/;"	m	struct:SynthLUT
VCO_LDO_BYPASS	ad9361.h	2334;"	d
VCO_LDO_BYPASS	ad9361.h	2569;"	d
VCO_LDO_FILTER_BYPASS	ad9361.h	2691;"	d
VCO_LDO_INRUSH	ad9361.h	2335;"	d
VCO_LDO_INRUSH	ad9361.h	2570;"	d
VCO_LDO_REF_SEL	ad9361.h	2692;"	d
VCO_LDO_SEL	ad9361.h	2336;"	d
VCO_LDO_VDROP_SEL	ad9361.h	2337;"	d
VCO_LDO_VDROP_SEL	ad9361.h	2572;"	d
VCO_LDO_VOUT_SEL	ad9361.h	2571;"	d
VCO_LOCK	ad9361.h	2329;"	d
VCO_LOCK	ad9361.h	2564;"	d
VCO_MHz	ad9361.h	/^	uint16_t VCO_MHz;$/;"	m	struct:SynthLUT
VCO_OUTPUT_LEVEL	ad9361.h	2252;"	d
VCO_OUTPUT_LEVEL	ad9361.h	2468;"	d
VCO_Output_Level	ad9361.h	/^	uint8_t VCO_Output_Level;$/;"	m	struct:SynthLUT
VCO_VARACTOR	ad9361.h	2246;"	d
VCO_VARACTOR	ad9361.h	2462;"	d
VCO_VARACTOR_OFFSET	ad9361.h	2388;"	d
VCO_VARACTOR_OFFSET	ad9361.h	2624;"	d
VCO_VARACTOR_REFERENCE	ad9361.h	2393;"	d
VCO_VARACTOR_REFERENCE	ad9361.h	2629;"	d
VCO_VARACTOR_REFERENCE_TCF	ad9361.h	2387;"	d
VCO_VARACTOR_REFERENCE_TCF	ad9361.h	2623;"	d
VCO_Varactor	ad9361.h	/^	uint8_t VCO_Varactor;$/;"	m	struct:SynthLUT
VCO_Varactor_Reference	ad9361.h	/^	uint8_t VCO_Varactor_Reference;$/;"	m	struct:SynthLUT
VERSION_IS	dac_core.h	52;"	d
VTUNE_FORCE	ad9361.h	2474;"	d
WIRE3_SPI	ad9361.h	580;"	d
WRITE_CMD	console.h	48;"	d
WRITE_GAIN_TABLE	ad9361.h	1629;"	d
WRITE_GM_SUB_TABLE	ad9361.h	1669;"	d
WRITE_LNA_ERROR_TABLE	ad9361.h	1687;"	d
WRITE_LNA_GAIN_DIFF	ad9361.h	1688;"	d
WRITE_MIXER_ERROR_TABLE	ad9361.h	1686;"	d
WRITE_RX	ad9361.h	1332;"	d
XILINX_PLATFORM	main.c	44;"	d	file:
XO_BYPASS	ad9361.h	649;"	d
_LSB_FIRST	ad9361.h	582;"	d
_SOFT_RESET	ad9361.h	584;"	d
_WIRE3_SPI	ad9361.h	583;"	d
__COMMAND_H__	command.h	40;"	d
__CONSOLE_H__	console.h	40;"	d
__NO_OS_PORT_H__	util.h	40;"	d
__PARAMETERS_H__	parameters.h	40;"	d
__PLATFORM_CONFIG_H_	platform_config.h	2;"	d
__ad9361_spi_readf	ad9361.c	/^static int32_t __ad9361_spi_readf(struct spi_device *spi, uint32_t reg,$/;"	f	file:
__ad9361_spi_writef	ad9361.c	/^static int32_t __ad9361_spi_writef(struct spi_device *spi, uint32_t reg,$/;"	f	file:
__ad9361_tx_quad_calib	ad9361.c	/^static int32_t __ad9361_tx_quad_calib(struct ad9361_rf_phy *phy, uint32_t phase,$/;"	f	file:
__ad9361_update_rf_bandwidth	ad9361.c	/^static int32_t __ad9361_update_rf_bandwidth(struct ad9361_rf_phy *phy,$/;"	f	file:
__ffs	util.c	/^uint32_t __ffs(uint32_t word)$/;"	f
__func__	util.h	116;"	d
ad9361_auxadc_setup	ad9361.c	/^static int32_t ad9361_auxadc_setup(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_auxdac_get	ad9361.c	/^int32_t ad9361_auxdac_get(struct ad9361_rf_phy *phy, int32_t dac)$/;"	f
ad9361_auxdac_set	ad9361.c	/^static int32_t ad9361_auxdac_set(struct ad9361_rf_phy *phy, int32_t dac,$/;"	f	file:
ad9361_auxdac_setup	ad9361.c	/^static int32_t ad9361_auxdac_setup(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_bb_clk_change_handler	ad9361.c	/^static int32_t ad9361_bb_clk_change_handler(struct ad9361_rf_phy *phy)$/;"	f	file:
ad9361_bb_dc_offset_calib	ad9361.c	/^static int32_t ad9361_bb_dc_offset_calib(struct ad9361_rf_phy *phy)$/;"	f	file:
ad9361_bbpll_recalc_rate	ad9361.c	/^uint32_t ad9361_bbpll_recalc_rate(struct refclk_scale *clk_priv,$/;"	f
ad9361_bbpll_round_rate	ad9361.c	/^int32_t ad9361_bbpll_round_rate(struct refclk_scale *clk_priv, uint32_t rate,$/;"	f
ad9361_bbpll_set_rate	ad9361.c	/^int32_t ad9361_bbpll_set_rate(struct refclk_scale *clk_priv, uint32_t rate,$/;"	f
ad9361_bist_loopback	ad9361.c	/^int32_t ad9361_bist_loopback(struct ad9361_rf_phy *phy, int32_t mode)$/;"	f
ad9361_bist_mode	ad9361.h	/^enum ad9361_bist_mode {$/;"	g
ad9361_bist_prbs	ad9361.c	/^int32_t ad9361_bist_prbs(struct ad9361_rf_phy *phy, enum ad9361_bist_mode mode)$/;"	f
ad9361_bist_tone	ad9361.c	/^int32_t ad9361_bist_tone(struct ad9361_rf_phy *phy,$/;"	f
ad9361_calc_rfpll_int_divder	ad9361.c	/^static int32_t ad9361_calc_rfpll_int_divder(uint64_t freq,$/;"	f	file:
ad9361_calc_rfpll_int_freq	ad9361.c	/^static uint64_t ad9361_calc_rfpll_int_freq(uint64_t parent_rate,$/;"	f	file:
ad9361_calculate_rf_clock_chain	ad9361.c	/^int32_t ad9361_calculate_rf_clock_chain(struct ad9361_rf_phy *phy,$/;"	f
ad9361_check_cal_done	ad9361.c	/^static int32_t ad9361_check_cal_done(struct ad9361_rf_phy *phy, uint32_t reg,$/;"	f	file:
ad9361_clear_state	ad9361.c	/^void ad9361_clear_state(struct ad9361_rf_phy *phy)$/;"	f
ad9361_clk_factor_recalc_rate	ad9361.c	/^uint32_t ad9361_clk_factor_recalc_rate(struct refclk_scale *clk_priv,$/;"	f
ad9361_clk_factor_round_rate	ad9361.c	/^int32_t ad9361_clk_factor_round_rate(struct refclk_scale *clk_priv, uint32_t rate,$/;"	f
ad9361_clk_factor_set_rate	ad9361.c	/^int32_t ad9361_clk_factor_set_rate(struct refclk_scale *clk_priv, uint32_t rate,$/;"	f
ad9361_clk_mux_set_parent	ad9361.c	/^int32_t ad9361_clk_mux_set_parent(struct refclk_scale *clk_priv, uint8_t index)$/;"	f
ad9361_clk_register	ad9361.c	/^static struct clk *ad9361_clk_register(struct ad9361_rf_phy *phy, const char *name,$/;"	f	file:
ad9361_clkout	ad9361.h	/^enum ad9361_clkout {$/;"	g
ad9361_clkout_control	ad9361.c	/^static int32_t ad9361_clkout_control(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_clkout_mode	ad9361.h	/^	enum ad9361_clkout	ad9361_clkout_mode;$/;"	m	struct:ad9361_phy_platform_data	typeref:enum:ad9361_phy_platform_data::ad9361_clkout
ad9361_clocks	ad9361.h	/^enum ad9361_clocks {$/;"	g
ad9361_ctrl_outs_setup	ad9361.c	/^static int32_t ad9361_ctrl_outs_setup(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_debugfs_entry	ad9361.h	/^struct ad9361_debugfs_entry {$/;"	s
ad9361_dig_interface_timing_analysis	ad9361_conv.c	/^int32_t ad9361_dig_interface_timing_analysis(struct ad9361_rf_phy *phy,$/;"	f
ad9361_dig_tune	ad9361_conv.c	/^int32_t ad9361_dig_tune(struct ad9361_rf_phy *phy, uint32_t max_freq,$/;"	f
ad9361_dig_tune_iodelay	ad9361_conv.c	/^static int32_t ad9361_dig_tune_iodelay(struct ad9361_rf_phy *phy, bool tx)$/;"	f	file:
ad9361_dig_tune_verbose_print	ad9361_conv.c	/^static void ad9361_dig_tune_verbose_print(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_do_calib	ad9361_api.c	/^int32_t ad9361_do_calib(struct ad9361_rf_phy *phy, uint32_t cal, int32_t arg)$/;"	f
ad9361_do_calib_run	ad9361.c	/^int32_t ad9361_do_calib_run(struct ad9361_rf_phy *phy, uint32_t cal, int32_t arg)$/;"	f
ad9361_do_mcs	ad9361_api.c	/^int32_t ad9361_do_mcs(struct ad9361_rf_phy *phy_master, struct ad9361_rf_phy *phy_slave)$/;"	f
ad9361_en_dis_rx	ad9361.c	/^static int32_t ad9361_en_dis_rx(struct ad9361_rf_phy *phy, uint32_t rx_if, uint32_t enable)$/;"	f	file:
ad9361_en_dis_tx	ad9361.c	/^static int32_t ad9361_en_dis_tx(struct ad9361_rf_phy *phy, uint32_t tx_if, uint32_t enable)$/;"	f	file:
ad9361_ensm_force_state	ad9361.c	/^void ad9361_ensm_force_state(struct ad9361_rf_phy *phy, uint8_t ensm_state)$/;"	f
ad9361_ensm_mode	ad9361_api.h	/^enum ad9361_ensm_mode {$/;"	g
ad9361_ensm_restore_prev_state	ad9361.c	/^void ad9361_ensm_restore_prev_state(struct ad9361_rf_phy *phy)$/;"	f
ad9361_ensm_set_state	ad9361.c	/^int32_t ad9361_ensm_set_state(struct ad9361_rf_phy *phy, uint8_t ensm_state,$/;"	f
ad9361_ensm_states	ad9361.c	/^const char *ad9361_ensm_states[] = {$/;"	v
ad9361_fastlock	ad9361.h	/^struct ad9361_fastlock {$/;"	s
ad9361_fastlock_entry	ad9361.h	/^struct ad9361_fastlock_entry {$/;"	s
ad9361_fastlock_load	ad9361.c	/^int32_t ad9361_fastlock_load(struct ad9361_rf_phy *phy, bool tx,$/;"	f
ad9361_fastlock_prepare	ad9361.c	/^static int32_t ad9361_fastlock_prepare(struct ad9361_rf_phy *phy, bool tx,$/;"	f	file:
ad9361_fastlock_readval	ad9361.c	/^static int32_t ad9361_fastlock_readval(struct spi_device *spi, bool tx,$/;"	f	file:
ad9361_fastlock_recall	ad9361.c	/^int32_t ad9361_fastlock_recall(struct ad9361_rf_phy *phy, bool tx, uint32_t profile)$/;"	f
ad9361_fastlock_save	ad9361.c	/^int32_t ad9361_fastlock_save(struct ad9361_rf_phy *phy, bool tx,$/;"	f
ad9361_fastlock_store	ad9361.c	/^int32_t ad9361_fastlock_store(struct ad9361_rf_phy *phy, bool tx, uint32_t profile)$/;"	f
ad9361_fastlock_writeval	ad9361.c	/^static int32_t ad9361_fastlock_writeval(struct spi_device *spi, bool tx,$/;"	f	file:
ad9361_find_opt	ad9361.c	/^int32_t ad9361_find_opt(uint8_t *field, uint32_t size, uint32_t *ret_start)$/;"	f
ad9361_from_clk	ad9361.c	/^uint64_t ad9361_from_clk(uint32_t freq)$/;"	f
ad9361_gc_setup	ad9361.c	/^static int32_t ad9361_gc_setup(struct ad9361_rf_phy *phy, struct gain_control *ctrl)$/;"	f	file:
ad9361_gc_update	ad9361.c	/^static int32_t ad9361_gc_update(struct ad9361_rf_phy *phy)$/;"	f	file:
ad9361_get_auxadc	ad9361.c	/^int32_t ad9361_get_auxadc(struct ad9361_rf_phy *phy)$/;"	f
ad9361_get_bist_loopback	ad9361.c	/^void ad9361_get_bist_loopback(struct ad9361_rf_phy *phy, int32_t *mode)$/;"	f
ad9361_get_bist_prbs	ad9361.c	/^void ad9361_get_bist_prbs(struct ad9361_rf_phy *phy, enum ad9361_bist_mode *mode)$/;"	f
ad9361_get_bist_tone	ad9361.c	/^void ad9361_get_bist_tone(struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_clk_scaler	ad9361.c	/^static int32_t ad9361_get_clk_scaler(struct refclk_scale *clk_priv)$/;"	f	file:
ad9361_get_en_state_machine_mode	ad9361_api.c	/^int32_t ad9361_get_en_state_machine_mode (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_full_table_gain	ad9361.c	/^static int32_t ad9361_get_full_table_gain(struct ad9361_rf_phy *phy, uint32_t idx_reg,$/;"	f	file:
ad9361_get_rx_bbdc_track_en_dis	ad9361_api.c	/^int32_t ad9361_get_rx_bbdc_track_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_fir_config	ad9361_api.c	/^int32_t ad9361_get_rx_fir_config(struct ad9361_rf_phy *phy, uint8_t rx_ch, AD9361_RXFIRConfig *fir_cfg)$/;"	f
ad9361_get_rx_fir_en_dis	ad9361_api.c	/^int32_t ad9361_get_rx_fir_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_gain	ad9361.c	/^int32_t ad9361_get_rx_gain(struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_gain_control_mode	ad9361_api.c	/^int32_t ad9361_get_rx_gain_control_mode (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_lo_freq	ad9361_api.c	/^int32_t ad9361_get_rx_lo_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_quad_track_en_dis	ad9361_api.c	/^int32_t ad9361_get_rx_quad_track_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_rf_bandwidth	ad9361_api.c	/^int32_t ad9361_get_rx_rf_bandwidth (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_rf_gain	ad9361_api.c	/^int32_t ad9361_get_rx_rf_gain (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_rf_port_input	ad9361_api.c	/^int32_t ad9361_get_rx_rf_port_input (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_rfdc_track_en_dis	ad9361_api.c	/^int32_t ad9361_get_rx_rfdc_track_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_rssi	ad9361_api.c	/^int32_t ad9361_get_rx_rssi (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_rx_sampling_freq	ad9361_api.c	/^int32_t ad9361_get_rx_sampling_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_split_table_gain	ad9361.c	/^static int32_t ad9361_get_split_table_gain(struct ad9361_rf_phy *phy, uint32_t idx_reg,$/;"	f	file:
ad9361_get_temp	ad9361.c	/^int32_t ad9361_get_temp(struct ad9361_rf_phy *phy)$/;"	f
ad9361_get_trx_clock_chain	ad9361.c	/^int32_t ad9361_get_trx_clock_chain(struct ad9361_rf_phy *phy, uint32_t *rx_path_clks,$/;"	f
ad9361_get_trx_path_clks	ad9361_api.c	/^int32_t ad9361_get_trx_path_clks(struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_trx_rate_gov	ad9361_api.c	/^int32_t ad9361_get_trx_rate_gov (struct ad9361_rf_phy *phy, uint32_t *rate_gov)$/;"	f
ad9361_get_tx_atten	ad9361.c	/^int32_t ad9361_get_tx_atten(struct ad9361_rf_phy *phy, uint32_t tx_num)$/;"	f
ad9361_get_tx_attenuation	ad9361_api.c	/^int32_t ad9361_get_tx_attenuation (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_tx_auto_cal_en_dis	ad9361_api.c	/^int32_t ad9361_get_tx_auto_cal_en_dis (struct ad9361_rf_phy *phy, uint8_t *en_dis)$/;"	f
ad9361_get_tx_fir_config	ad9361_api.c	/^int32_t ad9361_get_tx_fir_config(struct ad9361_rf_phy *phy, uint8_t tx_ch, AD9361_TXFIRConfig *fir_cfg)$/;"	f
ad9361_get_tx_fir_en_dis	ad9361_api.c	/^int32_t ad9361_get_tx_fir_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_tx_lo_freq	ad9361_api.c	/^int32_t ad9361_get_tx_lo_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_tx_rf_bandwidth	ad9361_api.c	/^int32_t ad9361_get_tx_rf_bandwidth (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_tx_rf_port_output	ad9361_api.c	/^int32_t ad9361_get_tx_rf_port_output (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_tx_rssi	ad9361_api.c	/^int32_t ad9361_get_tx_rssi (struct ad9361_rf_phy *phy,$/;"	f
ad9361_get_tx_sampling_freq	ad9361_api.c	/^int32_t ad9361_get_tx_sampling_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_gpo_setup	ad9361.c	/^static int32_t ad9361_gpo_setup(struct ad9361_rf_phy *phy, struct gpo_control *ctrl)$/;"	f	file:
ad9361_gt_tableindex	ad9361.c	/^static enum rx_gain_table_name ad9361_gt_tableindex(uint64_t freq)$/;"	f	file:
ad9361_hdl_loopback	ad9361_conv.c	/^int32_t ad9361_hdl_loopback(struct ad9361_rf_phy *phy, bool enable)$/;"	f
ad9361_init	ad9361_api.c	/^int32_t ad9361_init (struct ad9361_rf_phy **ad9361_phy, AD9361_InitParam *init_param)$/;"	f
ad9361_init_gain_info	ad9361.c	/^static void ad9361_init_gain_info(struct rx_gain_info *rx_gain,$/;"	f	file:
ad9361_init_gain_tables	ad9361.c	/^int32_t ad9361_init_gain_tables(struct ad9361_rf_phy *phy)$/;"	f
ad9361_iodelay_set	ad9361_conv.c	/^static int32_t ad9361_iodelay_set(struct axiadc_state *st, unsigned lane,$/;"	f	file:
ad9361_load_fir_filter_coef	ad9361.c	/^int32_t ad9361_load_fir_filter_coef(struct ad9361_rf_phy *phy,$/;"	f
ad9361_load_gt	ad9361.c	/^static int32_t ad9361_load_gt(struct ad9361_rf_phy *phy, uint64_t freq, uint32_t dest)$/;"	f	file:
ad9361_load_mixer_gm_subtable	ad9361.c	/^static int32_t ad9361_load_mixer_gm_subtable(struct ad9361_rf_phy *phy)$/;"	f	file:
ad9361_mcs	ad9361.c	/^int32_t ad9361_mcs(struct ad9361_rf_phy *phy, int32_t step)$/;"	f
ad9361_midscale_iodelay	ad9361_conv.c	/^static int32_t ad9361_midscale_iodelay(struct ad9361_rf_phy *phy, bool tx)$/;"	f	file:
ad9361_parse_fir	ad9361.c	/^int32_t ad9361_parse_fir(struct ad9361_rf_phy *phy,$/;"	f
ad9361_pdata_rx_freq	ad9361.h	/^enum ad9361_pdata_rx_freq {$/;"	g
ad9361_pdata_tx_freq	ad9361.h	/^enum ad9361_pdata_tx_freq {$/;"	g
ad9361_phy	main.c	/^struct ad9361_rf_phy *ad9361_phy;$/;"	v	typeref:struct:ad9361_rf_phy
ad9361_phy_b	main.c	/^struct ad9361_rf_phy *ad9361_phy_b;$/;"	v	typeref:struct:ad9361_rf_phy
ad9361_phy_platform_data	ad9361.h	/^struct ad9361_phy_platform_data {$/;"	s
ad9361_post_setup	ad9361_conv.c	/^int32_t ad9361_post_setup(struct ad9361_rf_phy *phy)$/;"	f
ad9361_pp_port_setup	ad9361.c	/^static int32_t ad9361_pp_port_setup(struct ad9361_rf_phy *phy, bool restore_c3)$/;"	f	file:
ad9361_read_rssi	ad9361.c	/^int32_t ad9361_read_rssi(struct ad9361_rf_phy *phy, struct rf_rssi *rssi)$/;"	f
ad9361_ref_div_sel	ad9361.c	/^static uint32_t ad9361_ref_div_sel(uint32_t refin_Hz, uint32_t max)$/;"	f	file:
ad9361_reset	ad9361.c	/^int32_t ad9361_reset(struct ad9361_rf_phy *phy)$/;"	f
ad9361_rf_dc_offset_calib	ad9361.c	/^static int32_t ad9361_rf_dc_offset_calib(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_rf_phy	ad9361.h	/^struct ad9361_rf_phy {$/;"	s
ad9361_rf_port_setup	ad9361.c	/^int32_t ad9361_rf_port_setup(struct ad9361_rf_phy *phy, bool is_out,$/;"	f
ad9361_rfpll_dummy_recalc_rate	ad9361.c	/^uint32_t ad9361_rfpll_dummy_recalc_rate(struct refclk_scale *clk_priv)$/;"	f
ad9361_rfpll_dummy_set_rate	ad9361.c	/^int32_t ad9361_rfpll_dummy_set_rate(struct refclk_scale *clk_priv, uint32_t rate)$/;"	f
ad9361_rfpll_ext_recalc_rate	ad9361.h	/^	uint32_t (*ad9361_rfpll_ext_recalc_rate)(struct refclk_scale *clk_priv);$/;"	m	struct:ad9361_rf_phy
ad9361_rfpll_ext_recalc_rate	ad9361_api.h	/^	uint32_t (*ad9361_rfpll_ext_recalc_rate)(struct refclk_scale *clk_priv);$/;"	m	struct:__anon2
ad9361_rfpll_ext_round_rate	ad9361.h	/^	int32_t (*ad9361_rfpll_ext_round_rate)(struct refclk_scale *clk_priv, uint32_t rate);$/;"	m	struct:ad9361_rf_phy
ad9361_rfpll_ext_round_rate	ad9361_api.h	/^	int32_t (*ad9361_rfpll_ext_round_rate)(struct refclk_scale *clk_priv, uint32_t rate);$/;"	m	struct:__anon2
ad9361_rfpll_ext_set_rate	ad9361.h	/^	int32_t (*ad9361_rfpll_ext_set_rate)(struct refclk_scale *clk_priv, uint32_t rate);$/;"	m	struct:ad9361_rf_phy
ad9361_rfpll_ext_set_rate	ad9361_api.h	/^	int32_t (*ad9361_rfpll_ext_set_rate)(struct refclk_scale *clk_priv, uint32_t rate);$/;"	m	struct:__anon2
ad9361_rfpll_int_recalc_rate	ad9361.c	/^uint32_t ad9361_rfpll_int_recalc_rate(struct refclk_scale *clk_priv,$/;"	f
ad9361_rfpll_int_round_rate	ad9361.c	/^int32_t ad9361_rfpll_int_round_rate(struct refclk_scale *clk_priv, uint32_t rate,$/;"	f
ad9361_rfpll_int_set_rate	ad9361.c	/^int32_t ad9361_rfpll_int_set_rate(struct refclk_scale *clk_priv, uint32_t rate,$/;"	f
ad9361_rfpll_recalc_rate	ad9361.c	/^uint32_t ad9361_rfpll_recalc_rate(struct refclk_scale *clk_priv)$/;"	f
ad9361_rfpll_round_rate	ad9361.c	/^int32_t ad9361_rfpll_round_rate(struct refclk_scale *clk_priv, uint32_t rate)$/;"	f
ad9361_rfpll_set_rate	ad9361.c	/^int32_t ad9361_rfpll_set_rate(struct refclk_scale *clk_priv, uint32_t rate)$/;"	f
ad9361_rfpll_vco_init	ad9361.c	/^static int32_t ad9361_rfpll_vco_init(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_rfvco_tableindex	ad9361.c	/^static uint32_t ad9361_rfvco_tableindex(uint32_t freq)$/;"	f	file:
ad9361_rssi_setup	ad9361.c	/^static int32_t ad9361_rssi_setup(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_run_calibration	ad9361.c	/^static int32_t ad9361_run_calibration(struct ad9361_rf_phy *phy, uint32_t mask)$/;"	f	file:
ad9361_rx_adc_setup	ad9361.c	/^static int32_t ad9361_rx_adc_setup(struct ad9361_rf_phy *phy, uint32_t bbpll_freq,$/;"	f	file:
ad9361_rx_bb_analog_filter_calib	ad9361.c	/^static int32_t ad9361_rx_bb_analog_filter_calib(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_rx_fastlock_load	ad9361_api.c	/^int32_t ad9361_rx_fastlock_load(struct ad9361_rf_phy *phy, uint32_t profile, uint8_t *values)$/;"	f
ad9361_rx_fastlock_recall	ad9361_api.c	/^int32_t ad9361_rx_fastlock_recall(struct ad9361_rf_phy *phy, uint32_t profile)$/;"	f
ad9361_rx_fastlock_save	ad9361_api.c	/^int32_t ad9361_rx_fastlock_save(struct ad9361_rf_phy *phy, uint32_t profile, uint8_t *values)$/;"	f
ad9361_rx_fastlock_store	ad9361_api.c	/^int32_t ad9361_rx_fastlock_store(struct ad9361_rf_phy *phy, uint32_t profile)$/;"	f
ad9361_rx_tia_calib	ad9361.c	/^static int32_t ad9361_rx_tia_calib(struct ad9361_rf_phy *phy, uint32_t bb_bw_Hz)$/;"	f	file:
ad9361_set_clk_scaler	ad9361.c	/^static int32_t ad9361_set_clk_scaler(struct refclk_scale *clk_priv, bool set)$/;"	f	file:
ad9361_set_dcxo_tune	ad9361.c	/^static int32_t ad9361_set_dcxo_tune(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_set_en_state_machine_mode	ad9361_api.c	/^int32_t ad9361_set_en_state_machine_mode (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_ensm_mode	ad9361.c	/^int32_t ad9361_set_ensm_mode(struct ad9361_rf_phy *phy, bool fdd, bool pinctrl)$/;"	f
ad9361_set_gain_ctrl_mode	ad9361.c	/^int32_t ad9361_set_gain_ctrl_mode(struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_muldiv	ad9361.c	/^static inline int32_t ad9361_set_muldiv(struct refclk_scale *priv, uint32_t mul, uint32_t div)$/;"	f	file:
ad9361_set_no_ch_mode	ad9361_api.c	/^int32_t ad9361_set_no_ch_mode(struct ad9361_rf_phy *phy, uint8_t no_ch_mode)$/;"	f
ad9361_set_ref_clk_cycles	ad9361.c	/^static int32_t ad9361_set_ref_clk_cycles(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_set_rx_bbdc_track_en_dis	ad9361_api.c	/^int32_t ad9361_set_rx_bbdc_track_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_fir_config	ad9361_api.c	/^int32_t ad9361_set_rx_fir_config (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_fir_en_dis	ad9361_api.c	/^int32_t ad9361_set_rx_fir_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_gain	ad9361.c	/^int32_t ad9361_set_rx_gain(struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_gain_control_mode	ad9361_api.c	/^int32_t ad9361_set_rx_gain_control_mode (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_lo_freq	ad9361_api.c	/^int32_t ad9361_set_rx_lo_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_lo_int_ext	ad9361_api.c	/^int32_t ad9361_set_rx_lo_int_ext(struct ad9361_rf_phy *phy, uint8_t int_ext)$/;"	f
ad9361_set_rx_quad_track_en_dis	ad9361_api.c	/^int32_t ad9361_set_rx_quad_track_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_rf_bandwidth	ad9361_api.c	/^int32_t ad9361_set_rx_rf_bandwidth (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_rf_gain	ad9361_api.c	/^int32_t ad9361_set_rx_rf_gain (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_rf_port_input	ad9361_api.c	/^int32_t ad9361_set_rx_rf_port_input (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_rfdc_track_en_dis	ad9361_api.c	/^int32_t ad9361_set_rx_rfdc_track_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_rx_sampling_freq	ad9361_api.c	/^int32_t ad9361_set_rx_sampling_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_trx_clock_chain	ad9361.c	/^int32_t ad9361_set_trx_clock_chain(struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_trx_clock_chain_freq	ad9361.c	/^int32_t ad9361_set_trx_clock_chain_freq(struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_trx_fir_en_dis	ad9361_api.c	/^int32_t ad9361_set_trx_fir_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_trx_path_clks	ad9361_api.c	/^int32_t ad9361_set_trx_path_clks(struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_trx_rate_gov	ad9361_api.c	/^int32_t ad9361_set_trx_rate_gov (struct ad9361_rf_phy *phy, uint32_t rate_gov)$/;"	f
ad9361_set_tx_atten	ad9361.c	/^int32_t ad9361_set_tx_atten(struct ad9361_rf_phy *phy, uint32_t atten_mdb,$/;"	f
ad9361_set_tx_attenuation	ad9361_api.c	/^int32_t ad9361_set_tx_attenuation (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_tx_auto_cal_en_dis	ad9361_api.c	/^int32_t ad9361_set_tx_auto_cal_en_dis (struct ad9361_rf_phy *phy, uint8_t en_dis)$/;"	f
ad9361_set_tx_fir_config	ad9361_api.c	/^int32_t ad9361_set_tx_fir_config (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_tx_fir_en_dis	ad9361_api.c	/^int32_t ad9361_set_tx_fir_en_dis (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_tx_lo_freq	ad9361_api.c	/^int32_t ad9361_set_tx_lo_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_tx_lo_int_ext	ad9361_api.c	/^int32_t ad9361_set_tx_lo_int_ext(struct ad9361_rf_phy *phy, uint8_t int_ext)$/;"	f
ad9361_set_tx_rf_bandwidth	ad9361_api.c	/^int32_t ad9361_set_tx_rf_bandwidth (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_tx_rf_port_output	ad9361_api.c	/^int32_t ad9361_set_tx_rf_port_output (struct ad9361_rf_phy *phy,$/;"	f
ad9361_set_tx_sampling_freq	ad9361_api.c	/^int32_t ad9361_set_tx_sampling_freq (struct ad9361_rf_phy *phy,$/;"	f
ad9361_setup	ad9361.c	/^int32_t ad9361_setup(struct ad9361_rf_phy *phy)$/;"	f
ad9361_setup_ext_lna	ad9361.c	/^static int32_t ad9361_setup_ext_lna(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_spi_read	ad9361.c	/^int32_t ad9361_spi_read(struct spi_device *spi, uint32_t reg)$/;"	f
ad9361_spi_readf	ad9361.c	642;"	d	file:
ad9361_spi_readm	ad9361.c	/^int32_t ad9361_spi_readm(struct spi_device *spi, uint32_t reg,$/;"	f
ad9361_spi_write	ad9361.c	/^int32_t ad9361_spi_write(struct spi_device *spi,$/;"	f
ad9361_spi_writef	ad9361.c	713;"	d	file:
ad9361_spi_writem	ad9361.c	/^static int32_t ad9361_spi_writem(struct spi_device *spi,$/;"	f	file:
ad9361_to_clk	ad9361.c	/^uint32_t ad9361_to_clk(uint64_t freq)$/;"	f
ad9361_to_refclk_scaler	ad9361.c	/^static int32_t ad9361_to_refclk_scaler(struct refclk_scale *clk_priv)$/;"	f	file:
ad9361_tracking_control	ad9361.c	/^int32_t ad9361_tracking_control(struct ad9361_rf_phy *phy, bool bbdc_track,$/;"	f
ad9361_trx_ext_lo_control	ad9361.c	/^static int32_t ad9361_trx_ext_lo_control(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_trx_vco_cal_control	ad9361.c	/^static int32_t ad9361_trx_vco_cal_control(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_tx_bb_analog_filter_calib	ad9361.c	/^static int32_t ad9361_tx_bb_analog_filter_calib(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_tx_bb_second_filter_calib	ad9361.c	/^static int32_t ad9361_tx_bb_second_filter_calib(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_tx_fastlock_load	ad9361_api.c	/^int32_t ad9361_tx_fastlock_load(struct ad9361_rf_phy *phy, uint32_t profile, uint8_t *values)$/;"	f
ad9361_tx_fastlock_recall	ad9361_api.c	/^int32_t ad9361_tx_fastlock_recall(struct ad9361_rf_phy *phy, uint32_t profile)$/;"	f
ad9361_tx_fastlock_save	ad9361_api.c	/^int32_t ad9361_tx_fastlock_save(struct ad9361_rf_phy *phy, uint32_t profile, uint8_t *values)$/;"	f
ad9361_tx_fastlock_store	ad9361_api.c	/^int32_t ad9361_tx_fastlock_store(struct ad9361_rf_phy *phy, uint32_t profile)$/;"	f
ad9361_tx_quad_calib	ad9361.c	/^static int32_t ad9361_tx_quad_calib(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_tx_quad_phase_search	ad9361.c	/^static int32_t ad9361_tx_quad_phase_search(struct ad9361_rf_phy *phy, uint32_t rxnco_word, uint8_t decim)$/;"	f	file:
ad9361_txmon_control	ad9361.c	/^static int32_t ad9361_txmon_control(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_txmon_setup	ad9361.c	/^static int32_t ad9361_txmon_setup(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_txrx_synth_cp_calib	ad9361.c	/^static int32_t ad9361_txrx_synth_cp_calib(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_update_rf_bandwidth	ad9361.c	/^int32_t ad9361_update_rf_bandwidth(struct ad9361_rf_phy *phy,$/;"	f
ad9361_validate_enable_fir	ad9361.c	/^int32_t ad9361_validate_enable_fir(struct ad9361_rf_phy *phy)$/;"	f
ad9361_validate_trx_clock_chain	ad9361.c	/^static int32_t ad9361_validate_trx_clock_chain(struct ad9361_rf_phy *phy,$/;"	f	file:
ad9361_verify_fir_filter_coef	ad9361.c	/^static int32_t ad9361_verify_fir_filter_coef(struct ad9361_rf_phy *phy,$/;"	f	file:
adc_capture	adc_core.c	/^int32_t adc_capture(uint32_t size, uint32_t start_address)$/;"	f
adc_conv	ad9361.h	/^	struct axiadc_converter	*adc_conv;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::axiadc_converter
adc_data_sel	platform.h	/^enum adc_data_sel {$/;"	g
adc_init	adc_core.c	/^void adc_init(struct ad9361_rf_phy *phy)$/;"	f
adc_large_overload_exceed_counter	ad9361.h	/^	uint8_t adc_large_overload_exceed_counter; \/* 0..15, 0x122 *\/$/;"	m	struct:gain_control
adc_large_overload_inc_steps	ad9361.h	/^	uint8_t adc_large_overload_inc_steps; \/* 0..15, 0x106 *\/$/;"	m	struct:gain_control
adc_large_overload_thresh	ad9361.h	/^	uint8_t adc_large_overload_thresh; \/* 0..255, 0x104 *\/$/;"	m	struct:gain_control
adc_lmt_small_overload_prevent_gain_inc	ad9361.h	/^	bool adc_lmt_small_overload_prevent_gain_inc; \/* 0x120 *\/$/;"	m	struct:gain_control
adc_ovr_sample_size	ad9361.h	/^	uint8_t adc_ovr_sample_size; \/* 1..8 Sum x samples, AGC_CONFIG_3 *\/$/;"	m	struct:gain_control
adc_pn_sel	platform.h	/^enum adc_pn_sel {$/;"	g
adc_read	adc_core.c	/^void adc_read(struct ad9361_rf_phy *phy, uint32_t regAddr, uint32_t *data)$/;"	f
adc_small_overload_exceed_counter	ad9361.h	/^	uint8_t adc_small_overload_exceed_counter; \/* 0..15, 0x122 *\/$/;"	m	struct:gain_control
adc_small_overload_thresh	ad9361.h	/^	uint8_t adc_small_overload_thresh; \/* 0..255, 0x105 *\/$/;"	m	struct:gain_control
adc_st	adc_core.c	/^struct adc_state adc_st;$/;"	v	typeref:struct:adc_state
adc_state	ad9361.h	/^	struct axiadc_state		*adc_state;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::axiadc_state
adc_state	adc_core.h	/^struct adc_state$/;"	s
adc_write	adc_core.c	/^void adc_write(struct ad9361_rf_phy *phy, uint32_t regAddr, uint32_t data)$/;"	f
agc_adc_large_overload_exceed_counter	ad9361_api.h	/^	uint8_t		agc_adc_large_overload_exceed_counter;	\/* adi,agc-adc-large-overload-exceed-counter *\/$/;"	m	struct:__anon2
agc_adc_large_overload_inc_steps	ad9361_api.h	/^	uint8_t		agc_adc_large_overload_inc_steps;	\/* adi,agc-adc-large-overload-inc-steps *\/$/;"	m	struct:__anon2
agc_adc_lmt_small_overload_prevent_gain_inc_enable	ad9361_api.h	/^	uint8_t		agc_adc_lmt_small_overload_prevent_gain_inc_enable;	\/* adi,agc-adc-lmt-small-overload-prevent-gain-inc-enable *\/$/;"	m	struct:__anon2
agc_adc_small_overload_exceed_counter	ad9361_api.h	/^	uint8_t		agc_adc_small_overload_exceed_counter;	\/* adi,agc-adc-small-overload-exceed-counter *\/$/;"	m	struct:__anon2
agc_attack_delay_extra_margin_us	ad9361.h	/^	uint8_t agc_attack_delay_extra_margin_us; \/* 0..31 us *\/$/;"	m	struct:gain_control
agc_attack_delay_extra_margin_us	ad9361_api.h	/^	uint32_t	agc_attack_delay_extra_margin_us;	\/* adi,agc-attack-delay-extra-margin-us *\/$/;"	m	struct:__anon2
agc_dig_gain_step_size	ad9361_api.h	/^	uint8_t		agc_dig_gain_step_size;	\/* adi,agc-dig-gain-step-size *\/$/;"	m	struct:__anon2
agc_dig_saturation_exceed_counter	ad9361_api.h	/^	uint8_t		agc_dig_saturation_exceed_counter;	\/* adi,agc-dig-saturation-exceed-counter *\/$/;"	m	struct:__anon2
agc_gain_update_interval_us	ad9361_api.h	/^	uint32_t	agc_gain_update_interval_us; \/* adi,agc-gain-update-interval-us *\/$/;"	m	struct:__anon2
agc_immed_gain_change_if_large_adc_overload_enable	ad9361_api.h	/^	uint8_t		agc_immed_gain_change_if_large_adc_overload_enable;	\/* adi,agc-immed-gain-change-if-large-adc-overload-enable *\/$/;"	m	struct:__anon2
agc_immed_gain_change_if_large_lmt_overload_enable	ad9361_api.h	/^	uint8_t		agc_immed_gain_change_if_large_lmt_overload_enable;	\/* adi,agc-immed-gain-change-if-large-lmt-overload-enable *\/$/;"	m	struct:__anon2
agc_inner_thresh_high	ad9361.h	/^	uint8_t agc_inner_thresh_high;$/;"	m	struct:gain_control
agc_inner_thresh_high	ad9361_api.h	/^	uint8_t		agc_inner_thresh_high;	\/* adi,agc-inner-thresh-high *\/$/;"	m	struct:__anon2
agc_inner_thresh_high_dec_steps	ad9361.h	/^	uint8_t agc_inner_thresh_high_dec_steps;$/;"	m	struct:gain_control
agc_inner_thresh_high_dec_steps	ad9361_api.h	/^	uint8_t		agc_inner_thresh_high_dec_steps;	\/* adi,agc-inner-thresh-high-dec-steps *\/$/;"	m	struct:__anon2
agc_inner_thresh_low	ad9361.h	/^	uint8_t agc_inner_thresh_low;$/;"	m	struct:gain_control
agc_inner_thresh_low	ad9361_api.h	/^	uint8_t		agc_inner_thresh_low;	\/* adi,agc-inner-thresh-low *\/$/;"	m	struct:__anon2
agc_inner_thresh_low_inc_steps	ad9361.h	/^	uint8_t agc_inner_thresh_low_inc_steps;$/;"	m	struct:gain_control
agc_inner_thresh_low_inc_steps	ad9361_api.h	/^	uint8_t		agc_inner_thresh_low_inc_steps;	\/* adi,agc-inner-thresh-low-inc-steps *\/$/;"	m	struct:__anon2
agc_lmt_overload_large_exceed_counter	ad9361_api.h	/^	uint8_t		agc_lmt_overload_large_exceed_counter;	\/* adi,agc-lmt-overload-large-exceed-counter *\/$/;"	m	struct:__anon2
agc_lmt_overload_large_inc_steps	ad9361_api.h	/^	uint8_t		agc_lmt_overload_large_inc_steps;	\/* adi,agc-lmt-overload-large-inc-steps *\/$/;"	m	struct:__anon2
agc_lmt_overload_small_exceed_counter	ad9361_api.h	/^	uint8_t		agc_lmt_overload_small_exceed_counter;	\/* adi,agc-lmt-overload-small-exceed-counter *\/$/;"	m	struct:__anon2
agc_mode	ad9361.h	/^	uint8_t			agc_mode[2];$/;"	m	struct:ad9361_rf_phy
agc_outer_thresh_high	ad9361.h	/^	uint8_t agc_outer_thresh_high;$/;"	m	struct:gain_control
agc_outer_thresh_high	ad9361_api.h	/^	uint8_t		agc_outer_thresh_high;	\/* adi,agc-outer-thresh-high *\/$/;"	m	struct:__anon2
agc_outer_thresh_high_dec_steps	ad9361.h	/^	uint8_t agc_outer_thresh_high_dec_steps;$/;"	m	struct:gain_control
agc_outer_thresh_high_dec_steps	ad9361_api.h	/^	uint8_t		agc_outer_thresh_high_dec_steps;	\/* adi,agc-outer-thresh-high-dec-steps *\/$/;"	m	struct:__anon2
agc_outer_thresh_low	ad9361.h	/^	uint8_t agc_outer_thresh_low;$/;"	m	struct:gain_control
agc_outer_thresh_low	ad9361_api.h	/^	uint8_t		agc_outer_thresh_low;	\/* adi,agc-outer-thresh-low *\/$/;"	m	struct:__anon2
agc_outer_thresh_low_inc_steps	ad9361.h	/^	uint8_t agc_outer_thresh_low_inc_steps;$/;"	m	struct:gain_control
agc_outer_thresh_low_inc_steps	ad9361_api.h	/^	uint8_t		agc_outer_thresh_low_inc_steps;	\/* adi,agc-outer-thresh-low-inc-steps *\/$/;"	m	struct:__anon2
agc_sync_for_gain_counter_enable	ad9361_api.h	/^	uint8_t		agc_sync_for_gain_counter_enable;	\/* adi,agc-sync-for-gain-counter-enable *\/$/;"	m	struct:__anon2
alc_orig	ad9361.h	/^	uint8_t alc_orig;$/;"	m	struct:ad9361_fastlock_entry
alc_written	ad9361.h	/^	uint8_t alc_written;$/;"	m	struct:ad9361_fastlock_entry
ant	ad9361.h	/^	uint32_t ant;		\/* Antenna number for which RSSI is reported *\/$/;"	m	struct:rf_rssi
ant	ad9361.h	/^	uint32_t ant;		\/* Antenna number to read gain *\/$/;"	m	struct:rf_rx_gain
ant	ad9361.h	/^	uint32_t ant;$/;"	m	struct:rf_gain_ctrl
auto_cal_en	ad9361.h	/^	bool			auto_cal_en;$/;"	m	struct:ad9361_rf_phy
aux_adc_decimation	ad9361_api.h	/^	uint32_t	aux_adc_decimation;	\/* adi,aux-adc-decimation *\/$/;"	m	struct:__anon2
aux_adc_rate	ad9361_api.h	/^	uint32_t	aux_adc_rate;	\/* adi,aux-adc-rate *\/$/;"	m	struct:__anon2
aux_dac1_active_in_alert_enable	ad9361_api.h	/^	uint8_t		aux_dac1_active_in_alert_enable;	\/* adi,aux-dac1-active-in-alert-enable *\/$/;"	m	struct:__anon2
aux_dac1_active_in_rx_enable	ad9361_api.h	/^	uint8_t		aux_dac1_active_in_rx_enable;	\/* adi,aux-dac1-active-in-rx-enable *\/$/;"	m	struct:__anon2
aux_dac1_active_in_tx_enable	ad9361_api.h	/^	uint8_t		aux_dac1_active_in_tx_enable;	\/* adi,aux-dac1-active-in-tx-enable *\/$/;"	m	struct:__anon2
aux_dac1_default_value_mV	ad9361_api.h	/^	uint32_t	aux_dac1_default_value_mV;	\/* adi,aux-dac1-default-value-mV *\/$/;"	m	struct:__anon2
aux_dac1_rx_delay_us	ad9361_api.h	/^	uint32_t	aux_dac1_rx_delay_us;	\/* adi,aux-dac1-rx-delay-us *\/$/;"	m	struct:__anon2
aux_dac1_tx_delay_us	ad9361_api.h	/^	uint32_t	aux_dac1_tx_delay_us;	\/* adi,aux-dac1-tx-delay-us *\/$/;"	m	struct:__anon2
aux_dac2_active_in_alert_enable	ad9361_api.h	/^	uint8_t		aux_dac2_active_in_alert_enable;	\/* adi,aux-dac2-active-in-alert-enable *\/$/;"	m	struct:__anon2
aux_dac2_active_in_rx_enable	ad9361_api.h	/^	uint8_t		aux_dac2_active_in_rx_enable;	\/* adi,aux-dac2-active-in-rx-enable *\/$/;"	m	struct:__anon2
aux_dac2_active_in_tx_enable	ad9361_api.h	/^	uint8_t		aux_dac2_active_in_tx_enable;	\/* adi,aux-dac2-active-in-tx-enable *\/$/;"	m	struct:__anon2
aux_dac2_default_value_mV	ad9361_api.h	/^	uint32_t	aux_dac2_default_value_mV;	\/* adi,aux-dac2-default-value-mV *\/$/;"	m	struct:__anon2
aux_dac2_rx_delay_us	ad9361_api.h	/^	uint32_t	aux_dac2_rx_delay_us;	\/* adi,aux-dac2-rx-delay-us *\/$/;"	m	struct:__anon2
aux_dac2_tx_delay_us	ad9361_api.h	/^	uint32_t	aux_dac2_tx_delay_us;	\/* adi,aux-dac2-tx-delay-us *\/$/;"	m	struct:__anon2
aux_dac_manual_mode_enable	ad9361_api.h	/^	uint8_t		aux_dac_manual_mode_enable;	\/* adi,aux-dac-manual-mode-enable *\/$/;"	m	struct:__anon2
auxadc_clock_rate	ad9361.h	/^	uint32_t			auxadc_clock_rate;$/;"	m	struct:auxadc_control
auxadc_control	ad9361.h	/^struct auxadc_control {$/;"	s
auxadc_ctrl	ad9361.h	/^	struct auxadc_control	auxadc_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::auxadc_control
auxadc_decimation	ad9361.h	/^	uint32_t			auxadc_decimation;$/;"	m	struct:auxadc_control
auxdac1_value	ad9361.h	/^	uint16_t 			auxdac1_value;$/;"	m	struct:ad9361_rf_phy
auxdac2_value	ad9361.h	/^	uint16_t 			auxdac2_value;$/;"	m	struct:ad9361_rf_phy
auxdac_control	ad9361.h	/^struct auxdac_control {$/;"	s
auxdac_ctrl	ad9361.h	/^	struct auxdac_control	auxdac_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::auxdac_control
auxdac_manual_mode_en	ad9361.h	/^	bool auxdac_manual_mode_en;$/;"	m	struct:auxdac_control
axiadc_chip_info	util.h	/^struct axiadc_chip_info {$/;"	s
axiadc_chip_info_tbl	ad9361_api.c	/^static struct axiadc_chip_info axiadc_chip_info_tbl[] =$/;"	v	typeref:struct:axiadc_chip_info	file:
axiadc_converter	util.h	/^struct axiadc_converter {$/;"	s
axiadc_idelay_set	platform.c	/^void axiadc_idelay_set(struct axiadc_state *st,$/;"	f
axiadc_init	platform.c	/^void axiadc_init(struct ad9361_rf_phy *phy)$/;"	f
axiadc_post_setup	platform.c	/^int axiadc_post_setup(struct ad9361_rf_phy *phy)$/;"	f
axiadc_read	platform.c	/^unsigned int axiadc_read(struct axiadc_state *st, unsigned long reg)$/;"	f
axiadc_set_pnsel	platform.c	/^int axiadc_set_pnsel(struct axiadc_state *st, int channel, enum adc_pn_sel sel)$/;"	f
axiadc_state	util.h	/^struct axiadc_state {$/;"	s
axiadc_write	platform.c	/^void axiadc_write(struct axiadc_state *st, unsigned reg, unsigned val)$/;"	f
bbdc_track_en	ad9361.h	/^	bool			bbdc_track_en;$/;"	m	struct:ad9361_rf_phy
bist_loopback_mode	ad9361.h	/^	int32_t					bist_loopback_mode;$/;"	m	struct:ad9361_rf_phy
bist_prbs_mode	ad9361.h	/^	enum ad9361_bist_mode	bist_prbs_mode;$/;"	m	struct:ad9361_rf_phy	typeref:enum:ad9361_rf_phy::ad9361_bist_mode
bist_tone_freq_Hz	ad9361.h	/^	uint32_t				bist_tone_freq_Hz;$/;"	m	struct:ad9361_rf_phy
bist_tone_level_dB	ad9361.h	/^	uint32_t				bist_tone_level_dB;$/;"	m	struct:ad9361_rf_phy
bist_tone_mask	ad9361.h	/^	uint32_t				bist_tone_mask;$/;"	m	struct:ad9361_rf_phy
bist_tone_mode	ad9361.h	/^	enum ad9361_bist_mode	bist_tone_mode;$/;"	m	struct:ad9361_rf_phy	typeref:enum:ad9361_rf_phy::ad9361_bist_mode
bool	common.h	/^typedef uint8_t	bool;$/;"	t
bypass_loss_mdB	ad9361.h	/^	uint16_t			bypass_loss_mdB;$/;"	m	struct:elna_control
bypass_rx_fir	ad9361.h	/^	bool			bypass_rx_fir;$/;"	m	struct:ad9361_rf_phy
bypass_tx_fir	ad9361.h	/^	bool			bypass_tx_fir;$/;"	m	struct:ad9361_rf_phy
cached_datasel	dac_core.h	/^	enum dds_data_select	cached_datasel[8];$/;"	m	struct:dds_state	typeref:enum:dds_state::dds_data_select
cached_freq	dac_core.h	/^	uint32_t				cached_freq[8];$/;"	m	struct:dds_state
cached_phase	dac_core.h	/^	uint32_t				cached_phase[8];$/;"	m	struct:dds_state
cached_rx_rfpll_div	ad9361.h	/^	uint8_t			cached_rx_rfpll_div;$/;"	m	struct:ad9361_rf_phy
cached_scale	dac_core.h	/^	int32_t					cached_scale[8];$/;"	m	struct:dds_state
cached_tx_rfpll_div	ad9361.h	/^	uint8_t			cached_tx_rfpll_div;$/;"	m	struct:ad9361_rf_phy
cal_threshold_freq	ad9361.h	/^	uint32_t		cal_threshold_freq;$/;"	m	struct:ad9361_rf_phy
chip_info	util.h	/^	struct axiadc_chip_info	*chip_info;$/;"	m	struct:axiadc_converter	typeref:struct:axiadc_converter::axiadc_chip_info
clamp	util.h	63;"	d
clamp_t	util.h	64;"	d
clk	common.h	/^		struct clk *clk;$/;"	m	struct:clk_hw	typeref:struct:clk_hw::clk
clk	common.h	/^struct clk {$/;"	s
clk_data	ad9361.h	/^	struct clk_onecell_data	clk_data;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::clk_onecell_data
clk_get_rate	util.c	/^uint32_t clk_get_rate(struct ad9361_rf_phy *phy,$/;"	f
clk_hw	common.h	/^struct clk_hw {$/;"	s
clk_init_data	common.h	/^struct clk_init_data {$/;"	s
clk_num	common.h	/^	uint32_t		clk_num;$/;"	m	struct:clk_onecell_data
clk_onecell_data	common.h	/^struct clk_onecell_data {$/;"	s
clk_output_mode_select	ad9361_api.h	/^	uint32_t	clk_output_mode_select;		\/* adi,clk-output-mode-select *\/$/;"	m	struct:__anon2
clk_prepare_enable	util.c	/^int32_t clk_prepare_enable(struct clk *clk)$/;"	f
clk_refin	ad9361.h	/^	struct clk 		*clk_refin;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::clk
clk_set_rate	util.c	/^int32_t clk_set_rate(struct ad9361_rf_phy *phy,$/;"	f
clks	ad9361.h	/^	struct clk 		*clks[NUM_AD9361_CLKS];$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::clk
clks	common.h	/^	struct clk		**clks;$/;"	m	struct:clk_onecell_data	typeref:struct:clk_onecell_data::clk
cmd	ad9361.h	/^	uint8_t cmd;$/;"	m	struct:ad9361_debugfs_entry
cmd	main.c	/^unsigned char		cmd				 =  0;$/;"	v
cmd_function	command.h	/^typedef void (*cmd_function)(double* param, char param_no);$/;"	t
cmd_list	command.c	/^command cmd_list[] = {$/;"	v
cmd_no	command.c	/^const char cmd_no = (sizeof(cmd_list) \/ sizeof(command));$/;"	v
cmd_type	main.c	/^int					cmd_type		 = -1;$/;"	v
command	command.h	/^}command;$/;"	t	typeref:struct:__anon1
console_check_commands	console.c	/^int console_check_commands(char*	   received_cmd,$/;"	f
console_get_command	console.c	/^void console_get_command(char* command)$/;"	f
console_init	console.c	/^char console_init(unsigned long baud_rate)$/;"	f
console_print	console.c	/^void console_print(char* str, ...)$/;"	f
ctrl_outs_control	ad9361.h	/^struct ctrl_outs_control {$/;"	s
ctrl_outs_ctrl	ad9361.h	/^	struct ctrl_outs_control	ctrl_outs_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::ctrl_outs_control
ctrl_outs_enable_mask	ad9361_api.h	/^	uint8_t		ctrl_outs_enable_mask;	\/* adi,ctrl-outs-enable-mask *\/$/;"	m	struct:__anon2
ctrl_outs_index	ad9361_api.h	/^	uint8_t		ctrl_outs_index;	\/* adi,ctrl-outs-index *\/$/;"	m	struct:__anon2
curr_ensm_state	ad9361.h	/^	uint8_t			curr_ensm_state;$/;"	m	struct:ad9361_rf_phy
current_profile	ad9361.h	/^	uint8_t current_profile[2];$/;"	m	struct:ad9361_fastlock
current_rx_bw_Hz	ad9361.h	/^	uint32_t			current_rx_bw_Hz;$/;"	m	struct:ad9361_rf_phy
current_table	ad9361.h	/^	enum rx_gain_table_name current_table;$/;"	m	struct:ad9361_rf_phy	typeref:enum:ad9361_rf_phy::rx_gain_table_name
current_tx_bw_Hz	ad9361.h	/^	uint32_t			current_tx_bw_Hz;$/;"	m	struct:ad9361_rf_phy
dac1_default_value	ad9361.h	/^	uint16_t dac1_default_value;$/;"	m	struct:auxdac_control
dac1_in_alert_en	ad9361.h	/^	bool dac1_in_alert_en;$/;"	m	struct:auxdac_control
dac1_in_rx_en	ad9361.h	/^	bool dac1_in_rx_en;$/;"	m	struct:auxdac_control
dac1_in_tx_en	ad9361.h	/^	bool dac1_in_tx_en;$/;"	m	struct:auxdac_control
dac1_rx_delay_us	ad9361.h	/^	uint8_t dac1_rx_delay_us;$/;"	m	struct:auxdac_control
dac1_tx_delay_us	ad9361.h	/^	uint8_t dac1_tx_delay_us;$/;"	m	struct:auxdac_control
dac2_default_value	ad9361.h	/^	uint16_t dac2_default_value;$/;"	m	struct:auxdac_control
dac2_in_alert_en	ad9361.h	/^	bool dac2_in_alert_en;$/;"	m	struct:auxdac_control
dac2_in_rx_en	ad9361.h	/^	bool dac2_in_rx_en;$/;"	m	struct:auxdac_control
dac2_in_tx_en	ad9361.h	/^	bool dac2_in_tx_en;$/;"	m	struct:auxdac_control
dac2_rx_delay_us	ad9361.h	/^	uint8_t dac2_rx_delay_us;$/;"	m	struct:auxdac_control
dac2_tx_delay_us	ad9361.h	/^	uint8_t dac2_tx_delay_us;$/;"	m	struct:auxdac_control
dac_clk	dac_core.h	/^	uint32_t				*dac_clk;$/;"	m	struct:dds_state
dac_datasel	dac_core.c	/^int32_t dac_datasel(struct ad9361_rf_phy *phy, int32_t chan, enum dds_data_select sel)$/;"	f
dac_dma_read	dac_core.c	/^void dac_dma_read(uint32_t regAddr, uint32_t *data)$/;"	f
dac_dma_write	dac_core.c	/^void dac_dma_write(uint32_t regAddr, uint32_t data)$/;"	f
dac_get_datasel	dac_core.c	/^void dac_get_datasel(struct ad9361_rf_phy *phy, int32_t chan, enum dds_data_select *sel)$/;"	f
dac_init	dac_core.c	/^void dac_init(struct ad9361_rf_phy *phy, uint8_t data_sel, uint8_t config_dma)$/;"	f
dac_read	dac_core.c	/^void dac_read(struct ad9361_rf_phy *phy, uint32_t regAddr, uint32_t *data)$/;"	f
dac_start_sync	dac_core.c	/^void dac_start_sync(struct ad9361_rf_phy *phy, bool force_on)$/;"	f
dac_stop	dac_core.c	/^void dac_stop(struct ad9361_rf_phy *phy)$/;"	f
dac_write	dac_core.c	/^void dac_write(struct ad9361_rf_phy *phy, uint32_t regAddr, uint32_t data)$/;"	f
dc_offset_attenuation_high	ad9361.h	/^	uint8_t			dc_offset_attenuation_high;$/;"	m	struct:ad9361_phy_platform_data
dc_offset_attenuation_high_range	ad9361_api.h	/^	uint8_t		dc_offset_attenuation_high_range;	\/* adi,dc-offset-attenuation-high-range *\/$/;"	m	struct:__anon2
dc_offset_attenuation_low	ad9361.h	/^	uint8_t			dc_offset_attenuation_low;$/;"	m	struct:ad9361_phy_platform_data
dc_offset_attenuation_low_range	ad9361_api.h	/^	uint8_t		dc_offset_attenuation_low_range;	\/* adi,dc-offset-attenuation-low-range *\/$/;"	m	struct:__anon2
dc_offset_count_high_range	ad9361_api.h	/^	uint8_t		dc_offset_count_high_range;			\/* adi,dc-offset-count-high-range *\/$/;"	m	struct:__anon2
dc_offset_count_low_range	ad9361_api.h	/^	uint8_t		dc_offset_count_low_range;			\/* adi,dc-offset-count-low-range *\/$/;"	m	struct:__anon2
dc_offset_tracking_update_event_mask	ad9361_api.h	/^	uint8_t		dc_offset_tracking_update_event_mask;	\/* adi,dc-offset-tracking-update-event-mask *\/$/;"	m	struct:__anon2
dc_offset_update_events	ad9361.h	/^	uint8_t			dc_offset_update_events;$/;"	m	struct:ad9361_phy_platform_data
dcxo_coarse	ad9361.h	/^	uint32_t			dcxo_coarse;$/;"	m	struct:ad9361_phy_platform_data
dcxo_coarse_and_fine_tune	ad9361_api.h	/^	uint32_t	dcxo_coarse_and_fine_tune[2];	\/* adi,dcxo-coarse-and-fine-tune *\/$/;"	m	struct:__anon2
dcxo_fine	ad9361.h	/^	uint32_t			dcxo_fine;$/;"	m	struct:ad9361_phy_platform_data
dds_data_select	dac_core.h	/^enum dds_data_select {$/;"	g
dds_default_setup	dac_core.c	/^int32_t dds_default_setup(struct ad9361_rf_phy *phy,$/;"	f
dds_get_frequency	dac_core.c	/^void dds_get_frequency(struct ad9361_rf_phy *phy, uint32_t chan, uint32_t *freq)$/;"	f
dds_get_phase	dac_core.c	/^void dds_get_phase(struct ad9361_rf_phy *phy, uint32_t chan, uint32_t *phase)$/;"	f
dds_get_scale	dac_core.c	/^void dds_get_scale(struct ad9361_rf_phy *phy, uint32_t chan, int32_t *scale_micro_units)$/;"	f
dds_set_frequency	dac_core.c	/^void dds_set_frequency(struct ad9361_rf_phy *phy, uint32_t chan, uint32_t freq)$/;"	f
dds_set_phase	dac_core.c	/^void dds_set_phase(struct ad9361_rf_phy *phy, uint32_t chan, uint32_t phase)$/;"	f
dds_set_scale	dac_core.c	/^void dds_set_scale(struct ad9361_rf_phy *phy, uint32_t chan, int32_t scale_micro_units)$/;"	f
dds_st	dac_core.c	/^struct dds_state dds_st[2];$/;"	v	typeref:struct:dds_state
dds_state	dac_core.h	/^struct dds_state$/;"	s
dds_tx2_tone2_scale	command.c	/^void dds_tx2_tone2_scale(double* param, char param_no)	\/\/ dds_tx2_tone2_scale?$/;"	f
dds_update	dac_core.c	/^void dds_update(struct ad9361_rf_phy *phy)$/;"	f
debug_mode	ad9361.h	/^	bool			debug_mode;$/;"	m	struct:ad9361_phy_platform_data
debugfs_cmd	ad9361.h	/^enum debugfs_cmd {$/;"	g
dec_pow_measuremnt_duration	ad9361.h	/^	uint16_t dec_pow_measuremnt_duration; \/* Samples, 0x15C *\/$/;"	m	struct:gain_control
default_init_param	fmcomms2_default_parameters.h	/^AD9361_InitParam default_init_param = {$/;"	v
default_init_param	main.c	/^AD9361_InitParam default_init_param = {$/;"	v
delay_rx_data	ad9361_api.h	/^	uint32_t	delay_rx_data;	\/* adi,delay-rx-data *\/$/;"	m	struct:__anon2
description	command.h	/^	const char* description;$/;"	m	struct:__anon1
dev	util.h	/^	struct device	dev;$/;"	m	struct:spi_device	typeref:struct:spi_device::device
dev_dbg	util.h	75;"	d
dev_dbg	util.h	77;"	d
dev_dbg	util.h	83;"	d
dev_err	util.h	72;"	d
dev_err	util.h	81;"	d
dev_warn	util.h	73;"	d
dev_warn	util.h	82;"	d
device	util.h	/^struct device {$/;"	s
dig_gain_en	ad9361.h	/^	bool dig_gain_en; \/* should be turned off, since ADI GT doesn't use dig gain *\/$/;"	m	struct:gain_control
dig_gain_step_size	ad9361.h	/^	uint8_t dig_gain_step_size; \/* 1..8, 0x100 *\/$/;"	m	struct:gain_control
dig_interface_tune_fir_disable	ad9361.h	/^	uint8_t			dig_interface_tune_fir_disable;$/;"	m	struct:ad9361_phy_platform_data
dig_interface_tune_skipmode	ad9361.h	/^	uint8_t			dig_interface_tune_skipmode;$/;"	m	struct:ad9361_phy_platform_data
dig_saturation_exceed_counter	ad9361.h	/^	uint8_t dig_saturation_exceed_counter; \/* 0..15, 0x128 *\/$/;"	m	struct:gain_control
dig_tune_flags	ad9361.h	/^enum dig_tune_flags {$/;"	g
digital_gain	ad9361.h	/^	uint32_t digital_gain;	\/* Digital gain in dB \/ index *\/$/;"	m	struct:rf_rx_gain
digital_interface_tune_fir_disable	ad9361_api.h	/^	uint8_t		digital_interface_tune_fir_disable;	\/* adi,digital-interface-tune-fir-disable *\/$/;"	m	struct:__anon2
digital_interface_tune_skip_mode	ad9361_api.h	/^	uint8_t		digital_interface_tune_skip_mode;	\/* adi,digital-interface-tune-skip-mode *\/$/;"	m	struct:__anon2
digital_io_ctrl	ad9361.h	/^	uint8_t			digital_io_ctrl;$/;"	m	struct:port_control
div	ad9361.h	/^	uint32_t			div;$/;"	m	struct:refclk_scale
do_div	util.c	/^uint64_t do_div(uint64_t* n, uint64_t base)$/;"	f
duration	ad9361.h	/^	uint8_t duration;		\/* Duration to be considered for measuring *\/$/;"	m	struct:rf_rssi
elna_1_control_en	ad9361.h	/^	bool			elna_1_control_en; \/* GPO0 *\/$/;"	m	struct:elna_control
elna_2_control_en	ad9361.h	/^	bool			elna_2_control_en; \/* GPO1 *\/$/;"	m	struct:elna_control
elna_bypass_loss_mdB	ad9361_api.h	/^	uint32_t	elna_bypass_loss_mdB;	\/* adi,elna-bypass-loss-mdB *\/$/;"	m	struct:__anon2
elna_control	ad9361.h	/^struct elna_control {$/;"	s
elna_ctrl	ad9361.h	/^	struct elna_control	elna_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::elna_control
elna_gain_mdB	ad9361_api.h	/^	uint32_t	elna_gain_mdB;	\/* adi,elna-gain-mdB *\/$/;"	m	struct:__anon2
elna_rx1_gpo0_control_enable	ad9361_api.h	/^	uint8_t		elna_rx1_gpo0_control_enable;	\/* adi,elna-rx1-gpo0-control-enable *\/$/;"	m	struct:__anon2
elna_rx2_gpo1_control_enable	ad9361_api.h	/^	uint8_t		elna_rx2_gpo1_control_enable;	\/* adi,elna-rx2-gpo1-control-enable *\/$/;"	m	struct:__anon2
elna_settling_delay_ns	ad9361_api.h	/^	uint32_t	elna_settling_delay_ns;	\/* adi,elna-settling-delay-ns *\/$/;"	m	struct:__anon2
en_mask	ad9361.h	/^	uint8_t			en_mask;$/;"	m	struct:ctrl_outs_control
enable	dac_core.h	/^	bool					enable;$/;"	m	struct:dds_state
ensm_enable_pin_pulse_mode_enable	ad9361_api.h	/^	uint8_t		ensm_enable_pin_pulse_mode_enable;	\/* adi,ensm-enable-pin-pulse-mode-enable *\/$/;"	m	struct:__anon2
ensm_enable_txnrx_control_enable	ad9361_api.h	/^	uint8_t		ensm_enable_txnrx_control_enable;	\/* adi,ensm-enable-txnrx-control-enable *\/$/;"	m	struct:__anon2
ensm_pin_ctl_en	ad9361.h	/^	bool 			ensm_pin_ctl_en;$/;"	m	struct:ad9361_rf_phy
ensm_pin_ctrl	ad9361.h	/^	bool			ensm_pin_ctrl;$/;"	m	struct:ad9361_phy_platform_data
ensm_pin_pulse_mode	ad9361.h	/^	bool			ensm_pin_pulse_mode;$/;"	m	struct:ad9361_phy_platform_data
entry	ad9361.h	/^	struct ad9361_fastlock_entry entry[2][8];$/;"	m	struct:ad9361_fastlock	typeref:struct:ad9361_fastlock::ad9361_fastlock_entry
example	command.h	/^	const char* example;$/;"	m	struct:__anon1
external_rx_lo_enable	ad9361_api.h	/^	uint8_t		external_rx_lo_enable;	\/* adi,external-rx-lo-enable *\/$/;"	m	struct:__anon2
external_tx_lo_enable	ad9361_api.h	/^	uint8_t		external_tx_lo_enable;	\/* adi,external-tx-lo-enable *\/$/;"	m	struct:__anon2
f_agc_allow_agc_gain_increase	ad9361.h	/^	bool f_agc_allow_agc_gain_increase; \/* 0x110:1 *\/$/;"	m	struct:gain_control
f_agc_dec_pow_measuremnt_duration	ad9361.h	/^	uint32_t f_agc_dec_pow_measuremnt_duration;  \/* Samples, 0x15C *\/$/;"	m	struct:gain_control
f_agc_energy_lost_stronger_sig_gain_lock_exit_cnt	ad9361.h	/^	uint8_t f_agc_energy_lost_stronger_sig_gain_lock_exit_cnt; \/* 0x119 0..63 RX samples *\/$/;"	m	struct:gain_control
f_agc_final_overrange_count	ad9361.h	/^	uint8_t f_agc_final_overrange_count; \/* 0x116:5 0..7 *\/$/;"	m	struct:gain_control
f_agc_gain_increase_after_gain_lock_en	ad9361.h	/^	bool f_agc_gain_increase_after_gain_lock_en; \/* 0x110:7  *\/$/;"	m	struct:gain_control
f_agc_gain_index_type_after_exit_rx_mode	ad9361.h	/^	enum f_agc_target_gain_index_type f_agc_gain_index_type_after_exit_rx_mode; \/* 0x110:[4,2]  *\/$/;"	m	struct:gain_control	typeref:enum:gain_control::f_agc_target_gain_index_type
f_agc_lmt_final_settling_steps	ad9361.h	/^	uint8_t f_agc_lmt_final_settling_steps; \/* 0x113:6 0..3 (Post Lock Level Step)*\/$/;"	m	struct:gain_control
f_agc_lock_level	ad9361.h	/^	uint8_t f_agc_lock_level; \/* 0x101 0..-127 dBFS *\/$/;"	m	struct:gain_control
f_agc_lock_level_gain_increase_upper_limit	ad9361.h	/^	uint8_t f_agc_lock_level_gain_increase_upper_limit; \/* 0x118 0..63 *\/$/;"	m	struct:gain_control
f_agc_lock_level_lmt_gain_increase_en	ad9361.h	/^	bool f_agc_lock_level_lmt_gain_increase_en; \/* 0x111:6 *\/$/;"	m	struct:gain_control
f_agc_lp_thresh_increment_steps	ad9361.h	/^	uint8_t f_agc_lp_thresh_increment_steps; \/* 0x117 1..8 *\/$/;"	m	struct:gain_control
f_agc_lp_thresh_increment_time	ad9361.h	/^	uint8_t f_agc_lp_thresh_increment_time; \/* 0x11B RX samples *\/$/;"	m	struct:gain_control
f_agc_lpf_final_settling_steps	ad9361.h	/^	uint8_t f_agc_lpf_final_settling_steps; \/* 0x112:6 0..3 (Post Lock Level Step)*\/$/;"	m	struct:gain_control
f_agc_optimized_gain_offset	ad9361.h	/^	uint8_t f_agc_optimized_gain_offset;	\/*0x116 0..15 steps *\/$/;"	m	struct:gain_control
f_agc_power_measurement_duration_in_state5	ad9361.h	/^	uint8_t f_agc_power_measurement_duration_in_state5; \/* 0x109, 0x10a RX samples 0..524288*\/$/;"	m	struct:gain_control
f_agc_rst_gla_en_agc_pulled_high_en	ad9361.h	/^	bool f_agc_rst_gla_en_agc_pulled_high_en;$/;"	m	struct:gain_control
f_agc_rst_gla_engergy_lost_goto_optim_gain_en	ad9361.h	/^	bool f_agc_rst_gla_engergy_lost_goto_optim_gain_en; \/* 0x110:6 *\/$/;"	m	struct:gain_control
f_agc_rst_gla_engergy_lost_sig_thresh_below_ll	ad9361.h	/^	uint8_t f_agc_rst_gla_engergy_lost_sig_thresh_below_ll; \/* 0x112:6 *\/$/;"	m	struct:gain_control
f_agc_rst_gla_engergy_lost_sig_thresh_exceeded_en	ad9361.h	/^	bool f_agc_rst_gla_engergy_lost_sig_thresh_exceeded_en; \/* 0x110:6 *\/$/;"	m	struct:gain_control
f_agc_rst_gla_if_en_agc_pulled_high_mode	ad9361.h	/^	enum f_agc_target_gain_index_type f_agc_rst_gla_if_en_agc_pulled_high_mode; \/* 0x0FB, 0x111 *\/$/;"	m	struct:gain_control	typeref:enum:gain_control::f_agc_target_gain_index_type
f_agc_rst_gla_large_adc_overload_en	ad9361.h	/^	bool f_agc_rst_gla_large_adc_overload_en; \/*0x110:~1 and 0x114:~7 *\/$/;"	m	struct:gain_control
f_agc_rst_gla_large_lmt_overload_en	ad9361.h	/^	bool f_agc_rst_gla_large_lmt_overload_en; \/*0x110:~1 *\/$/;"	m	struct:gain_control
f_agc_rst_gla_stronger_sig_thresh_above_ll	ad9361.h	/^	uint8_t f_agc_rst_gla_stronger_sig_thresh_above_ll;	\/*0x113 0..63 dbFS *\/$/;"	m	struct:gain_control
f_agc_rst_gla_stronger_sig_thresh_exceeded_en	ad9361.h	/^	bool f_agc_rst_gla_stronger_sig_thresh_exceeded_en; \/* 0x110:~6 *\/$/;"	m	struct:gain_control
f_agc_state_wait_time_ns	ad9361.h	/^	uint32_t f_agc_state_wait_time_ns; \/* 0x117 0..31 RX samples -> time_ns *\/$/;"	m	struct:gain_control
f_agc_target_gain_index_type	ad9361.h	/^enum f_agc_target_gain_index_type {$/;"	g
f_agc_use_last_lock_level_for_set_gain_en	ad9361.h	/^	bool f_agc_use_last_lock_level_for_set_gain_en; \/* 0x111:7 *\/$/;"	m	struct:gain_control
fagc_allow_agc_gain_increase	ad9361_api.h	/^	uint8_t		fagc_allow_agc_gain_increase;	\/* adi,fagc-allow-agc-gain-increase-enable *\/$/;"	m	struct:__anon2
fagc_dec_pow_measuremnt_duration	ad9361_api.h	/^	uint32_t	fagc_dec_pow_measuremnt_duration;	\/* adi,fagc-dec-pow-measurement-duration *\/$/;"	m	struct:__anon2
fagc_energy_lost_stronger_sig_gain_lock_exit_cnt	ad9361_api.h	/^	uint32_t	fagc_energy_lost_stronger_sig_gain_lock_exit_cnt;	\/* adi,fagc-energy-lost-stronger-sig-gain-lock-exit-cnt *\/$/;"	m	struct:__anon2
fagc_final_overrange_count	ad9361_api.h	/^	uint32_t	fagc_final_overrange_count;	\/* adi,fagc-final-overrange-count *\/$/;"	m	struct:__anon2
fagc_gain_increase_after_gain_lock_en	ad9361_api.h	/^	uint8_t		fagc_gain_increase_after_gain_lock_en;	\/* adi,fagc-gain-increase-after-gain-lock-enable *\/$/;"	m	struct:__anon2
fagc_gain_index_type_after_exit_rx_mode	ad9361_api.h	/^	uint32_t	fagc_gain_index_type_after_exit_rx_mode;	\/* adi,fagc-gain-index-type-after-exit-rx-mode *\/$/;"	m	struct:__anon2
fagc_lmt_final_settling_steps	ad9361_api.h	/^	uint32_t	fagc_lmt_final_settling_steps;	\/* adi,fagc-lmt-final-settling-steps *\/$/;"	m	struct:__anon2
fagc_lock_level	ad9361_api.h	/^	uint32_t	fagc_lock_level;	\/* adi,fagc-lock-level *\/$/;"	m	struct:__anon2
fagc_lock_level_gain_increase_upper_limit	ad9361_api.h	/^	uint32_t	fagc_lock_level_gain_increase_upper_limit;	\/* adi,fagc-lock-level-gain-increase-upper-limit *\/$/;"	m	struct:__anon2
fagc_lock_level_lmt_gain_increase_en	ad9361_api.h	/^	uint8_t		fagc_lock_level_lmt_gain_increase_en;	\/* adi,fagc-lock-level-lmt-gain-increase-enable *\/$/;"	m	struct:__anon2
fagc_lp_thresh_increment_steps	ad9361_api.h	/^	uint32_t	fagc_lp_thresh_increment_steps;	\/* adi,fagc-lp-thresh-increment-steps *\/$/;"	m	struct:__anon2
fagc_lp_thresh_increment_time	ad9361_api.h	/^	uint32_t	fagc_lp_thresh_increment_time;	\/* adi,fagc-lp-thresh-increment-time *\/$/;"	m	struct:__anon2
fagc_lpf_final_settling_steps	ad9361_api.h	/^	uint32_t	fagc_lpf_final_settling_steps;	\/* adi,fagc-lpf-final-settling-steps *\/$/;"	m	struct:__anon2
fagc_optimized_gain_offset	ad9361_api.h	/^	uint32_t	fagc_optimized_gain_offset;	\/* adi,fagc-optimized-gain-offset *\/$/;"	m	struct:__anon2
fagc_power_measurement_duration_in_state5	ad9361_api.h	/^	uint32_t	fagc_power_measurement_duration_in_state5;	\/* adi,fagc-power-measurement-duration-in-state5 *\/$/;"	m	struct:__anon2
fagc_rst_gla_en_agc_pulled_high_en	ad9361_api.h	/^	uint8_t		fagc_rst_gla_en_agc_pulled_high_en;	\/* adi,fagc-rst-gla-en-agc-pulled-high-enable *\/$/;"	m	struct:__anon2
fagc_rst_gla_engergy_lost_goto_optim_gain_en	ad9361_api.h	/^	uint8_t		fagc_rst_gla_engergy_lost_goto_optim_gain_en;	\/* adi,fagc-rst-gla-engergy-lost-goto-optim-gain-enable *\/$/;"	m	struct:__anon2
fagc_rst_gla_engergy_lost_sig_thresh_below_ll	ad9361_api.h	/^	uint32_t	fagc_rst_gla_engergy_lost_sig_thresh_below_ll;	\/* adi,fagc-rst-gla-engergy-lost-sig-thresh-below-ll *\/$/;"	m	struct:__anon2
fagc_rst_gla_engergy_lost_sig_thresh_exceeded_en	ad9361_api.h	/^	uint8_t		fagc_rst_gla_engergy_lost_sig_thresh_exceeded_en;	\/* adi,fagc-rst-gla-engergy-lost-sig-thresh-exceeded-enable *\/$/;"	m	struct:__anon2
fagc_rst_gla_if_en_agc_pulled_high_mode	ad9361_api.h	/^	uint32_t	fagc_rst_gla_if_en_agc_pulled_high_mode;	\/* adi,fagc-rst-gla-if-en-agc-pulled-high-mode *\/$/;"	m	struct:__anon2
fagc_rst_gla_large_adc_overload_en	ad9361_api.h	/^	uint8_t		fagc_rst_gla_large_adc_overload_en;	\/* adi,fagc-rst-gla-large-adc-overload-enable *\/$/;"	m	struct:__anon2
fagc_rst_gla_large_lmt_overload_en	ad9361_api.h	/^	uint8_t		fagc_rst_gla_large_lmt_overload_en;	\/* adi,fagc-rst-gla-large-lmt-overload-enable *\/$/;"	m	struct:__anon2
fagc_rst_gla_stronger_sig_thresh_above_ll	ad9361_api.h	/^	uint32_t	fagc_rst_gla_stronger_sig_thresh_above_ll;	\/* adi,fagc-rst-gla-stronger-sig-thresh-above-ll *\/$/;"	m	struct:__anon2
fagc_rst_gla_stronger_sig_thresh_exceeded_en	ad9361_api.h	/^	uint8_t		fagc_rst_gla_stronger_sig_thresh_exceeded_en;	\/* adi,fagc-rst-gla-stronger-sig-thresh-exceeded-enable *\/$/;"	m	struct:__anon2
fagc_state_wait_time_ns	ad9361_api.h	/^	uint32_t	fagc_state_wait_time_ns;	\/* adi,fagc-state-wait-time-ns *\/$/;"	m	struct:__anon2
fagc_use_last_lock_level_for_set_gain_en	ad9361_api.h	/^	uint8_t		fagc_use_last_lock_level_for_set_gain_en;	\/* adi,fagc-use-last-lock-level-for-set-gain-enable *\/$/;"	m	struct:__anon2
false	common.h	50;"	d
fastlock	ad9361.h	/^	struct ad9361_fastlock	fastlock;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::ad9361_fastlock
fdd	ad9361.h	/^	bool			fdd;$/;"	m	struct:ad9361_phy_platform_data
fdd_alt_word_order_enable	ad9361_api.h	/^	uint8_t		fdd_alt_word_order_enable;	\/* adi,fdd-alt-word-order-enable *\/$/;"	m	struct:__anon2
fdd_independent_mode	ad9361.h	/^	bool			fdd_independent_mode;$/;"	m	struct:ad9361_phy_platform_data
fdd_rx_rate_2tx_enable	ad9361_api.h	/^	uint8_t		fdd_rx_rate_2tx_enable;	\/* adi,fdd-rx-rate-2tx-enable *\/$/;"	m	struct:__anon2
fgt_lmt_index	ad9361.h	/^	uint32_t fgt_lmt_index;	\/* Full Gain Table \/ LNA-MIXER-TIA gain index *\/$/;"	m	struct:rf_rx_gain
filt_rx_bw_Hz	ad9361.h	/^	uint32_t		filt_rx_bw_Hz;$/;"	m	struct:ad9361_rf_phy
filt_rx_path_clks	ad9361.h	/^	uint32_t		filt_rx_path_clks[NUM_RX_CLOCKS];$/;"	m	struct:ad9361_rf_phy
filt_tx_bw_Hz	ad9361.h	/^	uint32_t		filt_tx_bw_Hz;$/;"	m	struct:ad9361_rf_phy
filt_tx_path_clks	ad9361.h	/^	uint32_t		filt_tx_path_clks[NUM_TX_CLOCKS];$/;"	m	struct:ad9361_rf_phy
filt_valid	ad9361.h	/^	bool			filt_valid;$/;"	m	struct:ad9361_rf_phy
fir_dest	ad9361.h	/^enum fir_dest {$/;"	g
flags	ad9361.h	/^	uint32_t		flags;$/;"	m	struct:ad9361_rf_phy
flags	ad9361.h	/^	uint8_t flags;$/;"	m	struct:ad9361_fastlock_entry
flags	common.h	/^	uint32_t				flags;$/;"	m	struct:clk_init_data
frequency_division_duplex_independent_mode_enable	ad9361_api.h	/^	uint8_t		frequency_division_duplex_independent_mode_enable;	\/* adi,frequency-division-duplex-independent-mode-enable *\/$/;"	m	struct:__anon2
frequency_division_duplex_mode_enable	ad9361_api.h	/^	uint8_t		frequency_division_duplex_mode_enable;	\/* adi,frequency-division-duplex-mode-enable *\/$/;"	m	struct:__anon2
full_duplex_swap_bits_enable	ad9361_api.h	/^	uint8_t		full_duplex_swap_bits_enable;	\/* adi,full-duplex-swap-bits-enable *\/$/;"	m	struct:__anon2
full_gain_table	ad9361.c	/^static const uint8_t full_gain_table[RXGAIN_TBLS_END][SIZE_FULL_TABLE][3] =$/;"	v	file:
full_port_enable	ad9361_api.h	/^	uint8_t		full_port_enable;	\/* adi,full-port-enable *\/$/;"	m	struct:__anon2
function	command.h	/^	cmd_function function;$/;"	m	struct:__anon1
gain_control	ad9361.h	/^struct gain_control {$/;"	s
gain_ctrl	ad9361.h	/^	struct gain_control	gain_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::gain_control
gain_db	ad9361.h	/^	int32_t gain_db;		\/* gain value in dB *\/$/;"	m	struct:rf_rx_gain
gain_mdB	ad9361.h	/^	uint16_t			gain_mdB;$/;"	m	struct:elna_control
gain_step_db	ad9361.h	/^	int32_t gain_step_db;$/;"	m	struct:rx_gain_info
gain_update_interval_us	ad9361.h	/^	uint32_t gain_update_interval_us; \/* in us *\/$/;"	m	struct:gain_control
gc_adc_large_overload_thresh	ad9361_api.h	/^	uint8_t		gc_adc_large_overload_thresh;	\/* adi,gc-adc-large-overload-thresh *\/$/;"	m	struct:__anon2
gc_adc_ovr_sample_size	ad9361_api.h	/^	uint8_t		gc_adc_ovr_sample_size;	\/* adi,gc-adc-ovr-sample-size *\/$/;"	m	struct:__anon2
gc_adc_small_overload_thresh	ad9361_api.h	/^	uint8_t		gc_adc_small_overload_thresh;	\/* adi,gc-adc-small-overload-thresh *\/$/;"	m	struct:__anon2
gc_dec_pow_measurement_duration	ad9361_api.h	/^	uint16_t	gc_dec_pow_measurement_duration;	\/* adi,gc-dec-pow-measurement-duration *\/$/;"	m	struct:__anon2
gc_dig_gain_enable	ad9361_api.h	/^	uint8_t		gc_dig_gain_enable;	\/* adi,gc-dig-gain-enable *\/$/;"	m	struct:__anon2
gc_lmt_overload_high_thresh	ad9361_api.h	/^	uint16_t	gc_lmt_overload_high_thresh;	\/* adi,gc-lmt-overload-high-thresh *\/$/;"	m	struct:__anon2
gc_lmt_overload_low_thresh	ad9361_api.h	/^	uint16_t	gc_lmt_overload_low_thresh;	\/* adi,gc-lmt-overload-low-thresh *\/$/;"	m	struct:__anon2
gc_low_power_thresh	ad9361_api.h	/^	uint8_t		gc_low_power_thresh;	\/* adi,gc-low-power-thresh *\/$/;"	m	struct:__anon2
gc_max_dig_gain	ad9361_api.h	/^	uint8_t		gc_max_dig_gain;	\/* adi,gc-max-dig-gain *\/$/;"	m	struct:__anon2
gc_rx1_mode	ad9361_api.h	/^	uint8_t		gc_rx1_mode;	\/* adi,gc-rx1-mode *\/$/;"	m	struct:__anon2
gc_rx2_mode	ad9361_api.h	/^	uint8_t		gc_rx2_mode;	\/* adi,gc-rx2-mode *\/$/;"	m	struct:__anon2
get_dds_tx1_tone1_freq	command.c	/^void get_dds_tx1_tone1_freq(double* param, char param_no)	\/\/ dds_tx1_tone1_freq?$/;"	f
get_dds_tx1_tone1_phase	command.c	/^void get_dds_tx1_tone1_phase(double* param, char param_no)	\/\/ dds_tx1_tone1_phase?$/;"	f
get_dds_tx1_tone1_scale	command.c	/^void get_dds_tx1_tone1_scale(double* param, char param_no)	\/\/ dds_tx1_tone1_scale?$/;"	f
get_dds_tx1_tone2_freq	command.c	/^void get_dds_tx1_tone2_freq(double* param, char param_no)	\/\/ dds_tx1_tone2_freq?$/;"	f
get_dds_tx1_tone2_phase	command.c	/^void get_dds_tx1_tone2_phase(double* param, char param_no)	\/\/ dds_tx1_tone2_phase?$/;"	f
get_dds_tx1_tone2_scale	command.c	/^void get_dds_tx1_tone2_scale(double* param, char param_no)	\/\/ dds_tx1_tone2_scale?$/;"	f
get_dds_tx2_tone1_freq	command.c	/^void get_dds_tx2_tone1_freq(double* param, char param_no)	\/\/ dds_tx2_tone1_freq?$/;"	f
get_dds_tx2_tone1_phase	command.c	/^void get_dds_tx2_tone1_phase(double* param, char param_no)	\/\/ dds_tx2_tone1_phase?$/;"	f
get_dds_tx2_tone1_scale	command.c	/^void get_dds_tx2_tone1_scale(double* param, char param_no)	\/\/ dds_tx2_tone1_scale?$/;"	f
get_dds_tx2_tone2_freq	command.c	/^void get_dds_tx2_tone2_freq(double* param, char param_no)	\/\/ dds_tx2_tone2_freq?$/;"	f
get_dds_tx2_tone2_phase	command.c	/^void get_dds_tx2_tone2_phase(double* param, char param_no)	\/\/ dds_tx2_tone2_phase?$/;"	f
get_help	command.c	/^void get_help(double* param, char param_no) \/\/ "help?" command$/;"	f
get_register	command.c	/^void get_register(double* param, char param_no) \/\/ "register?" command$/;"	f
get_rx1_gc_mode	command.c	/^void get_rx1_gc_mode(double* param, char param_no) \/\/ "rx1_gc_mode?" command$/;"	f
get_rx1_rf_gain	command.c	/^void get_rx1_rf_gain(double* param, char param_no) \/\/ "rx1_rf_gain?" command$/;"	f
get_rx2_gc_mode	command.c	/^void get_rx2_gc_mode(double* param, char param_no) \/\/ "rx2_gc_mode?" command$/;"	f
get_rx2_rf_gain	command.c	/^void get_rx2_rf_gain(double* param, char param_no) \/\/ "rx2_rf_gain?" command$/;"	f
get_rx_fir_en	command.c	/^void get_rx_fir_en(double* param, char param_no) \/\/ "rx_fir_en?" command$/;"	f
get_rx_lo_freq	command.c	/^void get_rx_lo_freq(double* param, char param_no) \/\/ "rx_lo_freq?" command$/;"	f
get_rx_rf_bandwidth	command.c	/^void get_rx_rf_bandwidth(double* param, char param_no) \/\/ "rx_rf_bandwidth?" command$/;"	f
get_rx_samp_freq	command.c	/^void get_rx_samp_freq(double* param, char param_no) \/\/ "rx_samp_freq?" command$/;"	f
get_tx1_attenuation	command.c	/^void get_tx1_attenuation(double* param, char param_no) \/\/ "tx1_attenuation?" command$/;"	f
get_tx2_attenuation	command.c	/^void get_tx2_attenuation(double* param, char param_no) \/\/ "tx1_attenuation?" command$/;"	f
get_tx_fir_en	command.c	/^void get_tx_fir_en(double* param, char param_no) \/\/ "tx_fir_en?" command$/;"	f
get_tx_lo_freq	command.c	/^void get_tx_lo_freq(double* param, char param_no) \/\/ "tx_lo_freq?" command$/;"	f
get_tx_rf_bandwidth	command.c	/^void get_tx_rf_bandwidth(double* param, char param_no) \/\/ "tx_rf_bandwidth?" command$/;"	f
get_tx_samp_freq	command.c	/^void get_tx_samp_freq(double* param, char param_no) \/\/ "tx_samp_freq?" command$/;"	f
gm_st_ctrl	ad9361.c	/^static const uint8_t gm_st_ctrl[16] = { 0x0, 0xD, 0x15, 0x1B, 0x21, 0x25, 0x29,$/;"	v	file:
gm_st_gain	ad9361.c	/^static const uint8_t gm_st_gain[16] = { 0x78, 0x74, 0x70, 0x6C, 0x68, 0x64, 0x60,$/;"	v	file:
gpio_cal_sw1	ad9361.h	/^	int32_t				gpio_cal_sw1;$/;"	m	struct:ad9361_phy_platform_data
gpio_cal_sw1	ad9361_api.h	/^	int32_t		gpio_cal_sw1;	\/* cal-sw1-gpios *\/$/;"	m	struct:__anon2
gpio_cal_sw2	ad9361.h	/^	int32_t				gpio_cal_sw2;$/;"	m	struct:ad9361_phy_platform_data
gpio_cal_sw2	ad9361_api.h	/^	int32_t		gpio_cal_sw2;	\/* cal-sw2-gpios *\/$/;"	m	struct:__anon2
gpio_config	platform.c	/^XGpioPs_Config	*gpio_config;$/;"	v
gpio_config	platform.c	/^XGpio_Config	*gpio_config;$/;"	v
gpio_data	platform.c	/^void gpio_data(uint8_t pin, uint8_t data)$/;"	f
gpio_direction	platform.c	/^void gpio_direction(uint8_t pin, uint8_t direction)$/;"	f
gpio_init	platform.c	/^void gpio_init(uint32_t device_id)$/;"	f
gpio_instance	platform.c	/^XGpioPs			gpio_instance;$/;"	v
gpio_is_valid	platform.c	/^bool gpio_is_valid(int number)$/;"	f
gpio_resetb	ad9361.h	/^	int32_t 			gpio_resetb;$/;"	m	struct:ad9361_phy_platform_data
gpio_resetb	ad9361_api.h	/^	int32_t		gpio_resetb;	\/* reset-gpios *\/$/;"	m	struct:__anon2
gpio_set_value	platform.c	/^void gpio_set_value(unsigned gpio, int value)$/;"	f
gpio_sync	ad9361.h	/^	int32_t 			gpio_sync;$/;"	m	struct:ad9361_phy_platform_data
gpio_sync	ad9361_api.h	/^	int32_t		gpio_sync;		\/* sync-gpios *\/$/;"	m	struct:__anon2
gpo0_inactive_state_high_en	ad9361.h	/^	bool gpo0_inactive_state_high_en;$/;"	m	struct:gpo_control
gpo0_inactive_state_high_enable	ad9361_api.h	/^	uint8_t gpo0_inactive_state_high_enable;	\/* adi,gpo0-inactive-state-high-enable *\/$/;"	m	struct:__anon2
gpo0_rx_delay_us	ad9361.h	/^	uint8_t gpo0_rx_delay_us;$/;"	m	struct:gpo_control
gpo0_rx_delay_us	ad9361_api.h	/^	uint8_t gpo0_rx_delay_us;	\/* adi,gpo0-rx-delay-us *\/$/;"	m	struct:__anon2
gpo0_slave_rx_en	ad9361.h	/^	bool gpo0_slave_rx_en;$/;"	m	struct:gpo_control
gpo0_slave_rx_enable	ad9361_api.h	/^	uint8_t gpo0_slave_rx_enable;	\/* adi,gpo0-slave-rx-enable *\/$/;"	m	struct:__anon2
gpo0_slave_tx_en	ad9361.h	/^	bool gpo0_slave_tx_en;$/;"	m	struct:gpo_control
gpo0_slave_tx_enable	ad9361_api.h	/^	uint8_t gpo0_slave_tx_enable;	\/* adi,gpo0-slave-tx-enable *\/$/;"	m	struct:__anon2
gpo0_tx_delay_us	ad9361.h	/^	uint8_t gpo0_tx_delay_us;$/;"	m	struct:gpo_control
gpo0_tx_delay_us	ad9361_api.h	/^	uint8_t gpo0_tx_delay_us;	\/* adi,gpo0-tx-delay-us *\/$/;"	m	struct:__anon2
gpo1_inactive_state_high_en	ad9361.h	/^	bool gpo1_inactive_state_high_en;$/;"	m	struct:gpo_control
gpo1_inactive_state_high_enable	ad9361_api.h	/^	uint8_t gpo1_inactive_state_high_enable;	\/* adi,gpo1-inactive-state-high-enable *\/$/;"	m	struct:__anon2
gpo1_rx_delay_us	ad9361.h	/^	uint8_t gpo1_rx_delay_us;$/;"	m	struct:gpo_control
gpo1_rx_delay_us	ad9361_api.h	/^	uint8_t gpo1_rx_delay_us;	\/* adi,gpo1-rx-delay-us *\/$/;"	m	struct:__anon2
gpo1_slave_rx_en	ad9361.h	/^	bool gpo1_slave_rx_en;$/;"	m	struct:gpo_control
gpo1_slave_rx_enable	ad9361_api.h	/^	uint8_t gpo1_slave_rx_enable;	\/* adi,gpo1-slave-rx-enable *\/$/;"	m	struct:__anon2
gpo1_slave_tx_en	ad9361.h	/^	bool gpo1_slave_tx_en;$/;"	m	struct:gpo_control
gpo1_slave_tx_enable	ad9361_api.h	/^	uint8_t gpo1_slave_tx_enable;	\/* adi,gpo1-slave-tx-enable *\/$/;"	m	struct:__anon2
gpo1_tx_delay_us	ad9361.h	/^	uint8_t gpo1_tx_delay_us;$/;"	m	struct:gpo_control
gpo1_tx_delay_us	ad9361_api.h	/^	uint8_t gpo1_tx_delay_us;	\/* adi,gpo1-tx-delay-us *\/$/;"	m	struct:__anon2
gpo2_inactive_state_high_en	ad9361.h	/^	bool gpo2_inactive_state_high_en;$/;"	m	struct:gpo_control
gpo2_inactive_state_high_enable	ad9361_api.h	/^	uint8_t gpo2_inactive_state_high_enable;	\/* adi,gpo2-inactive-state-high-enable *\/$/;"	m	struct:__anon2
gpo2_rx_delay_us	ad9361.h	/^	uint8_t gpo2_rx_delay_us;$/;"	m	struct:gpo_control
gpo2_rx_delay_us	ad9361_api.h	/^	uint8_t gpo2_rx_delay_us;	\/* adi,gpo2-rx-delay-us *\/$/;"	m	struct:__anon2
gpo2_slave_rx_en	ad9361.h	/^	bool gpo2_slave_rx_en;$/;"	m	struct:gpo_control
gpo2_slave_rx_enable	ad9361_api.h	/^	uint8_t gpo2_slave_rx_enable;	\/* adi,gpo2-slave-rx-enable *\/$/;"	m	struct:__anon2
gpo2_slave_tx_en	ad9361.h	/^	bool gpo2_slave_tx_en;$/;"	m	struct:gpo_control
gpo2_slave_tx_enable	ad9361_api.h	/^	uint8_t gpo2_slave_tx_enable;	\/* adi,gpo2-slave-tx-enable *\/$/;"	m	struct:__anon2
gpo2_tx_delay_us	ad9361.h	/^	uint8_t gpo2_tx_delay_us;$/;"	m	struct:gpo_control
gpo2_tx_delay_us	ad9361_api.h	/^	uint8_t gpo2_tx_delay_us;	\/* adi,gpo2-tx-delay-us *\/$/;"	m	struct:__anon2
gpo3_inactive_state_high_en	ad9361.h	/^	bool gpo3_inactive_state_high_en;$/;"	m	struct:gpo_control
gpo3_inactive_state_high_enable	ad9361_api.h	/^	uint8_t gpo3_inactive_state_high_enable;	\/* adi,gpo3-inactive-state-high-enable *\/$/;"	m	struct:__anon2
gpo3_rx_delay_us	ad9361.h	/^	uint8_t gpo3_rx_delay_us;$/;"	m	struct:gpo_control
gpo3_rx_delay_us	ad9361_api.h	/^	uint8_t gpo3_rx_delay_us;	\/* adi,gpo3-rx-delay-us *\/$/;"	m	struct:__anon2
gpo3_slave_rx_en	ad9361.h	/^	bool gpo3_slave_rx_en;$/;"	m	struct:gpo_control
gpo3_slave_rx_enable	ad9361_api.h	/^	uint8_t gpo3_slave_rx_enable;	\/* adi,gpo3-slave-rx-enable *\/$/;"	m	struct:__anon2
gpo3_slave_tx_en	ad9361.h	/^	bool gpo3_slave_tx_en;$/;"	m	struct:gpo_control
gpo3_slave_tx_enable	ad9361_api.h	/^	uint8_t gpo3_slave_tx_enable;	\/* adi,gpo3-slave-tx-enable *\/$/;"	m	struct:__anon2
gpo3_tx_delay_us	ad9361.h	/^	uint8_t gpo3_tx_delay_us;$/;"	m	struct:gpo_control
gpo3_tx_delay_us	ad9361_api.h	/^	uint8_t gpo3_tx_delay_us;	\/* adi,gpo3-tx-delay-us *\/$/;"	m	struct:__anon2
gpo_control	ad9361.h	/^struct gpo_control {$/;"	s
gpo_ctrl	ad9361.h	/^	struct gpo_control	gpo_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::gpo_control
half_duplex_mode_enable	ad9361_api.h	/^	uint8_t		half_duplex_mode_enable;	\/* adi,half-duplex-mode-enable *\/$/;"	m	struct:__anon2
has_split_gt	ad9361.c	/^const bool has_split_gt = HAVE_SPLIT_GAIN_TABLE;$/;"	v
have_tdd_tables	ad9361.c	/^const bool have_tdd_tables = HAVE_TDD_SYNTH_TABLE;$/;"	v
high_gain_dB	ad9361.h	/^	uint8_t high_gain_dB;$/;"	m	struct:tx_monitor_control
high_gain_dB	ad9361_api.h	/^	uint32_t	high_gain_dB;	\/* adi,txmon-high-gain *\/$/;"	m	struct:__anon2
id_no	ad9361.h	/^	uint8_t 		id_no;$/;"	m	struct:ad9361_rf_phy
id_no	ad9361_api.h	/^	uint8_t		id_no;$/;"	m	struct:__anon2
id_no	util.h	/^	uint8_t 		id_no;$/;"	m	struct:spi_device
idx_step_offset	ad9361.h	/^	int32_t idx_step_offset;$/;"	m	struct:rx_gain_info
ilog2	util.c	/^int32_t ilog2(int32_t x)$/;"	f
immed_gain_change_if_large_adc_overload	ad9361.h	/^	bool immed_gain_change_if_large_adc_overload; \/* 0x123:3 *\/$/;"	m	struct:gain_control
immed_gain_change_if_large_lmt_overload	ad9361.h	/^	bool immed_gain_change_if_large_lmt_overload; \/* 0x123:7 *\/$/;"	m	struct:gain_control
index	ad9361.h	/^	uint8_t			index;$/;"	m	struct:ctrl_outs_control
int_sqrt	util.c	/^uint32_t int_sqrt(uint32_t x)$/;"	f
int_to_str	console.c	/^char *int_to_str(long number, char base)$/;"	f
invalid_cmd	main.c	/^char				invalid_cmd		 =  0;$/;"	v
invert_data_bus_enable	ad9361_api.h	/^	uint8_t		invert_data_bus_enable;	\/* adi,invert-data-bus-enable *\/$/;"	m	struct:__anon2
invert_data_clk_enable	ad9361_api.h	/^	uint8_t		invert_data_clk_enable;	\/* adi,invert-data-clk-enable *\/$/;"	m	struct:__anon2
invert_rx_frame_enable	ad9361_api.h	/^	uint8_t		invert_rx_frame_enable;	\/* adi,invert-rx-frame-enable *\/$/;"	m	struct:__anon2
last_tx_quad_cal_freq	ad9361.h	/^	uint64_t			last_tx_quad_cal_freq;$/;"	m	struct:ad9361_rf_phy
last_tx_quad_cal_phase	ad9361.h	/^	uint32_t			last_tx_quad_cal_phase;$/;"	m	struct:ad9361_rf_phy
lmt_gain	ad9361.h	/^	uint32_t lmt_gain;		\/* LNA-MIXER-TIA gain in dB (Split GT mode only)*\/$/;"	m	struct:rf_rx_gain
lmt_overload_high_thresh	ad9361.h	/^	uint16_t lmt_overload_high_thresh; \/* 16..800 mV, 0x107 *\/$/;"	m	struct:gain_control
lmt_overload_large_exceed_counter	ad9361.h	/^	uint8_t lmt_overload_large_exceed_counter; \/* 0..15, 0x121 *\/$/;"	m	struct:gain_control
lmt_overload_large_inc_steps	ad9361.h	/^	uint8_t lmt_overload_large_inc_steps; \/* 0..7, 0x121 *\/$/;"	m	struct:gain_control
lmt_overload_low_thresh	ad9361.h	/^	uint16_t lmt_overload_low_thresh; \/* 16..800 mV, 0x108 *\/$/;"	m	struct:gain_control
lmt_overload_small_exceed_counter	ad9361.h	/^	uint8_t lmt_overload_small_exceed_counter; \/* 0..15, 0x121 *\/$/;"	m	struct:gain_control
lna_index	ad9361.h	/^	uint32_t lna_index;		\/* LNA Index (Split GT mode only) *\/$/;"	m	struct:rf_rx_gain
lna_table	ad9361.c	/^static const int8_t lna_table[RXGAIN_TBLS_END][4] = {$/;"	v	file:
low_gain_dB	ad9361.h	/^	uint8_t low_gain_dB;$/;"	m	struct:tx_monitor_control
low_gain_dB	ad9361_api.h	/^	uint32_t	low_gain_dB;	\/* adi,txmon-low-gain *\/$/;"	m	struct:__anon2
low_high_gain_threshold_mdB	ad9361.h	/^	uint32_t low_high_gain_threshold_mdB;$/;"	m	struct:tx_monitor_control
low_high_gain_threshold_mdB	ad9361_api.h	/^	uint32_t	low_high_gain_threshold_mdB;	\/* adi,txmon-low-high-thresh *\/$/;"	m	struct:__anon2
low_power_thresh	ad9361.h	/^	uint8_t low_power_thresh; \/* -64..0 dBFS, 0x114 *\/$/;"	m	struct:gain_control
lpf_gain	ad9361.h	/^	uint32_t lpf_gain;		\/* Low pass filter gain in dB \/ index (Split GT mode only)*\/$/;"	m	struct:rf_rx_gain
lvds_bias_ctrl	ad9361.h	/^	uint8_t			lvds_bias_ctrl;$/;"	m	struct:port_control
lvds_bias_mV	ad9361_api.h	/^	uint32_t	lvds_bias_mV;	\/* adi,lvds-bias-mV *\/$/;"	m	struct:__anon2
lvds_invert	ad9361.h	/^	uint8_t			lvds_invert[2];$/;"	m	struct:port_control
lvds_invert1_control	ad9361_api.h	/^	uint8_t		lvds_invert1_control;	\/* adi,lvds-invert1-control *\/$/;"	m	struct:__anon2
lvds_invert2_control	ad9361_api.h	/^	uint8_t		lvds_invert2_control;	\/* adi,lvds-invert2-control *\/$/;"	m	struct:__anon2
lvds_mode_enable	ad9361_api.h	/^	uint8_t		lvds_mode_enable;	\/* adi,lvds-mode-enable *\/$/;"	m	struct:__anon2
lvds_rx_onchip_termination_enable	ad9361_api.h	/^	uint8_t		lvds_rx_onchip_termination_enable;	\/* adi,lvds-rx-onchip-termination-enable *\/$/;"	m	struct:__anon2
main	main.c	/^int main(void)$/;"	f
max	util.h	61;"	d
max_dig_gain	ad9361.h	/^	uint8_t max_dig_gain; \/* 0..31 *\/$/;"	m	struct:gain_control
max_gain_db	ad9361.h	/^	int32_t max_gain_db;$/;"	m	struct:rx_gain_info
max_idx	ad9361.h	/^	int32_t max_idx;$/;"	m	struct:rx_gain_info
max_rate	util.h	/^	uint32_t	max_rate;$/;"	m	struct:axiadc_chip_info
max_t	util.h	62;"	d
mdelay	platform.c	/^void mdelay(unsigned long msecs)$/;"	f
mgc_dec_gain_step	ad9361.h	/^	uint8_t mgc_dec_gain_step; \/* 1..8 *\/$/;"	m	struct:gain_control
mgc_dec_gain_step	ad9361_api.h	/^	uint8_t		mgc_dec_gain_step;	\/* adi,mgc-dec-gain-step *\/$/;"	m	struct:__anon2
mgc_inc_gain_step	ad9361.h	/^	uint8_t mgc_inc_gain_step; \/* 1..8 *\/$/;"	m	struct:gain_control
mgc_inc_gain_step	ad9361_api.h	/^	uint8_t		mgc_inc_gain_step;	\/* adi,mgc-inc-gain-step *\/$/;"	m	struct:__anon2
mgc_rx1_ctrl_inp_en	ad9361.h	/^	bool mgc_rx1_ctrl_inp_en; \/* Enables Pin control on RX1 default SPI ctrl *\/$/;"	m	struct:gain_control
mgc_rx1_ctrl_inp_enable	ad9361_api.h	/^	uint8_t		mgc_rx1_ctrl_inp_enable;	\/* adi,mgc-rx1-ctrl-inp-enable *\/$/;"	m	struct:__anon2
mgc_rx2_ctrl_inp_en	ad9361.h	/^	bool mgc_rx2_ctrl_inp_en; \/* Enables Pin control on RX2 default SPI ctrl *\/$/;"	m	struct:gain_control
mgc_rx2_ctrl_inp_enable	ad9361_api.h	/^	uint8_t		mgc_rx2_ctrl_inp_enable;	\/* adi,mgc-rx2-ctrl-inp-enable *\/$/;"	m	struct:__anon2
mgc_split_table_ctrl_inp_gain_mode	ad9361.h	/^	uint8_t mgc_split_table_ctrl_inp_gain_mode; \/* 0=AGC determine this, 1=only in LPF, 2=only in LMT *\/$/;"	m	struct:gain_control
mgc_split_table_ctrl_inp_gain_mode	ad9361_api.h	/^	uint8_t		mgc_split_table_ctrl_inp_gain_mode;	\/* adi,mgc-split-table-ctrl-inp-gain-mode *\/$/;"	m	struct:__anon2
min	util.h	59;"	d
min_t	util.h	60;"	d
mixer_index	ad9361.h	/^	uint32_t mixer_index;		\/* MIXER Index (Split GT mode only) *\/$/;"	m	struct:rf_rx_gain
mixer_table	ad9361.c	/^static const int8_t mixer_table[RXGAIN_TBLS_END][16] = {$/;"	v	file:
mode	ad9361.h	/^	uint8_t mode;$/;"	m	struct:rf_gain_ctrl
msleep_interruptible	platform.c	/^unsigned long msleep_interruptible(unsigned int msecs)$/;"	f
mult	ad9361.h	/^	uint32_t			mult;$/;"	m	struct:refclk_scale
multiplier	ad9361.h	/^	int32_t multiplier;	\/* Multiplier to convert reported RSSI *\/$/;"	m	struct:rf_rssi
name	command.h	/^	const char* name;$/;"	m	struct:__anon1
name	common.h	/^	const char				*name;$/;"	m	struct:clk_init_data
name	common.h	/^	const char	*name;$/;"	m	struct:clk
name	util.h	/^	char		*name;$/;"	m	struct:axiadc_chip_info
num_buf_channels	dac_core.h	/^	uint32_t				num_buf_channels;$/;"	m	struct:dds_state
num_channels	util.h	/^	int32_t		num_channels;$/;"	m	struct:axiadc_chip_info
num_parents	common.h	/^	uint8_t					num_parents;$/;"	m	struct:clk_init_data
offset	ad9361.h	/^	int8_t			offset;$/;"	m	struct:auxadc_control
one_shot_mode_en	ad9361.h	/^	bool one_shot_mode_en;$/;"	m	struct:tx_monitor_control
one_shot_mode_en	ad9361_api.h	/^	uint8_t		one_shot_mode_en;	\/* adi,txmon-one-shot-mode-enable *\/$/;"	m	struct:__anon2
ops	common.h	/^	const struct clk_ops	*ops;$/;"	m	struct:clk_init_data	typeref:struct:clk_init_data::clk_ops
out_value	ad9361.h	/^	void *out_value;$/;"	m	struct:ad9361_debugfs_entry
param	main.c	/^double				param[5]		 = {0, 0, 0, 0, 0};$/;"	v
param_no	main.c	/^char				param_no		 =  0;$/;"	v
parent_names	common.h	/^	const char				**parent_names;$/;"	m	struct:clk_init_data
parent_source	ad9361.h	/^	enum ad9361_clocks 	parent_source;$/;"	m	struct:refclk_scale	typeref:enum:refclk_scale::ad9361_clocks
pcore_version	dac_core.h	/^	uint32_t				pcore_version;$/;"	m	struct:dds_state
pcore_version	util.h	/^	uint32_t				pcore_version;$/;"	m	struct:axiadc_state
pdata	ad9361.h	/^	struct ad9361_phy_platform_data *pdata;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::ad9361_phy_platform_data
periodic_temp_measuremnt	ad9361.h	/^	bool			periodic_temp_measuremnt;$/;"	m	struct:auxadc_control
phy	ad9361.h	/^	struct ad9361_rf_phy	*phy;$/;"	m	struct:refclk_scale	typeref:struct:refclk_scale::ad9361_rf_phy
phy	ad9361.h	/^	struct ad9361_rf_phy *phy;$/;"	m	struct:ad9361_debugfs_entry	typeref:struct:ad9361_debugfs_entry::ad9361_rf_phy
phy	util.h	/^	struct ad9361_rf_phy	*phy;$/;"	m	struct:axiadc_state	typeref:struct:axiadc_state::ad9361_rf_phy
port_control	ad9361.h	/^struct port_control {$/;"	s
port_ctrl	ad9361.h	/^	struct port_control	port_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::port_control
pp_conf	ad9361.h	/^	uint8_t			pp_conf[3];$/;"	m	struct:port_control
pp_rx_swap_enable	ad9361_api.h	/^	uint8_t		pp_rx_swap_enable;	\/* adi,pp-rx-swap-enable *\/$/;"	m	struct:__anon2
pp_tx_swap_enable	ad9361_api.h	/^	uint8_t		pp_tx_swap_enable;	\/* adi,pp-tx-swap-enable *\/$/;"	m	struct:__anon2
preamble	ad9361.h	/^	uint32_t preamble;		\/* Initial RSSI *\/$/;"	m	struct:rf_rssi
prev_ensm_state	ad9361.h	/^	uint8_t 			prev_ensm_state;$/;"	m	struct:ad9361_rf_phy
printk	util.h	79;"	d
printk	util.h	84;"	d
propname	ad9361.h	/^	const char *propname;$/;"	m	struct:ad9361_debugfs_entry
qec_tracking_slow_mode_en	ad9361.h	/^	bool			qec_tracking_slow_mode_en;$/;"	m	struct:ad9361_phy_platform_data
qec_tracking_slow_mode_enable	ad9361_api.h	/^	uint8_t		qec_tracking_slow_mode_enable;	\/* adi,qec-tracking-slow-mode-enable *\/$/;"	m	struct:__anon2
quad_track_en	ad9361.h	/^	bool			quad_track_en;$/;"	m	struct:ad9361_rf_phy
rate	common.h	/^	uint32_t	rate;$/;"	m	struct:clk
rate_governor	ad9361.h	/^	uint32_t			rate_governor;$/;"	m	struct:ad9361_rf_phy
received_cmd	main.c	/^char				received_cmd[30] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,$/;"	v
ref_clk_scale	ad9361.h	/^	struct refclk_scale *ref_clk_scale[NUM_AD9361_CLKS];$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::refclk_scale
refclk_scale	ad9361.h	/^struct refclk_scale {$/;"	s
reference_clk_rate	ad9361_api.h	/^	uint32_t	reference_clk_rate;$/;"	m	struct:__anon2
register_clocks	ad9361.c	/^int32_t register_clocks(struct ad9361_rf_phy *phy)$/;"	f
restart_mode	ad9361.h	/^	enum rssi_restart_mode restart_mode;$/;"	m	struct:rssi_control	typeref:enum:rssi_control::rssi_restart_mode
rf_dc_offset_count_high	ad9361.h	/^	uint8_t			rf_dc_offset_count_high;$/;"	m	struct:ad9361_phy_platform_data
rf_dc_offset_count_low	ad9361.h	/^	uint8_t			rf_dc_offset_count_low;$/;"	m	struct:ad9361_phy_platform_data
rf_gain_ctrl	ad9361.h	/^struct rf_gain_ctrl {$/;"	s
rf_gain_ctrl_mode	ad9361.h	/^enum rf_gain_ctrl_mode {$/;"	g
rf_rssi	ad9361.h	/^struct rf_rssi {$/;"	s
rf_rx_bandwidth_Hz	ad9361.h	/^	uint32_t			rf_rx_bandwidth_Hz;$/;"	m	struct:ad9361_phy_platform_data
rf_rx_bandwidth_hz	ad9361_api.h	/^	uint32_t	rf_rx_bandwidth_hz;	\/* adi,rf-rx-bandwidth-hz *\/$/;"	m	struct:__anon2
rf_rx_gain	ad9361.h	/^struct rf_rx_gain {$/;"	s
rf_rx_input_sel	ad9361.h	/^	uint32_t			rf_rx_input_sel;$/;"	m	struct:ad9361_phy_platform_data
rf_tx_bandwidth_Hz	ad9361.h	/^	uint32_t			rf_tx_bandwidth_Hz;$/;"	m	struct:ad9361_phy_platform_data
rf_tx_bandwidth_hz	ad9361_api.h	/^	uint32_t	rf_tx_bandwidth_hz;	\/* adi,rf-tx-bandwidth-hz *\/$/;"	m	struct:__anon2
rf_tx_output_sel	ad9361.h	/^	uint32_t			rf_tx_output_sel;$/;"	m	struct:ad9361_phy_platform_data
rfdc_track_en	ad9361.h	/^	bool			rfdc_track_en;$/;"	m	struct:ad9361_rf_phy
rssi_control	ad9361.h	/^struct rssi_control {$/;"	s
rssi_ctrl	ad9361.h	/^	struct rssi_control	rssi_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::rssi_control
rssi_delay	ad9361.h	/^	uint32_t rssi_delay;$/;"	m	struct:rssi_control
rssi_delay	ad9361_api.h	/^	uint32_t	rssi_delay;	\/* adi,rssi-delay *\/$/;"	m	struct:__anon2
rssi_duration	ad9361.h	/^	uint32_t rssi_duration;$/;"	m	struct:rssi_control
rssi_duration	ad9361_api.h	/^	uint32_t	rssi_duration;	\/* adi,rssi-duration *\/$/;"	m	struct:__anon2
rssi_restart_mode	ad9361.h	/^enum rssi_restart_mode {$/;"	g
rssi_restart_mode	ad9361_api.h	/^	uint8_t		rssi_restart_mode;	\/* adi,rssi-restart-mode *\/$/;"	m	struct:__anon2
rssi_unit_is_rx_samples	ad9361.h	/^	bool rssi_unit_is_rx_samples;	\/* default unit is time *\/$/;"	m	struct:rssi_control
rssi_unit_is_rx_samples_enable	ad9361_api.h	/^	uint8_t		rssi_unit_is_rx_samples_enable;	\/* adi,rssi-unit-is-rx-samples-enable *\/$/;"	m	struct:__anon2
rssi_wait	ad9361.h	/^	uint32_t rssi_wait;$/;"	m	struct:rssi_control
rssi_wait	ad9361_api.h	/^	uint32_t	rssi_wait;	\/* adi,rssi-wait *\/$/;"	m	struct:__anon2
rx	ad9361_api.h	/^	uint32_t rx;			\/* 1, 2, 3(both) *\/$/;"	m	struct:__anon3
rx1_mode	ad9361.h	/^	enum rf_gain_ctrl_mode rx1_mode;$/;"	m	struct:gain_control	typeref:enum:gain_control::rf_gain_ctrl_mode
rx1rx2_phase_inversion_en	ad9361.h	/^	bool			rx1rx2_phase_inversion_en;$/;"	m	struct:ad9361_phy_platform_data
rx1rx2_phase_inversion_en	ad9361_api.h	/^	uint8_t		rx1rx2_phase_inversion_en;	\/* adi,rx1-rx2-phase-inversion-enable *\/$/;"	m	struct:__anon2
rx2_mode	ad9361.h	/^	enum rf_gain_ctrl_mode rx2_mode;$/;"	m	struct:gain_control	typeref:enum:gain_control::rf_gain_ctrl_mode
rx2tx2	ad9361.h	/^	bool			rx2tx2;$/;"	m	struct:ad9361_phy_platform_data
rx2tx2	adc_core.h	/^	bool rx2tx2;$/;"	m	struct:adc_state
rx2tx2	dac_core.h	/^	bool					rx2tx2;$/;"	m	struct:dds_state
rx_channel_swap_enable	ad9361_api.h	/^	uint8_t		rx_channel_swap_enable;	\/* adi,rx-channel-swap-enable *\/$/;"	m	struct:__anon2
rx_clk_data_delay	ad9361.h	/^	uint8_t			rx_clk_data_delay;$/;"	m	struct:port_control
rx_coef	ad9361_api.h	/^	int16_t rx_coef[128];$/;"	m	struct:__anon3
rx_coef_size	ad9361_api.h	/^	uint8_t rx_coef_size;$/;"	m	struct:__anon3
rx_data_clock_delay	ad9361_api.h	/^	uint32_t	rx_data_clock_delay;	\/* adi,rx-data-clock-delay *\/$/;"	m	struct:__anon2
rx_data_delay	ad9361_api.h	/^	uint32_t	rx_data_delay;	\/* adi,rx-data-delay *\/$/;"	m	struct:__anon2
rx_dec	ad9361_api.h	/^	uint32_t rx_dec;		\/* 1, 2, 4 *\/$/;"	m	struct:__anon3
rx_eq_2tx	ad9361.h	/^	bool			rx_eq_2tx;$/;"	m	struct:ad9361_rf_phy
rx_fastlock_delay_ns	ad9361.h	/^	uint32_t			rx_fastlock_delay_ns;$/;"	m	struct:ad9361_phy_platform_data
rx_fastlock_delay_ns	ad9361_api.h	/^	uint32_t	rx_fastlock_delay_ns;	\/* adi,rx-fastlock-delay-ns *\/$/;"	m	struct:__anon2
rx_fastlock_pincontrol_enable	ad9361_api.h	/^	uint8_t		rx_fastlock_pincontrol_enable;	\/* adi,rx-fastlock-pincontrol-enable *\/$/;"	m	struct:__anon2
rx_fir_config	fmcomms2_default_parameters.h	/^AD9361_RXFIRConfig rx_fir_config = {	\/\/ BPF PASSBAND 3\/20 fs to 1\/4 fs$/;"	v
rx_fir_config	main.c	/^AD9361_RXFIRConfig rx_fir_config = {	\/\/ BPF PASSBAND 3\/20 fs to 1\/4 fs$/;"	v
rx_fir_dec	ad9361.h	/^	uint8_t			rx_fir_dec;$/;"	m	struct:ad9361_rf_phy
rx_fir_ntaps	ad9361.h	/^	uint8_t			rx_fir_ntaps;$/;"	m	struct:ad9361_rf_phy
rx_frame_pulse_mode_enable	ad9361_api.h	/^	uint8_t		rx_frame_pulse_mode_enable;	\/* adi,rx-frame-pulse-mode-enable *\/$/;"	m	struct:__anon2
rx_gain	ad9361.h	/^	struct rx_gain_info rx_gain[RXGAIN_TBLS_END];$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::rx_gain_info
rx_gain	ad9361_api.h	/^	int32_t rx_gain;		\/* -12, -6, 0, 6 *\/$/;"	m	struct:__anon3
rx_gain_info	ad9361.h	/^struct rx_gain_info {$/;"	s
rx_gain_table_name	ad9361.h	/^enum rx_gain_table_name {$/;"	g
rx_gain_table_type	ad9361.h	/^enum rx_gain_table_type {$/;"	g
rx_path_clks	ad9361.h	/^	uint32_t		rx_path_clks[NUM_RX_CLOCKS];$/;"	m	struct:ad9361_phy_platform_data
rx_path_clock_frequencies	ad9361_api.h	/^	uint32_t	rx_path_clock_frequencies[6];	\/* adi,rx-path-clock-frequencies *\/$/;"	m	struct:__anon2
rx_rf_port_input_select	ad9361_api.h	/^	uint32_t	rx_rf_port_input_select;	\/* adi,rx-rf-port-input-select *\/$/;"	m	struct:__anon2
rx_synth_freq	ad9361.h	/^	uint64_t			rx_synth_freq;$/;"	m	struct:ad9361_phy_platform_data
rx_synthesizer_frequency_hz	ad9361_api.h	/^	uint64_t	rx_synthesizer_frequency_hz;	\/* adi,rx-synthesizer-frequency-hz *\/$/;"	m	struct:__anon2
rxbbf_div	ad9361.h	/^	uint32_t			rxbbf_div;$/;"	m	struct:ad9361_rf_phy
save_profile	ad9361.h	/^	uint8_t save_profile;$/;"	m	struct:ad9361_fastlock
scratch_reg	util.h	/^	uint32_t				scratch_reg[16];$/;"	m	struct:axiadc_converter
set_dds_tx1_tone1_freq	command.c	/^void set_dds_tx1_tone1_freq(double* param, char param_no)	\/\/ dds_tx1_tone1_freq=$/;"	f
set_dds_tx1_tone1_phase	command.c	/^void set_dds_tx1_tone1_phase(double* param, char param_no)	\/\/ dds_tx1_tone1_phase=$/;"	f
set_dds_tx1_tone1_scale	command.c	/^void set_dds_tx1_tone1_scale(double* param, char param_no)	\/\/ dds_tx1_tone1_scale=$/;"	f
set_dds_tx1_tone2_freq	command.c	/^void set_dds_tx1_tone2_freq(double* param, char param_no)	\/\/ dds_tx1_tone2_freq=$/;"	f
set_dds_tx1_tone2_phase	command.c	/^void set_dds_tx1_tone2_phase(double* param, char param_no)	\/\/ dds_tx1_tone2_phase=$/;"	f
set_dds_tx1_tone2_scale	command.c	/^void set_dds_tx1_tone2_scale(double* param, char param_no)	\/\/ dds_tx1_tone2_scale=$/;"	f
set_dds_tx2_tone1_freq	command.c	/^void set_dds_tx2_tone1_freq(double* param, char param_no)	\/\/ dds_tx2_tone1_freq=$/;"	f
set_dds_tx2_tone1_phase	command.c	/^void set_dds_tx2_tone1_phase(double* param, char param_no)	\/\/ dds_tx2_tone1_phase=$/;"	f
set_dds_tx2_tone1_scale	command.c	/^void set_dds_tx2_tone1_scale(double* param, char param_no)	\/\/ dds_tx2_tone1_scale=$/;"	f
set_dds_tx2_tone2_freq	command.c	/^void set_dds_tx2_tone2_freq(double* param, char param_no)	\/\/ dds_tx2_tone2_freq=$/;"	f
set_dds_tx2_tone2_phase	command.c	/^void set_dds_tx2_tone2_phase(double* param, char param_no)	\/\/ dds_tx2_tone2_phase=$/;"	f
set_dds_tx2_tone2_scale	command.c	/^void set_dds_tx2_tone2_scale(double* param, char param_no)	\/\/ dds_tx2_tone2_scale=$/;"	f
set_full_table_gain	ad9361.c	/^static int32_t set_full_table_gain(struct ad9361_rf_phy *phy, uint32_t idx_reg,$/;"	f	file:
set_rx1_gc_mode	command.c	/^void set_rx1_gc_mode(double* param, char param_no) \/\/ "rx1_gc_mode=" command$/;"	f
set_rx1_rf_gain	command.c	/^void set_rx1_rf_gain(double* param, char param_no) \/\/ "rx1_rf_gain=" command$/;"	f
set_rx2_gc_mode	command.c	/^void set_rx2_gc_mode(double* param, char param_no) \/\/ "rx2_gc_mode=" command$/;"	f
set_rx2_rf_gain	command.c	/^void set_rx2_rf_gain(double* param, char param_no) \/\/ "rx2_rf_gain=" command$/;"	f
set_rx_fir_en	command.c	/^void set_rx_fir_en(double* param, char param_no) \/\/ "rx_fir_en=" command$/;"	f
set_rx_lo_freq	command.c	/^void set_rx_lo_freq(double* param, char param_no) \/\/ "rx_lo_freq=" command$/;"	f
set_rx_rf_bandwidth	command.c	/^void set_rx_rf_bandwidth(double* param, char param_no) \/\/ "rx_rf_bandwidth=" command$/;"	f
set_rx_samp_freq	command.c	/^void set_rx_samp_freq(double* param, char param_no) \/\/ "rx_samp_freq=" command$/;"	f
set_split_table_gain	ad9361.c	/^static int32_t set_split_table_gain(struct ad9361_rf_phy *phy, uint32_t idx_reg,$/;"	f	file:
set_tx1_attenuation	command.c	/^void set_tx1_attenuation(double* param, char param_no) \/\/ "tx1_attenuation=" command$/;"	f
set_tx2_attenuation	command.c	/^void set_tx2_attenuation(double* param, char param_no) \/\/ "tx1_attenuation=" command$/;"	f
set_tx_fir_en	command.c	/^void set_tx_fir_en(double* param, char param_no) \/\/ "tx_fir_en=" command$/;"	f
set_tx_lo_freq	command.c	/^void set_tx_lo_freq(double* param, char param_no) \/\/ "tx_lo_freq=" command$/;"	f
set_tx_rf_bandwidth	command.c	/^void set_tx_rf_bandwidth(double* param, char param_no) \/\/ "tx_rf_bandwidth=" command$/;"	f
set_tx_samp_freq	command.c	/^void set_tx_samp_freq(double* param, char param_no) \/\/ "tx_samp_freq=" command$/;"	f
settling_delay_ns	ad9361.h	/^	uint32_t			settling_delay_ns;$/;"	m	struct:elna_control
show_invalid_param_message	command.c	/^void show_invalid_param_message(unsigned char cmd_no)$/;"	f
sine_lut	dac_core.c	/^const uint16_t sine_lut[32] = {$/;"	v
single_data_rate_enable	ad9361_api.h	/^	uint8_t		single_data_rate_enable;	\/* adi,single-data-rate-enable *\/$/;"	m	struct:__anon2
single_port_mode_enable	ad9361_api.h	/^	uint8_t		single_port_mode_enable;	\/* adi,single-port-mode-enable *\/$/;"	m	struct:__anon2
size	ad9361.h	/^	uint8_t size;$/;"	m	struct:ad9361_debugfs_entry
snprintf	util.h	115;"	d
source	ad9361.h	/^	enum ad9361_clocks 	source;$/;"	m	struct:refclk_scale	typeref:enum:refclk_scale::ad9361_clocks
spi	ad9361.h	/^	struct spi_device	*spi;$/;"	m	struct:refclk_scale	typeref:struct:refclk_scale::spi_device
spi	ad9361.h	/^	struct spi_device 	*spi;$/;"	m	struct:ad9361_rf_phy	typeref:struct:ad9361_rf_phy::spi_device
spi_config	platform.c	/^XSpiPs_Config	*spi_config;$/;"	v
spi_config	platform.c	/^XSpi_Config		*spi_config;$/;"	v
spi_device	util.h	/^struct spi_device {$/;"	s
spi_init	platform.c	/^int32_t spi_init(uint32_t device_id,$/;"	f
spi_instance	platform.c	/^XSpi			spi_instance;$/;"	v
spi_instance	platform.c	/^XSpiPs			spi_instance;$/;"	v
spi_read	platform.c	/^int32_t spi_read(struct spi_device *spi,$/;"	f
spi_write_then_read	platform.c	/^int spi_write_then_read(struct spi_device *spi,$/;"	f
split_gain_table	ad9361.c	/^static const uint8_t split_gain_table[RXGAIN_TBLS_END][SIZE_SPLIT_TABLE][3] =$/;"	v	file:
split_gain_table_mode_enable	ad9361_api.h	/^	uint8_t		split_gain_table_mode_enable;	\/* adi,split-gain-table-mode-enable *\/$/;"	m	struct:__anon2
split_gt	ad9361.h	/^	bool			split_gt;$/;"	m	struct:ad9361_phy_platform_data
ssize_t	util.h	/^typedef SSIZE_T ssize_t;$/;"	t
starting_gain_db	ad9361.h	/^	int32_t starting_gain_db;$/;"	m	struct:rx_gain_info
strsep	util.h	114;"	d
swap_ports_enable	ad9361_api.h	/^	uint8_t		swap_ports_enable;	\/* adi,swap-ports-enable *\/$/;"	m	struct:__anon2
symbol	ad9361.h	/^	uint32_t symbol;		\/* Runtime RSSI *\/$/;"	m	struct:rf_rssi
sync_for_gain_counter_en	ad9361.h	/^	bool sync_for_gain_counter_en; \/* 0x128:4 !Hybrid *\/$/;"	m	struct:gain_control
tbl_type	ad9361.h	/^	enum rx_gain_table_type tbl_type;$/;"	m	struct:rx_gain_info	typeref:enum:rx_gain_info::rx_gain_table_type
tdd_skip_vco_cal	ad9361.h	/^	bool			tdd_skip_vco_cal;$/;"	m	struct:ad9361_phy_platform_data
tdd_skip_vco_cal_enable	ad9361_api.h	/^	uint8_t		tdd_skip_vco_cal_enable;		\/* adi,tdd-skip-vco-cal-enable *\/$/;"	m	struct:__anon2
tdd_use_dual_synth	ad9361.h	/^	bool			tdd_use_dual_synth;$/;"	m	struct:ad9361_phy_platform_data
tdd_use_dual_synth_mode_enable	ad9361_api.h	/^	uint8_t		tdd_use_dual_synth_mode_enable;	\/* adi,tdd-use-dual-synth-mode-enable *\/$/;"	m	struct:__anon2
tdd_use_fdd_tables	ad9361.h	/^	bool			tdd_use_fdd_tables;$/;"	m	struct:ad9361_phy_platform_data
tdd_use_fdd_vco_tables_enable	ad9361_api.h	/^	uint8_t		tdd_use_fdd_vco_tables_enable;	\/* adi,tdd-use-fdd-vco-tables-enable *\/$/;"	m	struct:__anon2
temp_sense_decimation	ad9361_api.h	/^	uint32_t	temp_sense_decimation;	\/* adi,temp-sense-decimation *\/$/;"	m	struct:__anon2
temp_sense_measurement_interval_ms	ad9361_api.h	/^	uint16_t	temp_sense_measurement_interval_ms;	\/* adi,temp-sense-measurement-interval-ms *\/$/;"	m	struct:__anon2
temp_sense_offset_signed	ad9361_api.h	/^	int8_t		temp_sense_offset_signed;	\/* adi,temp-sense-offset-signed *\/$/;"	m	struct:__anon2
temp_sense_periodic_measurement_enable	ad9361_api.h	/^	uint8_t		temp_sense_periodic_measurement_enable;	\/* adi,temp-sense-periodic-measurement-enable *\/$/;"	m	struct:__anon2
temp_sensor_decimation	ad9361.h	/^	uint32_t			temp_sensor_decimation;$/;"	m	struct:auxadc_control
temp_time_inteval_ms	ad9361.h	/^	uint32_t			temp_time_inteval_ms;$/;"	m	struct:auxadc_control
tia_index	ad9361.h	/^	uint32_t tia_index;		\/* TIA Index (Split GT mode only) *\/$/;"	m	struct:rf_rx_gain
tia_table	ad9361.c	/^static const int8_t tia_table[] = { -6, 0 };$/;"	v	file:
true	common.h	51;"	d
trx_fastlock_pinctrl_en	ad9361.h	/^	bool			trx_fastlock_pinctrl_en[2];$/;"	m	struct:ad9361_phy_platform_data
trx_synth_max_fref	ad9361.h	/^	uint32_t		trx_synth_max_fref;$/;"	m	struct:ad9361_phy_platform_data
trx_synthesizer_target_fref_overwrite_hz	ad9361_api.h	/^	uint32_t	trx_synthesizer_target_fref_overwrite_hz;	\/* adi,trx-synthesizer-target-fref-overwrite-hz *\/$/;"	m	struct:__anon2
two_rx_two_tx_mode_enable	ad9361_api.h	/^	uint8_t		two_rx_two_tx_mode_enable;	\/* adi,2rx-2tx-mode-enable *\/$/;"	m	struct:__anon2
two_t_two_r_timing_enable	ad9361_api.h	/^	uint8_t		two_t_two_r_timing_enable;	\/* adi,2t2r-timing-enable *\/$/;"	m	struct:__anon2
tx	ad9361_api.h	/^	uint32_t tx;			\/* 1, 2, 3(both) *\/$/;"	m	struct:__anon4
tx1_mon_front_end_gain	ad9361.h	/^	uint8_t tx1_mon_front_end_gain;$/;"	m	struct:tx_monitor_control
tx1_mon_front_end_gain	ad9361_api.h	/^	uint32_t	tx1_mon_front_end_gain;	\/* adi,txmon-1-front-end-gain *\/$/;"	m	struct:__anon2
tx1_mon_lo_cm	ad9361.h	/^	uint8_t tx1_mon_lo_cm;$/;"	m	struct:tx_monitor_control
tx1_mon_lo_cm	ad9361_api.h	/^	uint32_t	tx1_mon_lo_cm;	\/* adi,txmon-1-lo-cm *\/$/;"	m	struct:__anon2
tx2_mon_front_end_gain	ad9361.h	/^	uint8_t tx2_mon_front_end_gain;$/;"	m	struct:tx_monitor_control
tx2_mon_front_end_gain	ad9361_api.h	/^	uint32_t	tx2_mon_front_end_gain;	\/* adi,txmon-2-front-end-gain *\/$/;"	m	struct:__anon2
tx2_mon_lo_cm	ad9361.h	/^	uint8_t tx2_mon_lo_cm;$/;"	m	struct:tx_monitor_control
tx2_mon_lo_cm	ad9361_api.h	/^	uint32_t	tx2_mon_lo_cm;	\/* adi,txmon-2-lo-cm *\/$/;"	m	struct:__anon2
tx_atten	ad9361.h	/^	int32_t			tx_atten;$/;"	m	struct:ad9361_phy_platform_data
tx_attenuation_mdB	ad9361_api.h	/^	int32_t		tx_attenuation_mdB;	\/* adi,tx-attenuation-mdB *\/$/;"	m	struct:__anon2
tx_channel_swap_enable	ad9361_api.h	/^	uint8_t		tx_channel_swap_enable;	\/* adi,tx-channel-swap-enable *\/$/;"	m	struct:__anon2
tx_clk_data_delay	ad9361.h	/^	uint8_t			tx_clk_data_delay;$/;"	m	struct:port_control
tx_coef	ad9361_api.h	/^	int16_t tx_coef[128];$/;"	m	struct:__anon4
tx_coef_size	ad9361_api.h	/^	uint8_t tx_coef_size;$/;"	m	struct:__anon4
tx_data_delay	ad9361_api.h	/^	uint32_t	tx_data_delay;	\/* adi,tx-data-delay *\/$/;"	m	struct:__anon2
tx_fastlock_delay_ns	ad9361.h	/^	uint32_t			tx_fastlock_delay_ns;$/;"	m	struct:ad9361_phy_platform_data
tx_fastlock_delay_ns	ad9361_api.h	/^	uint32_t	tx_fastlock_delay_ns;	\/* adi,tx-fastlock-delay-ns *\/$/;"	m	struct:__anon2
tx_fastlock_pincontrol_enable	ad9361_api.h	/^	uint8_t		tx_fastlock_pincontrol_enable;	\/* adi,tx-fastlock-pincontrol-enable *\/$/;"	m	struct:__anon2
tx_fb_clock_delay	ad9361_api.h	/^	uint32_t	tx_fb_clock_delay;	\/* adi,tx-fb-clock-delay *\/$/;"	m	struct:__anon2
tx_fir_config	fmcomms2_default_parameters.h	/^AD9361_TXFIRConfig tx_fir_config = {	\/\/ BPF PASSBAND 3\/20 fs to 1\/4 fs$/;"	v
tx_fir_config	main.c	/^AD9361_TXFIRConfig tx_fir_config = {	\/\/ BPF PASSBAND 3\/20 fs to 1\/4 fs$/;"	v
tx_fir_int	ad9361.h	/^	uint8_t			tx_fir_int;$/;"	m	struct:ad9361_rf_phy
tx_fir_ntaps	ad9361.h	/^	uint8_t			tx_fir_ntaps;$/;"	m	struct:ad9361_rf_phy
tx_gain	ad9361_api.h	/^	int32_t tx_gain;		\/* -6, 0 *\/$/;"	m	struct:__anon4
tx_int	ad9361_api.h	/^	uint32_t tx_int;		\/* 1, 2, 4 *\/$/;"	m	struct:__anon4
tx_mon_delay	ad9361.h	/^	uint16_t tx_mon_delay;$/;"	m	struct:tx_monitor_control
tx_mon_delay	ad9361_api.h	/^	uint32_t	tx_mon_delay;	\/* adi,txmon-delay *\/$/;"	m	struct:__anon2
tx_mon_duration	ad9361.h	/^	uint16_t tx_mon_duration;$/;"	m	struct:tx_monitor_control
tx_mon_duration	ad9361_api.h	/^	uint32_t	tx_mon_duration;	\/* adi,txmon-duration *\/$/;"	m	struct:__anon2
tx_mon_track_en	ad9361.h	/^	bool tx_mon_track_en;$/;"	m	struct:tx_monitor_control
tx_mon_track_en	ad9361_api.h	/^	uint8_t		tx_mon_track_en;	\/* adi,txmon-dc-tracking-enable *\/$/;"	m	struct:__anon2
tx_monitor_control	ad9361.h	/^struct tx_monitor_control {$/;"	s
tx_path_clks	ad9361.h	/^	uint32_t		tx_path_clks[NUM_TX_CLOCKS];$/;"	m	struct:ad9361_phy_platform_data
tx_path_clock_frequencies	ad9361_api.h	/^	uint32_t	tx_path_clock_frequencies[6];	\/* adi,tx-path-clock-frequencies *\/$/;"	m	struct:__anon2
tx_rf_port_input_select	ad9361_api.h	/^	uint32_t	tx_rf_port_input_select;	\/* adi,tx-rf-port-input-select *\/$/;"	m	struct:__anon2
tx_synth_freq	ad9361.h	/^	uint64_t			tx_synth_freq;$/;"	m	struct:ad9361_phy_platform_data
tx_synthesizer_frequency_hz	ad9361_api.h	/^	uint64_t	tx_synthesizer_frequency_hz;	\/* adi,tx-synthesizer-frequency-hz *\/$/;"	m	struct:__anon2
txmon_ctrl	ad9361.h	/^	struct tx_monitor_control txmon_ctrl;$/;"	m	struct:ad9361_phy_platform_data	typeref:struct:ad9361_phy_platform_data::tx_monitor_control
txmon_tdd_en	ad9361.h	/^	bool			txmon_tdd_en;$/;"	m	struct:ad9361_rf_phy
uart_init	console.c	/^char uart_init(unsigned long baudRate)$/;"	f
uart_read_char	console.c	/^void uart_read_char(char * data)$/;"	f
uart_write_char	console.c	/^void uart_write_char(char data)$/;"	f
uart_write_string	console.c	/^void uart_write_string(const char* string)$/;"	f
udelay	platform.c	/^void udelay(unsigned long usecs)$/;"	f
update_tx_gain_in_alert_enable	ad9361_api.h	/^	uint8_t		update_tx_gain_in_alert_enable;	\/* adi,update-tx-gain-in-alert-enable *\/$/;"	m	struct:__anon2
update_tx_gain_via_alert	ad9361.h	/^	bool			update_tx_gain_via_alert;$/;"	m	struct:ad9361_phy_platform_data
use_ext_rx_lo	ad9361.h	/^	bool			use_ext_rx_lo;$/;"	m	struct:ad9361_phy_platform_data
use_ext_tx_lo	ad9361.h	/^	bool			use_ext_tx_lo;$/;"	m	struct:ad9361_phy_platform_data
use_extclk	ad9361.h	/^	bool 			use_extclk;$/;"	m	struct:ad9361_phy_platform_data
usleep	platform.c	/^static inline void usleep(unsigned long usleep)$/;"	f	file:
val	ad9361.h	/^	uint32_t val;$/;"	m	struct:ad9361_debugfs_entry
xo_disable_use_ext_refclk_enable	ad9361_api.h	/^	uint8_t		xo_disable_use_ext_refclk_enable;	\/* adi,xo-disable-use-ext-refclk-enable *\/$/;"	m	struct:__anon2
zmalloc	util.c	/^void *zmalloc(size_t size)$/;"	f
